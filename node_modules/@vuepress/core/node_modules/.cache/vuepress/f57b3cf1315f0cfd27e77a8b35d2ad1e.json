{"remainingRequest":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/Macbook/Documents/projects/remotework2020_new/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/Macbook/Documents/projects/remotework2020_new/docs/introduction.md?vue&type=template&id=81f30596&","dependencies":[{"path":"/Users/Macbook/Documents/projects/remotework2020_new/docs/introduction.md","mtime":1576067802917},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/vue-loader/lib/index.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/@vuepress/markdown-loader/index.js","mtime":1576060144870}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJpbnRyb2R1Y3Rpb24iPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjaW50cm9kdWN0aW9uIj4jPC9hPiBJbnRyb2R1Y3Rpb248L2gxPgo8cD5Db21wYW5pZXMgYXJlIGFsd2F5cyBvbiB0aGUgbG9va291dCBmb3IgbmV3IGxldmVycyB0byBkcml2ZSBncm93dGggYW5kIHByb2ZpdGFiaWxpdHkuIEluIHRoaXMgY29udGV4dCwgaW5ub3ZhdGlvbiBpbiB0YWxlbnQgbWFuYWdlbWVudCBoYXMgYWx3YXlzIGJlZW4gYW1vbmdzdCB0aGUgbW9zdCBpbXBvcnRhbnQgbGV2ZXJzLiBGcm9tIDM2MC1kZWdyZWUgZmVlZGJhY2sgaW4gdGhlIDE5NTBzLCAmbHQ7eHgmZ3Q7LCB0byBvZmZzaG9yaW5nIGJ1c2luZXNzIGZ1bmN0aW9ucyBmb3IgY29zdCBzYXZpbmdzIGluIGxhdGUgMTk5MHMsIGZpcm1zIGhhdmUgY29uc3RhbnRseSBhZGFwdGVkIHRoZW1zZWx2ZXMgdG8gdGhlIG5lZWRzIG9mIHRoZSB0YWxlbnQgbWFya2V0LiBOb3csIGl0IGlzIHRpbWUgZm9yIHRoZW0gdG8gZW1icmFjZSByZW1vdGUgd29yayB3aG9sZWhlYXJ0ZWRseS48L3A+CjxoMiBpZD0iaGlzdG9yeS1vZi1yZW1vdGUtd29yayI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNoaXN0b3J5LW9mLXJlbW90ZS13b3JrIj4jPC9hPiA8c3Ryb25nPkhpc3Rvcnkgb2YgcmVtb3RlIHdvcms8L3N0cm9uZz48L2gyPgo8cD5Qb3N0IHRoZSBXV0lJLCBhcyB0aGUgd29ybGQgZWNvbm9teSBzdGFydGVkIHRvIGdhaW4gbW9tZW50dW0sIGxhcmdlIG9mZmljZXMgd2l0aCBjdWJpY2xlcyBzdGFydGVkIHRvIGFwcGVhci4gV2l0aCBwaG9uZXMsIGNhcnMgYW5kIHBsYW5lcyBiZWNvbWluZyBtYWluc3RyZWFtLCBpbnRlcm5hdGlvbmFsIGV4cGFuc2lvbiBzdGFydGVkIG9uY2UgYWdhaW4sIHdpdGggY29tcGFuaWVzIGhhdmluZyBwcmVzZW5jZSBhY3Jvc3MgbXVsdGlwbGUgY291bnRyaWVzLiBBdCB0aGlzIHBvaW50IG9mIHRpbWUsIGNvbXBhbnkgb2ZmaWNlcyB3ZXJlIGFscmVhZHkgd29ya2luZyByZW1vdGVseSB0byBvbmUtYW5vdGhlci48L3A+CjxwPkJ1dCBpdCB3YXNuJ3QgdW50aWwgdGhlIGFkdmVudCBvZiBjb21wdXRlcnMsIHdoaWNoIGFjY2VsZXJhdGVkIHRoZSBncm93dGggb2YgdGhlIGtub3dsZWRnZSBlY29ub215LCBhbmQgbGF0ZXIgdGhlIGludGVybmV0LCB0aGF0ICZxdW90O3JlbW90ZSB3b3JrJnF1b3Q7IGFzIHdlIHNlZSB0b2RheSBzdGFydGVkIHRvIGFwcGVhci4gVGhlc2UgdGVjaG5vbG9naWVzIGFsbG93ZWQgaW5kaXZpZHVhbHMgdG8gY29sbGFib3JhdGUgYW5kIGNvbnRyaWJ1dGUgd2l0aG91dCB0aGUgbmVlZCB0byBiZSBpbiB0aGUgc2FtZSBsb2NhdGlvbi48L3A+CjxwPk1hc3NpdmUgcHJvbGlmZXJhdGlvbiwgaW1wcm92ZWQgcmVsaWFiaWxpdHkgYW5kIGVhc3kgYWNjZXNzIG9mIHRoZXNlIHRlY2hub2xvZ2llcyBoYXMgc2luY2UgIG1hZGUgcmVtb3RlIHdvcmsgZXZvbHZlIGZyb20gYW4gb2NjYXNpb25hbCBlbXBsb3llZSBuZWNlc3NpdHksIHRvIGNvbXBhbnktcHJvdmlkZWQgcGVyayB0byBub3csIGEgc2VyaW91cyB3YXkgb2Ygd29ya2luZy48L3A+CjxoMiBpZD0iZW5jb3VyYWdpbmctc3RhdHMtZm9yLXJlbW90ZS13b3JrIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2VuY291cmFnaW5nLXN0YXRzLWZvci1yZW1vdGUtd29yayI+IzwvYT4gPHN0cm9uZz5FbmNvdXJhZ2luZyBzdGF0cyBmb3IgcmVtb3RlIHdvcms8L3N0cm9uZz48L2gyPgo8b2w+CjxsaT4KPHA+TGV0J3MganVzdCBzdGFydCB3aXRoIG9uZSBvZiB0aGUgbW9zdCBtaW5kIGJvZ2dsaW5nIHN0YXRzIHJlbGVhc2VkIHJlY2VudGx5IGJ5IFRoZSBFY29ub21pc3QgLSB0aGVyZSBjb3VsZCBiZSBvbmUgYmlsbGlvbiByZW1vdGUgd29ya2VycyBieSB0aGUgeWVhciAyMDM1ITwvcD4KPC9saT4KPGxpPgo8cD5TbywgZG8gd2UgaGF2ZSB0byB3YWl0IHRpbGwgMjAzNSB0byBzZWUgYSBtYXNzaXZlIGNoYW5nZSBpbiBwZW9wbGUncyBwcmVmZXJlbmNlcy4gQWJzb2x1dGVseSBub3QhIEluIHRoaXMgbmV4dCAyLTMgeWVhcnMsIGFuIGVzdGltYXRlZCA1OSBtaWxsaW9uIHBlb3BsZSBhcmUgY29uc2lkZXJpbmcgdGhlIGxpZmUgb2YgYSBkaWdpdGFsIG5vbWFkIPCfmLU8L3A+CjwvbGk+CjxsaT4KPHA+T24gdGhlIGVtcGxveWVycycgc2lkZSwgNDMlIGluIHRoZSBVUyBzYWlkIHRoZXkgcGxhbiB0byBhbGxvdyB0aGVpciBlbXBsb3llZXMgdG8gaGF2ZSBtb3JlIHJlbW90ZSB3b3JraW5nIG9wcG9ydHVuaXRpZXMgaW4gdGhlIG5leHQgeWVhciDwn5iNLjwvcD4KPC9saT4KPGxpPgo8cD5UaGlzIGluY3JlYXNlIGluIHJlbW90ZSBpbnRlcmVzdCBhbW9uZ3N0IGVtcGxveWVycyBjYW4gYmUgb2JzZXJ2ZWQgaW4gdGhlIHN0ZWVwIHJpc2UgaW4gam9icyBwb3N0ZWQgb24gcmVtb3RlIGpvYiBib2FyZHMgJmFtcDsgcG9ydGFscyBzdWNoIGFzIFdlIFdvcmsgUmVtb3RlbHkgJmFtcDsgRmxleGpvYnMuIFRoZSBmb3JtZXIgaXMgdXAgZnJvbSAzMTcgam9icyBpbiAyMDEzIHRvIGEgd2hvcHBpbmcgMjM4OCBpbiAyMDE4IPCfk4guIEFzIGZvciBGbGV4Sm9icywgaXQgc2F3IGEgNTIlIGluY3JlYXNlIGluIHRlbGVjb21tdXRlLWZyaWVuZGx5IGpvYnMgcG9zdGVkIGluIHRoZSBwYXN0IHR3byB5ZWFycy48L3A+CjwvbGk+Cjwvb2w+CjxoMiBpZD0iaW1wb3J0YW50LWxhbmRtYXJrcy1pbi1yZW1vdGUtd29yay0yMDIwIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2ltcG9ydGFudC1sYW5kbWFya3MtaW4tcmVtb3RlLXdvcmstMjAyMCI+IzwvYT4gSW1wb3J0YW50IExhbmRtYXJrcyBpbiBSZW1vdGUgV29yayAyMDIwPC9oMj4KPHVsPgo8bGk+R2l0bGFiJ3MgSVBPIGluIExhdGUgMjAyMDwvbGk+CjxsaT5JbnZpc2lvbiAmYW1wOyBHaXRsYWIgY3Jvc3MgdGhlIDEwMDAgZW1wbG95ZWVzIG1hcms8L2xpPgo8bGk+Qm9zdG9uLCBWZXJtb250LCBUdWxzYSBhbW9uZyBvdGhlciBjaXRpZXMgYW5kIHN0YXRlcyBpbiB0aGUgVVMgb2ZmZXIgaW5jZW50aXZlcyB0byByZW1vdGUgd29ya2VycyBpbiB0aGUgZm9ybSBvZiB0YXggYnJlYWtzIGFuZCByZWxvY2F0aW9uIHN1YnNpZGllczwvbGk+CjxsaT5Ub2t5byB0ZXN0cyBvdXQgYSB0cmlhbCByZW1vdGUgd29ya2luZyBwb2xpY3kgdG8gZW5jb3VyYWdlIGluZGl2aWR1YWxzIHRvIHdvcmsgZnJvbSBob21lIGFuZCB1bmJsb2NrIHRoZSBwdWJsaWMgdHJhbnNwb3J0IHN5c3RlbSBpbiBwcmVwYXJhdGlvbiBmb3IgMjAyMCBPbHltcGljIGdhbWVzPC9saT4KPGxpPlJlbW90ZSBGaXJzdCBDYXBpdGFsIG1ha2VzIGl0cyBmaXJzdCBmZXcgaW52ZXN0bWVudHM8L2xpPgo8L3VsPgo8aDIgaWQ9InR3ZWV0cy1hbmQtcXVvdGVzLWJ5LXRvcC1sZWFkZXJzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3R3ZWV0cy1hbmQtcXVvdGVzLWJ5LXRvcC1sZWFkZXJzIj4jPC9hPiA8c3Ryb25nPlR3ZWV0cyBhbmQgUXVvdGVzIGJ5IHRvcCBsZWFkZXJzPC9zdHJvbmc+PC9oMj4KPHA+JnF1b3Q7SWYgd2Ugd2VyZSB0byBzdGFydCBvdmVyIEkgd291bGQgaGF2ZSBidWlsdCBab29tIGZ1bGx5IHJlbW90ZS4gSXQncyB0b28gZXhwZW5zaXZlIGhlcmUgbm93LiZxdW90OzwvcD4KPHA+LSA8c3Ryb25nPkVyaWMgWXVhbiwgQ0VPIC0gWm9vbTwvc3Ryb25nPjwvcD4KPGJsb2NrcXVvdGU+CjxwPiZxdW90OyZsdDtRdW90ZSBhcm91bmQgZWFjaCBjb21wYW55IGJlaW5nIHZpYWJsZSBmb3IgcmVtb3RlIHdvcmtpbmcmZ3Q7IC0gRGFycmVuIE11cnBoLCBBbGwgUmVtb3RlIEN1bHR1cmUgQ3VyYXRvciAtIEdpdGxhYjwvcD4KPC9ibG9ja3F1b3RlPgo8aDIgaWQ9ImV4cGxvcmluZy10aGUtcmVtb3RlLXdvcmstMjAyMC1yZXBvcnQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZXhwbG9yaW5nLXRoZS1yZW1vdGUtd29yay0yMDIwLXJlcG9ydCI+IzwvYT4gRXhwbG9yaW5nIHRoZSBSZW1vdGUgV29yayAyMDIwIHJlcG9ydDwvaDI+CjxwPlRoZSBSZW1vdGUgV29yayAyMDIwIHJlcG9ydCBpcyBtZWFudCB0byBiZSBhIGNvbWJpbmF0aW9uIG9mIHRocmVlIGJyb2FkIHNlY3Rpb25zOjwvcD4KPHVsPgo8bGk+PHN0cm9uZz5TdGF0ZSBvZiBSZW1vdGUgV29yayAyMDIwPC9zdHJvbmc+OiBTdGF0cyAmYW1wOyBmaWd1cmVzIGJhc2VkIG9uIG91ciBzdXJ2ZXkgb2YgJmx0O3h4Jmd0OyByZW1vdGUgd29ya2VycyBmcm9tIEludmlzaW9uLCBHaXRsYWIsIERvaXN0IGFuZCBtYW55IG1vcmUgZGlzdHJpYnV0ZWQgdGVhbXMhPC9saT4KPGxpPjxzdHJvbmc+UmVtb3RlIHdvcmsgZ3VpZGU8L3N0cm9uZz46IE91ciBjb21tZW50YXJ5IG9uIHByZXNzaW5nIHRvcGljcyBhcm91bmQgcmVtb3RlIHdvcmsgYmFzZWQgb24gbGVhcm5pbmdzIGZyb20gaW50ZXJhY3Rpb25zIHdpdGggbGVhZGVycyBvZiBkaXN0cmlidXRlZCB0ZWFtcyBhbmQgc3VjY2Vzc2Z1bCByZW1vdGUgd29ya2Vycy48L2xpPgo8bGk+PHN0cm9uZz5Qb2RjYXN0cyAmYW1wOyBzdG9yaWVzPC9zdHJvbmc+OiBUaGUgYWN0dWFsIHNvdXJjZSBvZiB0cnV0aCBmb3IgdXMg8J+YgC4gVGhlIGNvbGxlY3Rpb24gb2YgcG9kY2FzdHMgd2l0aCBsZWFkZXJzIGZyb20gR2l0bGFiLCBJbnZpc2lvbiwgRG9pc3QsIFNjcmFwaW5naHViLCBGbGV4Sm9icywgZXRjLiBhbmQgY2hyb25pY2xlcyBvZiByZW1vdGUgd29ya2VycyAtIHRoZSBwZW9wbGUgd2UgaGF2ZSBsZWFybnQgdGhlIGludHJpY2FjaWVzIG9mIHJlbW90ZSB3b3JrIGZyb20hPC9saT4KPC91bD4KPHA+RWFjaCBvZiB0aGVzZSBzZWN0aW9ucyBoYXMgYmVlbiBmdXJ0aGVyIHN1Yi1kaXZpZGVkIGludG8gbW9yZSBmb2N1c2VkIHRvcGljcyB0aGF0IHdlIGhhdmUgdHJpZWQgdG8gdW5jb3Zlci4gVXNlIHRoZSBuYXZpZ2F0aW9uIG9uIHRoZSBsZWZ0IHRvIGNob29zZSBzcGVjaWZpYyBuYXJyYXRpdmVzIHRoYXQgaW50ZXJlc3QgeW91IPCfmKwhPC9wPgo8cD5Hb2VzIHdpdGhvdXQgc2F5aW5nIC0gaWYgeW91IGhhdmUgYW55IGZlZWRiYWNrLCBmZWVsIGZyZWUgdG8gZHJvcCBhIG1haWwgdG8gaHJpc2hpa2VzaEByZW1vdGUudG9vbHMuPC9wPgo8L0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yPgo="},null]}