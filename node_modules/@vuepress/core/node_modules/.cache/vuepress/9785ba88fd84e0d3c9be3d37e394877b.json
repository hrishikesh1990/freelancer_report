{"remainingRequest":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/Macbook/Documents/projects/FreelancerReport2020/docs/5-the-remote-working-chronicles.md?vue&type=template&id=6a1647d8&","dependencies":[{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/docs/5-the-remote-working-chronicles.md","mtime":1582710956428},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/vue-loader/lib/index.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/@vuepress/markdown-loader/index.js","mtime":1582710536446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PHA+PGltZyBzcmM9Ii9hc3NldHMvdGhlX3JlbW90ZV93b3JraW5nX2Nocm9uaWNsZXMucG5nIiBhbHQ9IiI+PC9wPgo8aDEgaWQ9InRoZS1yZW1vdGUtd29ya2luZy1jaHJvbmljbGVzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3RoZS1yZW1vdGUtd29ya2luZy1jaHJvbmljbGVzIj4jPC9hPiBUaGUgUmVtb3RlIFdvcmtpbmcgQ2hyb25pY2xlczwvaDE+CjxoMiBpZD0iXzEtYWJvdXQtY29va2luZy1wYXN0YS13cml0aW5nLWphdmFzY3JpcHQtYW5kLXdvcmtpbmctcmVtb3RlbHkiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzEtYWJvdXQtY29va2luZy1wYXN0YS13cml0aW5nLWphdmFzY3JpcHQtYW5kLXdvcmtpbmctcmVtb3RlbHkiPiM8L2E+ICMxOiBBYm91dCBjb29raW5nIHBhc3RhLCB3cml0aW5nIEphdmFTY3JpcHQgYW5kIHdvcmtpbmcgcmVtb3RlbHk8L2gyPgo8cD5GcmFuY2VzY28gZGVjaWRlZCB0byBwdXJzdWUgYSByZW1vdGUgY2FyZWVyIHdoaWxlIGluIENvbGxlZ2UgaXRzZWxmLiBQYXNzaW9uYXRlIGFib3V0IGNvb2tpbmcgKGV2ZXJ5dGhpbmcgbWVkaXRlcnJhbmVhbiksIGhlIGZlbGwgaW4gbG92ZSB3aXRoIFNpY2lseSwgd2hlbiBoZSB3ZW50IHRoZXJlIG9uIGEgc3VtbWVyIGJyZWFrLCBnaXZlbiB0aGUgYWNjZXNzIHRvIGZyZXNoIGluZ3JlZGllbnRzIGZvciBjb29raW5nIGFuZCB0aGUgZ29yZ2VvdXMgbmF0dXJhbCBsYW5kc2NhcGUuPC9wPgo8cD5TaWNpbHkgd2Fzbid0IGlkZWFsIGdpdmVuIGhlIGRpZG4ndCBldmVuIGhhdmUgaW50ZXJuZXQgYWNjZXNzLCBzbyBoZSBtb3ZlZCB0byBWYWxlbmNpYSwgU3BhaW4gYW5kIGhhcyBiZWVuIGluIGxvdmUgd2l0aCB0aGUgY2l0eSBldmVyIHNpbmNlLiBGcmFuY2VzY28gc3Ryb25nbHkgYmVsaWV2ZXMgdGhhdCB0byBiZSBzdWNjZXNzZnVsIGF0IHJlbW90ZSB3b3JrLCB5b3UgbmVlZCB0byBoYXZlIHRoZSByaWdodCBhdHRpdHVkZSBhbmQgYSBwcm9wZXIgc3RydWN0dXJlIChwbGFubmVkIGFuZCBpbXBvc2VkIGJ5IHlvdXJzZWxmKSB0byB5b3VyIGRheSBvciB3ZWVrLjwvcD4KPHA+PHU+RnVsbCBzdG9yeTwvdT46IDxhIGhyZWY9Imh0dHBzOi8vY29udGVudC5yZW1vdGUudG9vbHMvYWJvdXQtY29va2luZy1wYXN0YS13cml0aW5nLWphdmFzcmlwdC1hbmQtd29ya2luZy1yZW1vdGVseT9yZWY9UmVtb3RlV29yazIwMjAiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkFib3V0IGNvb2tpbmcgcGFzdGEsIHdyaXRpbmcgSmF2YVNjcmlwdCBhbmQgd29ya2luZyByZW1vdGVseTxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxoMiBpZD0iXzItZXgtZ29vZ2xlLWN1cnJlbnQtY29kYS1hcmNoaXRlY3Qtc2hhcmVzLXBlcnNvbmFsLXJlbW90ZS1zdG9yaWVzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18yLWV4LWdvb2dsZS1jdXJyZW50LWNvZGEtYXJjaGl0ZWN0LXNoYXJlcy1wZXJzb25hbC1yZW1vdGUtc3RvcmllcyI+IzwvYT4gIzI6IGV4LUdvb2dsZSwgY3VycmVudCBDb2RhIGFyY2hpdGVjdCBzaGFyZXMgcGVyc29uYWwgcmVtb3RlIHN0b3JpZXM8L2gyPgo8cD5BbMKgQ2hlbiBzaGFyZXPCoGhpcyBleHBlcmllbmNlcyBvZiB0cmFuc2l0aW9uaW5nIGZyb20gR29vZ2xlIHRvIGEgcmVtb3RlIHdvcmtpbmcgcm9sZS4gQSAmcXVvdDtkYXRhLWxvdmVyJnF1b3Q7LCBoZSBzdHVtYmxlZCBpbnRvIHJlbW90ZSB3b3JrIGJ1dCBoYXMgc2luY2UgYWxzbyBmYWxsZW4gaW4gbG92ZSB3aXRoIHdvcmtpbmcgcmVtb3RlbHkuIEhlIHN1cmVseSB3b3VsZCBsaWtlIHRvIGNhdGNoIG1vcmUgY2FzdWFsIGNvZmZlZXMg4piVwqB3aXRoIGhpcyBjby13b3JrZXJzLCB0aG91Z2guIERvIHJlYWQgaGlzIHN0b3J5IC0gaXQgaXMgZnVuLCByZWFsLCBhbmQsIGltcG9ydGFudGx5LCB2ZXJ5IGhlbHBmdWwhPC9wPgo8cD48dT5GdWxsIHN0b3J5PC91PjogPGEgaHJlZj0iaHR0cHM6Ly9jb250ZW50LnJlbW90ZS50b29scy9leC1nb29nbGUtY3VycmVudC1jb2RhLWFyY2hpdGVjdC1zaGFyZXMtcGVyc29uYWwtcmVtb3RlLXN0b3JpZXM/cmVmPVJlbW90ZVdvcmsyMDIwIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5leC1Hb29nbGUsIGN1cnJlbnQgQ29kYSBBcmNoaXRlY3Qgc2hhcmVzIHBlcnNvbmFsIHJlbW90ZSBzdG9yaWVzPE91dGJvdW5kTGluay8+PC9hPjwvcD4KPGgyIGlkPSJfMy10aGUtY29jb2Etbm9tYWQtc2hhcmVzLWhpcy1yZW1vdGUtd29yay1qb3VybmV5LW92ZXItMTAteWVhcnMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzMtdGhlLWNvY29hLW5vbWFkLXNoYXJlcy1oaXMtcmVtb3RlLXdvcmstam91cm5leS1vdmVyLTEwLXllYXJzIj4jPC9hPiAjMzogVGhlIENvY29hIE5vbWFkIHNoYXJlcyBoaXMgcmVtb3RlICh3b3JrKSBqb3VybmV5IG92ZXIgMTArIHllYXJzPC9oMj4KPHA+QWxvbmRvIG9yICh0aGUpIENvY29hIE5vbWFkIHRha2VzIHVzIHRocm91Z2ggMTAgeWVhcnMgb2YgaGlzIHJlbW90ZSAod29yaykgam91cm5leSB0aHJvdWdoIGJ1aWxkaW5nIGlPUyBhcHBzLCBiZWluZyBhIG1ha2VyLCBwb2RjYXN0ZXIgYW5kIG9mIGNvdXJzZSwgYSBkaWdpdGFsIG5vbWFkLiBTaW5jZSAyMDE2LCBoZSdzIHRyYXZlbGxlZCBtb3JlIHRoYW4gMzAgY291bnRyaWVzIGFuZCB3b3JrZWQgYXMgYSBmdWxsLXRpbWUgZW1wbG95ZWUsIGZyZWVsYW5jZXIgYW5kIGV2ZW4gYW4gZW50cmVwcmVuZXVyLiBBbG9uZG8gaXMgYWxzbyBub3cgd29ya2luZyBvbiBwcmVwYXJpbmcgdHJhaW5pbmcvIHRlYWNoaW5nIG1hdGVyaWFscyB0byBoZWxwIG90aGVycyBiZWNvbWUgc3VjY2Vzc2Z1bCBpbiB0cmFuc2l0aW9uaW5nIHRvIHJlbW90ZSB3b3JrLjwvcD4KPHA+PHU+RnVsbCBzdG9yeTwvdT46IDxhIGhyZWY9Imh0dHBzOi8vY29udGVudC5yZW1vdGUudG9vbHMvdGhlLWNvY29hLW5vbWFkLXNoYXJlcy1oaXMtcmVtb3RlLXdvcmstam91cm5leS1vdmVyLTEwLXllYXJzP3JlZj1SZW1vdGVXb3JrMjAyMCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+VGhlIENvY29hIE5vbWFkIHNoYXJlcyBoaXMgcmVtb3RlICh3b3JrKSBqb3VybmV5IG92ZXIgMTArIHllYXJzPE91dGJvdW5kTGluay8+PC9hPjwvcD4KPGgyIGlkPSJfNC1jcmVhdGluZy1tb2Rlcm4tcGl4ZWwtcGVyZmVjdC13ZWJzaXRlcy13aGlsZS1mcmVlbGFuY2luZy1yZW1vdGVseSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfNC1jcmVhdGluZy1tb2Rlcm4tcGl4ZWwtcGVyZmVjdC13ZWJzaXRlcy13aGlsZS1mcmVlbGFuY2luZy1yZW1vdGVseSI+IzwvYT4gIzQ6IENyZWF0aW5nIG1vZGVybiwgcGl4ZWwtcGVyZmVjdCB3ZWJzaXRlcyB3aGlsZSBmcmVlbGFuY2luZyAocmVtb3RlbHkpPC9oMj4KPHA+U2lsdmVzdGFyIGRlbHZlZCBpbnRvIHJlbW90ZSB3b3JraW5nIHdoZW4gaGUgd29ya2VkIG9uIGhpcyBmaXJzdCBmcmVlbGFuY2luZyBwcm9qZWN0LiBIZSBoYXMgbG92ZWQgYWxtb3N0IGV2ZXJ5IGFzcGVjdCBvZiByZW1vdGUgZXZlciBzaW5jZS4gSGUgc2F5cyBmaW5kaW5nIG5ldyBmcmVlbGFuY2UgZ2lncyBpbiB0aGUgaW5pdGlhbCBtb250aHMsIHdhcyB0aGUgYmlnZ2VzdCBzdHJ1Z2dsZSBpbiBoaXMgcmVtb3RlIGNhcmVlci4gSGUgaXMgdGhhbmtmdWwgaW4gYSB3YXkgdG8gaGF2ZSBnb25lIHRocm91Z2ggdGhpcyBwZXJpb2Qgc2luY2UgaXQgdGF1Z2h0IGhpbSB0aGF0IHJlbW90ZSB3b3JraW5nIHRha2VzIHRpbWUgdG8gbWFzdGVyLjwvcD4KPHA+PHU+RnVsbCBzdG9yeTwvdT46IDxhIGhyZWY9Imh0dHBzOi8vY29udGVudC5yZW1vdGUudG9vbHMvY3JlYXRpbmctbW9kZXJuLXBpeGVsLXBlcmZlY3Qtd2Vic2l0ZXMtd2hpbGUtZnJlZWxhbmNpbmctcmVtb3RlbHk/cmVmPVJlbW90ZVdvcmsyMDIwIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5DcmVhdGluZyBtb2Rlcm4sIHBpeGVsLXBlcmZlY3Qgd2Vic2l0ZXMgd2hpbGUgZnJlZWxhbmNpbmcgKHJlbW90ZWx5KTxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxoMiBpZD0iXzUtZnJvbS1kZW52ZXItdG8tbGl2aW5nLWFuZC13b3JraW5nLXJlbW90ZWx5LWFjcm9zcy01MC1jb3VudHJpZXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzUtZnJvbS1kZW52ZXItdG8tbGl2aW5nLWFuZC13b3JraW5nLXJlbW90ZWx5LWFjcm9zcy01MC1jb3VudHJpZXMiPiM8L2E+ICM1OiBGcm9tIERlbnZlciB0byBMaXZpbmcgYW5kIFdvcmtpbmcgUmVtb3RlbHkgYWNyb3NzIDUwIENvdW50cmllczwvaDI+CjxwPlJlaWQgaW50cm9kdWNlcyBoaW1zZWxmIGFzIGEgVm9vZG9vIFNvcmNlcmVyIGFuZCBpcyB0cnlpbmcgdG8gbWFzdGVyIG1pbmltYWxpc20uIFdlIHJlYWxseSBsb3ZlZCB0aGUgd2F5IGhlIGhhcyBhcnRpY3VsYXRlZCBoaXMgYWR2aWNlOiAmcXVvdDtWZXJ5IGZldyBwZW9wbGUgYXJlIGJvcm4gaW50byBhbiBlbnZpcm9ubWVudCB0aGF0IHN1aXRzIHRoZW0gYmVzdDsgc29tZSBwZW9wbGUgbmV2ZXIgcmVhbGl6ZSB3aGVyZSB0aGV5IGxpdmUgaW5oaWJpdHMgdGhlaXIgaGFwcGluZXNzLiBaZWJyYXMgZG9u4oCZdCBiZWxvbmcgaW4gem9vcyBhbmQgSSBiZWxpZXZlIGh1bWFucyBkb27igJl0IGJlbG9uZyBpbiBvZmZpY2VzLiZxdW90OzwvcD4KPHA+PHU+RnVsbCBzdG9yeTwvdT46IDxhIGhyZWY9Imh0dHBzOi8vY29udGVudC5yZW1vdGUudG9vbHMvZnJvbS1kZW52ZXItdG8tbGl2aW5nLWFuZC13b3JraW5nLXJlbW90ZWx5LWFjcm9zcy01MC1jb3VudHJpZXM/cmVmPVJlbW90ZVdvcmsyMDIwIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5Gcm9tIERlbnZlciB0byBMaXZpbmcgYW5kIFdvcmtpbmcgUmVtb3RlbHkgYWNyb3NzIDUwIENvdW50cmllczxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxoMiBpZD0iXzYtZnJvbS1hLWZhc2hpb24tc3R5bGlzdC10by1hLWRpZ2l0YWwtbm9tYWQtd3JpdGVyLWFuZC10cmFuc2xhdG9yIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI182LWZyb20tYS1mYXNoaW9uLXN0eWxpc3QtdG8tYS1kaWdpdGFsLW5vbWFkLXdyaXRlci1hbmQtdHJhbnNsYXRvciI+IzwvYT4gIzY6IEZyb20gYSBmYXNoaW9uIHN0eWxpc3QgdG8gYSBkaWdpdGFsIG5vbWFkIHdyaXRlciBhbmQgdHJhbnNsYXRvcjwvaDI+CjxwPkZlcm5hbmRhJ3Mgam91cm5leSBoYXMgYmVlbiBubyBsZXNzIHRoYW4gYSByb2xsZXIgY29hc3RlciByaWRlLiBCZWluZyBhIGZhc2hpb24gc3R5bGlzdCwgc2hlIHdhcyB0aXJlZCBvZiB0aGUgY29uc3RhbnQgYmFjayBhbmQgZm9ydGggcnVubmluZywgYmVpbmcgZm9yZXZlciByZWFkeSB3aXRoIG91dGZpdHMgYW5kIHN1cGVyIGZsZXhpYmxlIHdpdGggc2Vzc2lvbnMnIGRhdGVzLCBjcmF6eSBjZWxlYnJpdHkgcmVxdWVzdHMsIHRvIG5hbWUgYSBmZXcuPC9wPgo8cD5TaGUgc3dpdGNoZWQgY2FyZWVycyBieSBtb3ZpbmcgdG8gYSB3cml0ZXIgYW5kIHRyYW5zbGF0b3Igcm9sZSB3aXRoIHRoZSBSZW1vdGUgWWVhciBwcm9ncmFtLiBTaGUncyBub3cgc2V0dGxlZCBpbnRvIGEgZnVsbC10aW1lIGZyZWVsYW5jZSByb2xlIGFuZCBjb250aW51ZXMgdHJhdmVsbGluZyB3aGlsZSB3b3JraW5nIHdpdGggY2xpZW50cyBhY3Jvc3MgdGhlIHdvcmxkLjwvcD4KPHA+PHU+RnVsbCBzdG9yeTwvdT46IDxhIGhyZWY9Imh0dHBzOi8vY29udGVudC5yZW1vdGUudG9vbHMvZnJvbS1hLWZhc2hpb24tc3R5bGlzdC10by1hLWRpZ2l0YWwtbm9tYWQtd3JpdGVyLWFuZC10cmFuc2xhdG9yP3JlZj1SZW1vdGVXb3JrMjAyMCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+RnJvbSBhIGZhc2hpb24gc3R5bGlzdCB0byBhIGRpZ2l0YWwgbm9tYWQgd3JpdGVyIGFuZCB0cmFuc2xhdG9yPE91dGJvdW5kTGluay8+PC9hPjwvcD4KPGgyIGlkPSJfNy1sYXVyYS1zLWpvdXJuZXktdGhyb3VnaC1wcm9kdWN0LWRlc2lnbi10cmF2ZWxsaW5nLWRpZ2l0YWwtbm9tYWRpbmciPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzctbGF1cmEtcy1qb3VybmV5LXRocm91Z2gtcHJvZHVjdC1kZXNpZ24tdHJhdmVsbGluZy1kaWdpdGFsLW5vbWFkaW5nIj4jPC9hPiAjNzogTGF1cmHigJlzIGpvdXJuZXkgdGhyb3VnaCBwcm9kdWN0IGRlc2lnbiwgdHJhdmVsbGluZyAmYW1wOyBkaWdpdGFsIG5vbWFkaW5nPC9oMj4KPHA+V2Ugd2VyZSBxdWl0ZSBpbnRyaWd1ZWQgd2hlbiBMYXVyYSBtZW50aW9uZWQgaG93IHJlbW90ZSB3b3JrIGhhcyBkb25lIHdvbmRlcnMgZm9yIGhlciBtZW50YWwgaGVhbHRoIGFzIHdlbGwuPC9wPgo8cD5JbiBoZXIgd29yZHMsICZxdW90O0lmIGdvaW5nIHRocm91Z2ggYSByb3VnaCBwZXJpb2QsIHRoaXMgbGVhdmVzIG1lIHdpdGggdHdvIGFsdGVybmF0aXZlczogYmVncnVkZ2luZ2x5IGRyYWcgbXlzZWxmIHRvIHdvcmssIG9yIHRha2Ugc2ljayBsZWF2ZS4gQnV0IHJlbW90ZSB3b3JrIGhhcyBlbXBvd2VyZWQgbWUgdG8gZm9jdXMgb24gd29yayB3aGlsZSBzdGF5aW5nIGluIGEgbW9yZSBjb21mb3J0YWJsZSBlbnZpcm9ubWVudC4mcXVvdDs8L3A+CjxwPkxhdXJhIGhhcyB0cmFuc2l0aW9uZWQgZnJvbSBhbiBpbi1vZmZpY2Ugam9iIHRvIGxlYWRpbmcgYSBncm91cCBvZiA0MCBkaWdpdGFsIG5vbWFkcyBvbiBhIHllYXItbG9uZyB0cmlwIGFuZCBmaW5hbGx5IHdvcmtpbmcgYSByZW1vdGUgam9iIGF0IEluVmlzaW9uLjwvcD4KPHA+PHU+RnVsbCBzdG9yeTwvdT46IDxhIGhyZWY9Imh0dHBzOi8vY29udGVudC5yZW1vdGUudG9vbHMvbGF1cmFzLWpvdXJuZXktdGhyb3VnaC1wcm9kdWN0LWRlc2lnbi10cmF2ZWxsaW5nLWRpZ2l0YWwtbm9tYWRpbmc/cmVmPVJlbW90ZVdvcmsyMDIwIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5MYXVyYeKAmXMgam91cm5leSB0aHJvdWdoIHByb2R1Y3QgZGVzaWduLCB0cmF2ZWxsaW5nICZhbXA7IGRpZ2l0YWwgbm9tYWRpbmc8T3V0Ym91bmRMaW5rLz48L2E+PC9wPgo8aDIgaWQ9Il84LWZyb20tYmVpbmctYS1za2VwdGljLXRvLWEtc29saWQtYWR2b2NhdGUtb2YtcmVtb3RlLXdvcmsiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzgtZnJvbS1iZWluZy1hLXNrZXB0aWMtdG8tYS1zb2xpZC1hZHZvY2F0ZS1vZi1yZW1vdGUtd29yayI+IzwvYT4gIzg6IEZyb20gYmVpbmcgYSBza2VwdGljIHRvIGEgc29saWQgYWR2b2NhdGUgb2YgcmVtb3RlIHdvcms8L2gyPgo8cD5HYWJyaWVsIHdhcyBib3JuIGFuZCBicm91Z2h0IHVwIGluIFF1ZWJlYyBhbmQgaGlzIHByaW1hcnkgZ29hbCB3YXMgdG8gd29yayBpbiBhIGZpZWxkIGhlIGlzIHBhc3Npb25hdGUgYWJvdXQuIE9ubHkgZHVyaW5nIHRoZSBpbnRlcnZpZXcgZm9yIFYyIENsb3VkICh3aGVyZSBoZSBjdXJyZW50bHkgd29ya3MpIGRpZCBoZSBnZXQgdG8ga25vdyB0aGF0IGl0IHdvdWxkIGJlIGEgZnVsbHkgcmVtb3RlIGpvYi4gQWZ0ZXIgYmVpbmcgc2tlcHRpY2FsIGluaXRpYWxseSwgR2FicmllbCBoYXMgY29tZSB0byBiZWxpZXZlIHRoYXQgcmVtb3RlIHdvcmsgaXMgYSBodWdlIHBlcmsgYW5kIGluIGZhY3QsIGhhcyBiZWNvbWUgYSBzb2xpZCBhZHZvY2F0ZSBoaW1zZWxmLiBIZSBiZWxpZXZlcyBiZWluZyBzdWNjZXNzZnVsIGF0IHdvcmtpbmcgcmVtb3RlbHkgZGVwZW5kcyBsYXJnZWx5IG9uIGhvdyB3ZWxsIHlvdSBhZGFwdCB5b3Vyc2VsZiBhbmQgaG93IGRpc2NpcGxpbmVkIHlvdSBhcmUuPC9wPgo8cD48dT5GdWxsIHN0b3J5PC91PjogPGEgaHJlZj0iaHR0cHM6Ly9jb250ZW50LnJlbW90ZS50b29scy9mcm9tLWJlaW5nLWEtc2tlcHRpYy10by1hLXNvbGlkLWFkdm9jYXRlLW9mLXJlbW90ZS13b3JrP3JlZj1SZW1vdGVXb3JrMjAyMCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+RnJvbSBiZWluZyBhIHNrZXB0aWMgdG8gYSBzb2xpZCBhZHZvY2F0ZSBvZiByZW1vdGUgd29yazxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxoMiBpZD0iXzktZnJvbS13b3JraW5nLXJlbW90ZWx5LXBhcnQtdGltZS10by1idWlsZGluZy1hLXJlbW90ZS1maXJzdC1jb21wYW55Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI185LWZyb20td29ya2luZy1yZW1vdGVseS1wYXJ0LXRpbWUtdG8tYnVpbGRpbmctYS1yZW1vdGUtZmlyc3QtY29tcGFueSI+IzwvYT4gIzk6IEZyb20gd29ya2luZyByZW1vdGVseSBwYXJ0LXRpbWUgdG8gYnVpbGRpbmcgYSByZW1vdGUtZmlyc3QgY29tcGFueTwvaDI+CjxwPkJvcmlzIGZpcnN0IHZlbnR1cmVkIGludG8gcmVtb3RlIHdvcmsgd2hlbiBoaXMgbWFuYWdlciBhdCBLaWxvbyBHYW1lcyBwcm9wb3NlZCB3b3JraW5nIHBhcnQtdGltZSB3aGlsZSBwdXJzdWluZyBoaXMgTWFzdGVyJ3MgZGVncmVlLiBIZSBzb29uIHJlYWxpc2VkIHRoYXQgaXQgd2FzIGVhc3kgdG8gYmUgcHJvZHVjdGl2ZSBhbmQgZ2V0IHRoaW5ncyBkb25lIHdoZW4gd29ya2luZyByZW1vdGVseS4gQm9yaXMgd2VudCBvbiB0byBidWlsZCBoaXMgb3duIGZ1bGx5IGRpc3RyaWJ1dGVkIGNvbXBhbnkgdGhlcmVhZnRlci48L3A+CjxwPjx1PkZ1bGwgc3Rvcnk8L3U+OiA8YSBocmVmPSJodHRwczovL2NvbnRlbnQucmVtb3RlLnRvb2xzL2Zyb20td29ya2luZy1yZW1vdGVseS1wYXJ0LXRpbWUtdG8tYnVpbGRpbmctYS1yZW1vdGUtZmlyc3QtY29tcGFueT9yZWY9UmVtb3RlV29yazIwMjAiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkZyb20gd29ya2luZyByZW1vdGVseSBwYXJ0LXRpbWUgdG8gYnVpbGRpbmcgYSByZW1vdGUtZmlyc3QgY29tcGFueTxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxoMiBpZD0iXzEwLXN0dWR5aW5nLXBzeWNob2xvZ3ktdG8tZmlyc3QtcmVtb3RlLWVtcGxveWVlLXRvLWEtcmVtb3RlLXBtIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18xMC1zdHVkeWluZy1wc3ljaG9sb2d5LXRvLWZpcnN0LXJlbW90ZS1lbXBsb3llZS10by1hLXJlbW90ZS1wbSI+IzwvYT4gIzEwOiBTdHVkeWluZyBwc3ljaG9sb2d5IHRvIGZpcnN0IHJlbW90ZSBlbXBsb3llZSB0byBhIHJlbW90ZSBQTTwvaDI+CjxwPkhhdmluZyBsaXZlZCBpbiBNaWFtaSwgRkwgaGVyIGVudGlyZSBsaWZlLCBJcm1hIGp1c3Qgd2FudGVkIHRvIGdldCBvdXQgYW5kIGV4cGVyaWVuY2UgYSBuZXcgZW52aXJvbm1lbnQuIFRoaXMgd2FzIGhlciBiaWcgcHVzaCB0byBnbyByZW1vdGUsIHdoZXJlaW4gc2hlIHBpdGNoZWQgdG8gaGVyIGJvc3NlcyBvbiBiZWNvbWluZyB0aGUgZmlyc3QgcmVtb3RlIGVtcGxveWVlIG9mIGhlciBjb21wYW55LiBJcm1hIG5vdyB3b3JrcyBhcyBhIHJlbW90ZSBwcm9kdWN0IG1hbmFnZXIsIGEgZnVuY3Rpb24gcGVvcGxlIGFyZSBzdGlsbCBza2VwdGljYWwgb2Ygd29ya2luZyB3ZWxsIGluIGEgcmVtb3RlIHNldHRpbmcuPC9wPgo8cD48dT5GdWxsIHN0b3J5PC91PjogPGEgaHJlZj0iaHR0cHM6Ly9jb250ZW50LnJlbW90ZS50b29scy9zdHVkeWluZy1wc3ljaG9sb2d5LXRvLWZpcnN0LXJlbW90ZS1lbXBsb3llZS10by1hLXJlbW90ZS1wbT9yZWY9UmVtb3RlV29yazIwMjAiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPlN0dWR5aW5nIHBzeWNob2xvZ3kgdG8gZmlyc3QgcmVtb3RlIGVtcGxveWVlIHRvIGEgcmVtb3RlIFBNPE91dGJvdW5kTGluay8+PC9hPjwvcD4KPGgyIGlkPSJfMTEtYS1jb250ZW50LWNyZWF0b3Itd2hvLWZpbmRzLWNvbWZvcnQtbWVudGFsLXdlbGxiZWluZy1pbi1yZW1vdGUtd29yayI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfMTEtYS1jb250ZW50LWNyZWF0b3Itd2hvLWZpbmRzLWNvbWZvcnQtbWVudGFsLXdlbGxiZWluZy1pbi1yZW1vdGUtd29yayI+IzwvYT4gIzExOiBBIGNvbnRlbnQgY3JlYXRvciB3aG8gZmluZHMgY29tZm9ydCAmYW1wOyBtZW50YWwgd2VsbGJlaW5nIGluIHJlbW90ZSB3b3JrPC9oMj4KPHA+Q2FuZGFjZSBpcyBhIGNvbnRlbnQgY3JlYXRvciBiYXNlZCBvdXQgb2YgU2VhdHRsZSBhbmQgcmVhbGlzZWQgdGhhdCBzaGUgd2FudGVkIHRvIHdvcmsgZnJvbSBob21lLCBpbiBoZXIganVuaW9yIHllYXIgb2YgY29sbGVnZSBpdHNlbGYuIFNoZSBzYXlzIHNoZSdzIG5ldmVyIGZlbHQgY29tZm9ydGFibGUgaW4gYW4gb2ZmaWNlIHNldHRpbmcgYW5kIG5lZWRzIHRvIGJlIGNvc3kgYW5kIGF0IGVhc2UsIHRvIGNvbXBsZXRlbHkgZm9jdXMgb24gd29yay48L3A+CjxwPjx1PkZ1bGwgc3Rvcnk8L3U+OiA8YSBocmVmPSJodHRwczovL2NvbnRlbnQucmVtb3RlLnRvb2xzL2EtY29udGVudC1jcmVhdG9yLXdoby1maW5kcy1jb21mb3J0LW1lbnRhbC13ZWxsYmVpbmctaW4tcmVtb3RlLXdvcms/cmVmPVJlbW90ZVdvcmsyMDIwIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5BIGNvbnRlbnQgY3JlYXRvciB3aG8gZmluZHMgY29tZm9ydCAmYW1wOyBtZW50YWwgd2VsbGJlaW5nIGluIHJlbW90ZSB3b3JrPE91dGJvdW5kTGluay8+PC9hPjwvcD4KPGgyIGlkPSJfMTItZnJvbS1maWdodGluZy1hdGxhbnRhLXRyYWZmaWMtdG8tYmVjb21pbmctYS1yZW1vdGUtd29yay1ldmFuZ2VsaXN0Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18xMi1mcm9tLWZpZ2h0aW5nLWF0bGFudGEtdHJhZmZpYy10by1iZWNvbWluZy1hLXJlbW90ZS13b3JrLWV2YW5nZWxpc3QiPiM8L2E+ICMxMjogRnJvbSBmaWdodGluZyBBdGxhbnRhIHRyYWZmaWMgdG8gYmVjb21pbmcgYSByZW1vdGUgd29yayBldmFuZ2VsaXN0PC9oMj4KPHA+Q2hhbmVsbCwgd2hvIGlzIGEgZ3JhZHVhdGUgb2YgdGhlIFVuaXZlcnNpdHkgb2YgR2VvcmdpYSwgaXMgYSByZW1vdGUgZnJlZWxhbmNlIHdyaXRlciBhbmQgYWxzbyBhIHJlbW90ZSB3b3JrIGFkdm9jYXRlLiBTaGUgc2F5cyAnSSBjYW4gd29yayBhdCBhIGxpYnJhcnksIGNvZmZlZSBzaG9wLCBjb3dvcmsgZmFjaWxpdHksIG9yIGF0IGhvbWUuJyBDaGFuZWxsIGlzIGN1cnJlbnRseSB3b3JraW5nIG9uIGFuIGUtYm9vayB0aGF0IGlzIG1lYW50IHRvIGhlbHAgcHJvZmVzc2lvbmFscyB0cmFuc2l0aW9uIGZyb20gYSByb3V0aW5lIGpvYiB0byB3b3JraW5nIHJlbW90ZWx5LjwvcD4KPHA+PHU+RnVsbCBzdG9yeTwvdT46IDxhIGhyZWY9Imh0dHBzOi8vY29udGVudC5yZW1vdGUudG9vbHMvZnJvbS1maWdodGluZy1hdGxhbnRhLXRyYWZmaWMtdG8tYmVjb21pbmctYS1yZW1vdGUtd29yay1ldmFuZ2VsaXN0P3JlZj1SZW1vdGVXb3JrMjAyMCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+RnJvbSBmaWdodGluZyBBdGxhbnRhIHRyYWZmaWMgdG8gYmVjb21pbmcgYSByZW1vdGUgd29yayBldmFuZ2VsaXN0PE91dGJvdW5kTGluay8+PC9hPjwvcD4KPGgyIGlkPSJfMTMtaS10cmF2ZWxsZWQtdGhlLXdvcmxkLXdoaWxlLXJ1bm5pbmctbXktYnVzaW5lc3MtMTYtY291bnRyaWVzLWluLTEyLW1vbnRocyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfMTMtaS10cmF2ZWxsZWQtdGhlLXdvcmxkLXdoaWxlLXJ1bm5pbmctbXktYnVzaW5lc3MtMTYtY291bnRyaWVzLWluLTEyLW1vbnRocyI+IzwvYT4gIzEzOiBJIHRyYXZlbGxlZCB0aGUgd29ybGQgd2hpbGUgcnVubmluZyBteSBidXNpbmVzczogMTYgY291bnRyaWVzIGluIDEyIG1vbnRoczwvaDI+CjxwPk1lbGlzc2EgU21pdGggaXMgdGhlIGZvdW5kZXIgJmFtcDsgQ0VPIG9mIHRoZSBBc3NvY2lhdGlvbiBvZiBWaXJ0dWFsIEFzc2lzdGFudHMgYW5kIGF1dGhvciBvZiB0d28gYm9va3Mgb24gdGhlIHN1YmplY3QuIFRoZSBtb3N0IGludGVyZXN0aW5nIHRoaW5nIGFib3V0IGhlciBpcyB0aGF0IHNoZSB0cmF2ZWxlZCAxNiBjb3VudHJpZXMgaW4gMjAxNyB3aGlsZSB3b3JraW5nIGFuZCBpbiBlZmZlY3QsIHN3aXRjaGVkIHRvIHJlbW90ZSB3b3JrIGNvbnN1bHRpbmcgcG9zdCB0aGF0LjwvcD4KPHA+PHU+RnVsbCBzdG9yeTwvdT46IDxhIGhyZWY9Imh0dHBzOi8vY29udGVudC5yZW1vdGUudG9vbHMvaS10cmF2ZWxsZWQtdGhlLXdvcmxkLXdoaWxlLXJ1bm5pbmctbXktYnVzaW5lc3MtMTYtY291bnRyaWVzLWluLTEyLW1vbnRocz9yZWY9UmVtb3RlV29yazIwMjAiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkkgdHJhdmVsbGVkIHRoZSB3b3JsZCB3aGlsZSBydW5uaW5nIG15IGJ1c2luZXNzOiAxNiBjb3VudHJpZXMgaW4gMTIgbW9udGhzPE91dGJvdW5kTGluay8+PC9hPjwvcD4KPGJyPgo8Y2VudGVyPgo8Yj5QQVJUTkVSUzwvYj4KPGhyPgo8YSBocmVmPSJodHRwczovL3d3dy5mbGV4aXBsZS5jb20iIHRhcmdldD0iX2JsYW5rIj48aW1nIGNsYXNzPSJwYXJ0bmVyLWxvZ28iIHNyYz0iL2Fzc2V0cy9mbGV4aXBsZS1sb2dvLW1vbm9ncmFtLmpwZyIgd2lkdGg9ODAvPjwvYT4KJmVtc3A7JmVtc3A7JmVtc3A7CjxhIGhyZWY9Imh0dHBzOi8vd2V3b3JrcmVtb3RlbHkuY29tIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBjbGFzcz0icGFydG5lci1sb2dvIiBzcmM9Ii9hc3NldHMvV1dSLnBuZyIgd2lkdGg9ODAvPjwvYT4KJmVtc3A7JmVtc3A7JmVtc3A7CjxhIGhyZWY9Imh0dHBzOi8vcnVubmluZ3JlbW90ZS5jb20iIHRhcmdldD0iX2JsYW5rIj48aW1nIGNsYXNzPSJwYXJ0bmVyLWxvZ28iIHNyYz0iL2Fzc2V0cy9ydW5uaW5nLXJlbW90ZS5qcGciIHdpZHRoPTgwLz48L2E+CjwvY2VudGVyPgo8L0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yPgo="},null]}