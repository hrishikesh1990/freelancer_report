{"remainingRequest":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/Macbook/Documents/projects/remotework2020_new/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/Macbook/Documents/projects/remotework2020_new/docs/3c-how-to-build-culture-in-a-remote-team.md?vue&type=template&id=014a92c9&","dependencies":[{"path":"/Users/Macbook/Documents/projects/remotework2020_new/docs/3c-how-to-build-culture-in-a-remote-team.md","mtime":1577365569303},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/vue-loader/lib/index.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/@vuepress/markdown-loader/index.js","mtime":1576060144870}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJjdWx0dXJlLWluLWEtcmVtb3RlLXRlYW0iPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY3VsdHVyZS1pbi1hLXJlbW90ZS10ZWFtIj4jPC9hPiAmZ3Q7IEN1bHR1cmUgaW4gYSByZW1vdGUgdGVhbTwvaDE+CjxwPkN1bHR1cmUgY2FuIG1ha2Ugb3IgYnJlYWsgYSB0ZWFtLiBIb3dldmVyLCBiZWluZyBhbiBhYnN0cmFjdCBjb25jZXB0LCB0aGUgbmVlZCB0byBidWlsZCBhIHN0cm9uZyBjdWx0dXJlIGlzIG9mdGVuIGlnbm9yZWQuIEl0IHVzdWFsbHkgc2lnbmlmaWVzIGRpZmZlcmVudCB0aGluZ3MgdG8gZWFjaCBjb21wYW55LCBidXQgYXQgdGhlIGNvcmUgaXQgaXMgYSBidW5jaCBvZiB2YWx1ZXMsIHdoaWNoIGFyZSBlaXRoZXIgZXhwbGljaXRseSBkZWZpbmVkIG9yIGltcGxpY2l0bHkgZm9sbG93ZWQsIHdoaWxlIHdvcmtpbmcgdG93YXJkcyBhIHNwZWNpZmljIGdvYWwuIEN1bHR1cmUgZ2VuZXJhbGx5IGhhcyB2ZXJ5IGxpdHRsZSB0byBkbyB3aXRoIGFuIGluZGl2aWR1YWwgYW5kIGlzIG1vcmUgYWJvdXQgaG93IGEgZ3JvdXAgb2YgcGVvcGxlIHBlcmZvcm0gdG9nZXRoZXIuPC9wPgo8cD5XaGlsZSBpdCBpcyB0b3VnaCB0byBnZW5lcmFsbHkgaW5mZXIgdGhlIGN1bHR1cmUgb2YgdGVhbSwgaXQgaXMgZWFzaWVyIGluIGEgY28tbG9jYXRlZCB0ZWFtLiBUaGUgd2F5IHBlb3BsZSB0byB0YWxrIHRvIG9uZS1hbm90aGVyLCB0aGVpciBhdHRpcmUsIHRoZSBsYXlvdXQgb2YgdGhlIG9mZmljZSwgYW1vbmcgYSB3aG9sZSBsb3Qgb2Ygb3RoZXIgdmlzdWFsIGN1ZXMsIGdpdmUgYW4gaW5kaXZpZHVhbCBhIHdob2xlIGxvdCBvZiBpbnB1dHMgdG8gdW5kZXJzdGFuZCB0aGUgY3VsdHVyZSBvZiB0aGUgdGVhbS4gQWxsIG9mIHRoZXNlIGN1ZXMgYXJlIGFic2VudCBpbiBhIHJlbW90ZSB0ZWFtLjwvcD4KPHA+VGhlcmVmb3JlLCBpdCBiZWNvbWVzIG11Y2ggbW9yZSBpbXBvcnRhbnQgdG8gYmUgaW50ZW50aW9uYWwgaW4gYnVpbGRpbmcgYSBjdWx0dXJlIGZvciBhIHJlbW90ZSB0ZWFtLiBFdmVuIGluIGEgcmVtb3RlIHRlYW0sIGluZGl2aWR1YWxzIHdpbGwgY29udGludWUgdG8gb2JzZXJ2ZSBhbmQgbGVhcm4gd2hhdCB0aGUgY3VsdHVyZSB0cnVseSBpcywgYnV0IGJlaW5nIGV4cGxpY2l0IGFib3V0IGl0LCBzdXJlbHkgaGVscHMuPC9wPgo8YmxvY2txdW90ZT4KPHA+SXQgY29tZXMgYWJvdXQgaW4gZXZlcnl0aGluZyB3ZSBkby4gSG93IHdlIGNvbW11bmljYXRlLCBlaXRoZXIgdmlhIFNsYWNrLCBpbiBEaXNjb3Vyc2UsIGluIEVtYWlsLCBvciBvbiBab29tIGNhbGxzLiBJdCBjb21lcyBhYm91dCBvbiBvdXIgcmV0cmVhdHMuIEl04oCZcyByZWZsZWN0ZWQgaW4gdGhlIGRlY2lzaW9ucyB0aGF0IGFyZSBtYWRlLCBsaWtlIHNoYXJpbmcgc28gbXVjaCBvZiBCdWZmZXLigJlzIHByb2Nlc3NlcyBhbmQgcmV2ZW51ZSB0cmFuc3BhcmVudGx5LCBldGMuPC9wPgo8L2Jsb2NrcXVvdGU+CjxibG9ja3F1b3RlPgo8cD48c3Ryb25nPi0gSGFpbGxleSBHcmlmZmlzLCBIZWFkIE9mIFB1YmxpYyBSZWxhdGlvbnMgYXQgQnVmZmVyPC9zdHJvbmc+PC9wPgo8L2Jsb2NrcXVvdGU+CjxwPkxldCdzIGRlbHZlIGludG8gc29tZSB3YXlzIHRoYXQgeW91IGNhbiBidWlsZCBjdWx0dXJlIGluIHlvdXIgdGVhbTo8L3A+Cjx1bD4KPGxpPjxhIGhyZWY9IiNfMS1jbGFyaXR5LWluLXZhbHVlcyI+Q2xhcml0eSBpbiB2YWx1ZXM8L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNfMi1leHBsaWNpdGx5LWNvbW11bmljYXRlLWl0LWludGVybmFsbHktYW5kLXB1YmxpY2x5Ij5FeHBsaWNpdGx5IGNvbW11bmljYXRlIGl0IGludGVybmFsbHkgYW5kIHB1YmxpY2x5PC9hPjwvbGk+CjxsaT48YSBocmVmPSIjXzMtaGlyZS1yaWdodCI+SGlyZSByaWdodDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI180LWVuY291cmFnZS1yZWNvZ25pdGlvbiI+RW5jb3VyYWdlIHJlY29nbml0aW9uPC9hPjwvbGk+CjxsaT48YSBocmVmPSIjXzUtaW50ZW50aW9uYWwtdnMtb3JnYW5pYy1pbml0aWF0aXZlcyI+SW50ZW50aW9uYWwgdnMuIE9yZ2FuaWMgaW5pdGlhdGl2ZXM8L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNfNi1zbGFjay1jaGFubmVscyI+U2xhY2sgY2hhbm5lbHM8L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNfNy10ZWFtLW9mZnNpdGVzIj5UZWFtIG9mZnNpdGVzPC9hPjwvbGk+CjxsaT48YSBocmVmPSIjXzgtbWVhc3VyZS1lbmdhZ2VtZW50Ij5NZWFzdXJlIGVuZ2FnZW1lbnQ8L2E+PC9saT4KPC91bD4KPGgyIGlkPSJfMS1jbGFyaXR5LWluLXZhbHVlcyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfMS1jbGFyaXR5LWluLXZhbHVlcyI+IzwvYT4gMS4gQ2xhcml0eSBpbiB2YWx1ZXM8L2gyPgo8cD5XaGlsZSB3ZSBzcG9rZSBhYm91dCB0aGUgaW1wb3J0YW5jZSBvZiBkb2N1bWVudGF0aW9uIGFuZCB0byB3cml0ZSBkb3duIGFsbCBhc3BlY3RzIG9mIHdvcmsgYW5kIGRpZmZlcmVudCBwcm9jZXNzZXMsIGl0IGlzIGFsc28gaW1wb3J0YW50IHRvIGNvZGlmeSB0aGUgdmFsdWVzIHRoYXQgdGhlIGNvbXBhbnkgc3RhbmRzIGZvci4gVGhpcyBzaG91bGQgYmUgb25lIG9mIHRoZSBmaXJzdCBwaWVjZXMgdGhhdCBhbnkgbmV3IGhpcmUgcmVhZHMgYW5kIHVuZGVyc3RhbmQgY2xlYXJseSB0aGUgdHlwZSBvZiB3b3JraW5nIHN0eWxlLCBpbnRlcmFjdGlvbnMgYW5kIGF0dGl0dWRlIHRoYXQgaXMgZW5jb3VyYWdlZCBhbmQgYWxzbyB0aGUga2luZCB0aGF0IGlzIGFjdGl2ZWx5IGRpc2NvdXJhZ2VkIGFzIHdlbGwuPC9wPgo8cD5UaGUgZG9jdW1lbnQgaXMgbWVhbnQgdG8gYmUgaW5zcGlyYXRpb25hbCBhbmQgYXQgdGhlIHNhbWUgdGltZSBleHRyZW1lbHkgYWN0aW9uYWJsZS4gRm9yIGVhY2ggdmFsdWUsIGRyYXcgaW4gcXVvdGVzIGZyb20gcGFzdCBldmVudHMgdGhhdCBlcGl0b21pc2UgaXQgaW4gYSBiZWF1dGlmdWwgd2F5LiBUaGlzIHNpZ25pZmllcyB0aGF0IHRoZSBkb2N1bWVudCBpc24ndCBtZXJlbHkgZnJvbSBhIGZvcm1hbCBwZXJzcGVjdGl2ZWx5IGJ1dCBpcyBoaWdobHkgcmVmbGVjdGl2ZSBvZiB3aGF0IHRoZSBjb21wYW55IHN0YW5kcyBmb3IuPC9wPgo8YmxvY2txdW90ZT4KPHA+JnF1b3Q7VHJhbnNwYXJlbmN5IGlzIG9uZSBvZiBvdXIgdmFsdWVzLiBXZSBoYXZlIGEgaGFuZGJvb2sgdGhhdCBpcyBwdWJsaWNseSBhY2Nlc3NpYmx5IC0gaWYgd2UgcHJpbnRlZCBpdCwgaXQgd291bGQgMzAwMCBwYWdlcy48L3A+CjwvYmxvY2txdW90ZT4KPGJsb2NrcXVvdGU+CjxwPjxzdHJvbmc+LSBEYXJyZW4gTXVycGgsIEFsbCBSZW1vdGUgQ3VsdHVyZSBDdXJhdG9yIGF0IEdpdGxhYjwvc3Ryb25nPjwvcD4KPC9ibG9ja3F1b3RlPgo8aDIgaWQ9Il8yLWV4cGxpY2l0bHktY29tbXVuaWNhdGUtaXQtaW50ZXJuYWxseS1hbmQtcHVibGljbHkiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzItZXhwbGljaXRseS1jb21tdW5pY2F0ZS1pdC1pbnRlcm5hbGx5LWFuZC1wdWJsaWNseSI+IzwvYT4gMi4gRXhwbGljaXRseSBjb21tdW5pY2F0ZSBpdCBpbnRlcm5hbGx5IGFuZCBwdWJsaWNseTwvaDI+CjxwPkhvd2V2ZXIsIG1lcmUgZG9jdW1lbnRhdGlvbiBvZiB5b3VyIHRlYW0ncyBjdWx0dXJlIGlzbid0IGVub3VnaC4gSXQgc2hvdWxkIGJlIHJlZ3VsYXJseSBicm91Z2h0IHVwIGluIG1lZXRpbmdzLCBpbiBjb21tdW5pY2F0aW9uIGZyb20gdGhlIHRvcCBtYW5hZ2VtZW50IGFuZCBmcm9tIG1lbnRvcnMgdG8gbmV3IGhpcmVzLiBDb21tZW5kaW5nICZhbXA7IHJlY29nbmlzaW5nIGV4ZW1wbGFyeSBpbnN0YW5jZXMgb2YgaW5kaXZpZHVhbHMgZW1ib2R5aW5nIHRoZSB2YWx1ZXMgb2YgdGhlIGNvbXBhbnkgbW90aXZhdGVzIG90aGVycyB0byBmb2xsb3cgaXQgdG9vLjwvcD4KPHA+RnVydGhlciwgYmUgdm9jYWwgYWJvdXQgdGhlIHRlYW0ncyBjdWx0dXJlIG5vdCBvbmx5IGludGVybmFsbHkgYnV0IGFsc28gb24gcHVibGljIGZvcnVtcy4gV3JpdGUgYmxvZ3Mgb24gd2hhdCB5b3VyIGNvbXBhbnkgYmVsaWV2ZXMgaW4gYW5kIGFsc28gYW55IG5ldyBpbml0aWF0aXZlcyB0YWtlbiB0byBwcm9tb3RlIHN1Y2ggYmVsaWVmcy4gRW5jb3VyYWdlIGV2ZW4gb3RoZXIgcGVvcGxlIGluIHRoZSB0ZWFtIHRvIHdyaXRlIGFib3V0IHRoZWlyIHRob3VnaHRzIGFuZCBleHBlcmllbmNlcy4gRXZlbiBpZiB0aGV5IHdyaXRlIG9uIGEgdG9waWMgdGhhdCBuZWVkcyBpbXByb3ZlbWVudCBpbnRlcm5hbGx5LCBpdCByZWZsZWN0cyBwb3NpdGl2ZWx5IG9uIHRoZSBjb21wYW55IC0gZGVtb25zdHJhdGluZyB0cmFuc3BhcmVuY3kgYW5kIHRoZSBhYmlsaXR5IHRvIHJlY29nbmlzZSBhcmVhcyB0aGF0IGRldmVsb3BtZW50LjwvcD4KPHA+U3VjaCBpbml0aWF0aXZlcyBoZWxwIGVtcGxveWVlcyB0byB1bmRlcnN0YW5kIHRoZSBjdWx0dXJlIG9mIHRoZSBmaXJtIG5vdCBvbmx5IGZyb20gaW50ZXJuYWwgY29tbXVuaWNhdGlvbiBidXQgYWxzbyBmcm9tIGV4dGVybmFsIHNvdXJjZXMuIEl0IGFsc28gZXN0YWJsaXNoZXMgdGhlIGNvbXBhbnkgYXMgYSB0aG91Z2h0IGxlYWRlciBpbiB0aGUgc3BhY2UsIHdoaWNoIGhhcyBhIHJ1Yi1vZmYgZWZmZWN0IG9uIHRoZSBxdWFsaXR5IG9mIHRhbGVudCBhcHBseWluZyB0byB5b3VyIGZpcm0uIFRoaXMgbmljZWx5IHNldHMgdXMgdXAgZm9yIHRoZSBuZXh0IHBvaW50LjwvcD4KPGgyIGlkPSJfMy1oaXJlLXJpZ2h0Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18zLWhpcmUtcmlnaHQiPiM8L2E+IDMuIEhpcmUgcmlnaHQ8L2gyPgo8cD5Ob3QgZXZlcnkgcGVyc29uIHdvdWxkIGJlIGEgZ29vZCBmaXQgZm9yIHRoZSBjdWx0dXJlIG9mIHlvdXIgdGVhbS4gVGhlcmVmb3JlLCBmaXQtY2hlY2tzIG5lZWQgdG8gYmUgaW50ZWdyYXRlZCBpbnRvIHRoZSBoaXJpbmcgcHJvY2VzcyBpdHNlbGYuIEhpcmluZyBtYW5hZ2VycyBoYXZlIGFuIGFkZGl0aW9uYWwgY3JpdGljYWwgYXNwZWN0IHRvIHZlcmlmeSB3aGVuIHZldHRpbmcgYSBwZXJzb24uIFRoaXMgaXMgdmVyeSBjcnVjaWFsIC0gYXMgZGlzY3Vzc2VkIGVhcmxpZXIsIGl0IGlzIGltcG9ydGFudCB0byBiZSBwbGFjZSB5b3VyIHRydXN0IGluIGFsbCB5b3VyIGNvbGxlYWd1ZXMgYW5kIGV2YWx1YXRpbmcgd2hldGhlciB5b3Ugd291bGQgYmUgYWJsZSB0byBkbyBzbyBoYXMgdG8gaGFwcGVuIHdoaWxlIGhpcmluZyBpdHNlbGYhPC9wPgo8aDIgaWQ9Il80LWVuY291cmFnZS1yZWNvZ25pdGlvbiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfNC1lbmNvdXJhZ2UtcmVjb2duaXRpb24iPiM8L2E+IDQuIEVuY291cmFnZSByZWNvZ25pdGlvbjwvaDI+CjxwPlB1YmxpY2x5IHJlY29nbmlzaW5nIHRoZSBhY2hpZXZlbWVudHMgb2YgaW5kaXZpZHVhbHMgaXMgb25lIG9mIHRoZSBiZXN0IHdheXMgdG8gYnVpbGQgYSBwb3NpdGl2ZSB3b3JraW5nIGN1bHR1cmUuIFByYWlzaW5nIHNvbWVvbmUgb24gYSBwdWJsaWMgY2hhbm5lbCBvbiBzbGFjayBhbmQgYWxsb3dpbmcgb3RoZXJzIHRvIGFsc28gZ2l2ZSBhIHBhdCwgaXMgYSBzdHJvbmcgbW90aXZhdG9yLjwvcD4KPHA+SW4gdGhpcyBjb250ZXh0LCBTY290dCBmcm9tIEludmlzaW9uIG1lbnRpb25lZCBhIHRvb2wgY2FsbGVkIEJvbnVzbHksIHRoYXQgYWxsb3dzIHRlYW0gbWVtYmVycyB0byBwdWJsaWNseSBhd2FyZCBlYWNoIG90aGVyIGEgY2VydGFpbiBub21pbmFsIGFtb3VudCBvZiBtb25leSB3aGVuZXZlciB0aGV5IHdvdWxkIGxpa2UgdG8gZXhwcmVzcyBhcHByZWNpYXRpb24uIEF0IEludmlzaW9uLCB0aGV5IGFsbG9jYXRlICQyNSBlYWNoIG1vbnRoIHRvIGV2ZXJ5IGluZGl2aWR1YWwgd2hvIGNhbiB0aGVuIHVzZSBpdCB0byBhd2FyZCBjb2xsZWFndWVzLiBUaGlzIHByb21vdGVzIHRoZSBjdWx0dXJlIGFwcHJlY2lhdGluZyBpbiBhIHZlcnkgb3JnYW5pYyBmYXNoaW9uLjwvcD4KPGJsb2NrcXVvdGU+CjxwPiZxdW90O09uZSB0b29sIHRoYXQgd2UgdXNlIHdoaWNoIGlzIGFtYXppbmcgYW5kIEkgd291bGQgaGlnaGx5IHJlY29tbWVuZCB0byBldmVyeWJvZHkgaXMgQm9udXNseSAtIGl0IGlzIHRoaXMgdG9vbCB3aGVyZSB5b3UgY2FuIGxpdGVyYWxseSBnaXZlIGFueXdoZXJlIGJldHdlZW4gYSBkb2xsYXIgdG8uLi53ZSBoYXZlIGEgMjUgZG9sbGFycyBidWRnZXQgcGVyIG1vbnRoLCBzbyBhIGRvbGxhciB0byAyNSBkb2xsYXJzLCB0byBhbnlib2R5IGZvciBhbnl0aGluZy4gWW91IGNhbiBkbyBpdCBpbiBzbGFjayBuYXRpdmVseSBhbmQgQCBzbyAmYW1wOyBzbyArIHggZG9sbGFycyBmb3IgZG9pbmcgeHl6LCAjdGVhbXdvcmsuIEl0IGlzIHRoaXMgZ3JlYXQgbGl0dGxlIHdheSB0byBzYXkgdGhhdCB5b3UgYXJlIHRoYW5rZnVsIGZvciBzb21ldGhpbmcgb3IgZ2l2ZSBzb21lb25lIHByYWlzZS4uLllvdSByZWFsbHkgYnVpbGQgcmFwcG9ydCB3aXRoIHRoZSBwZW9wbGUgdGhhdCBhcmUgZ2l2aW5nIHRoZXNlIGJvbnVzZXMgdG8sIHBlb3BsZSBzZWUgdGhlbSBhbmQgeW91IHJlYWxseSBmZWVscyBnb29kIHdoZW4geW91IGdldCBvbmUuPC9wPgo8L2Jsb2NrcXVvdGU+CjxibG9ja3F1b3RlPgo8cD48c3Ryb25nPi0gU2NvdHQgSGFuZm9yZCwgRGlyZWN0b3Igb2YgQ3VzdG9tZXIgQWNxdWlzaXRpb24gYXQgSW52aXNpb248L3N0cm9uZz48L3A+CjwvYmxvY2txdW90ZT4KPGgyIGlkPSJfNS1pbnRlbnRpb25hbC12cy1vcmdhbmljLWluaXRpYXRpdmVzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI181LWludGVudGlvbmFsLXZzLW9yZ2FuaWMtaW5pdGlhdGl2ZXMiPiM8L2E+IDUuIEludGVudGlvbmFsIHZzLiBPcmdhbmljIGluaXRpYXRpdmVzPC9oMj4KPHA+SW4gb3VyIGNoYXQgd2l0aCBEYXJyZW4gZnJvbSBHaXRsYWIsIGhlIG1lbnRpb25lZCB0aGF0IHRlYW1zIG5lZWQgdG8gYmUgaW50ZW50aW9uYWwgaW4gYnVpbGRpbmcgY3VsdHVyZS4gVGhpcyBpbmNsdWRlcyBpbml0aWF0aXZlcyB0byBlbnN1cmUgdGhhdCB0ZWFtIG1lbWJlcnMgaW50ZXJhY3Qgd2l0aCBlYWNoIG90aGVyIGFsc28gb3V0c2lkZSBvZiB3b3JrLXJlbGF0ZWQgY29udmVyc2F0aW9ucy4gVG8gZW5zdXJlIHN1Y2ggY29udmVyc2F0aW9ucyBhY3R1YWxseSBoYXBwZW4sIHRoZXkgZW5jb3VyYWdlIHBlb3BsZSB0byBoYXZlIGNoYXRzIGFib3V0IGxpZmUgaW4gZ2VuZXJhbCBhbmQgYWJvdXQgd29yaywgZHVyaW5nIHdvcmsgdGltZS48L3A+CjxibG9ja3F1b3RlPgo8cD4mcXVvdDsuLi55b3UgbmVlZCB0byB3ZWF2ZSB0aGluZ3MgbGlrZSBjb2ZmZWUgY2hhdHMsIGdyb3VwIHNvY2lhbCBjYWxscywgdGVhbSBzb2NpYWwgY2FsbHMsIGNvbXBhbnkgY2FsbHMuIFlvdSBuZWVkIHRvIHdlYXZlIHRoYXQgaW50byB0aGUgY3VsdHVyZSBhbmQgY2FydmUgb3V0IHRpbWUgY29tcGFueS13aWRlIHRvIG1ha2UgdGhpcyBhIHRoaW5nLiBTbyBldmVyeSB3ZWVrIEkgc3BlbmQgdGltZSB0YWxraW5nIHRvIHBlb3BsZSBhYm91dCBsaWZlIG5vdCBhYm91dCB3b3JrIGR1cmluZyB3b3JrIGhvdXJzLCBiZWNhdXNlIHRoYXQgaXMgdGhlIG9ubHkgd2F5IHRvIGJ1aWxkIHJlbGF0aW9uc2hpcHMgd2l0aCBwZW9wbGUgd2hlbiB5b3UgYXJlIGFsbCBhY3Jvc3MgdGhlIHdvcmxkLjwvcD4KPC9ibG9ja3F1b3RlPgo8YmxvY2txdW90ZT4KPHA+PHN0cm9uZz4tIERhcnJlbiBNdXJwaCwgQWxsIFJlbW90ZSBDdWx0dXJlIEN1cmF0b3IgYXQgR2l0bGFiPC9zdHJvbmc+PC9wPgo8L2Jsb2NrcXVvdGU+CjxwPlNjb3R0IGZyb20gSW52aXNpb24sIGRpZCBhcHByZWNpYXRlIHRoZSBuZWVkIHRvIGJlIGludGVudGlvbmFsIGFib3V0IGRldmVsb3BpbmcgcmVsYXRpb25zaGlwcywgaG93ZXZlciwgZmVsdCB0aGF0IHRoZXkgY291bGQgYWxzbyBtYWtlIHN1Y2ggY29udmVyc2F0aW9ucyBxdWl0ZSBhd2t3YXJkLiBIZSBvYnNlcnZlZCB0aGF0IGluaXRpYXRpdmVzIGdyb3cgb3JnYW5pY2FsbHkgaGF2ZSBkb25lIG11Y2ggYmV0dGVyLjwvcD4KPHA+T25lIG9yZ2FuaWMgbWV0aG9kIHRoYXQgaGFzIHdvcmtlZCBmb3IgdGhlbSBoYXMgYmVlbiB0byBhbGxvY2F0ZSA1LW1pbnMgYXQgdGhlIGJlZ2lubmluZyBvZiBlYWNoIG1lZXRpbmcgdG8ganVzdCBzb2NpYWxpc2luZy4gT24gdGhlIG90aGVyIGhhbmQsIGhlIGZvdW5kIHRoYXQgZGVsaWJlcmF0ZWx5IG9yZ2FuaXNpbmcgZ3JvdXAgY2FsbHMgd2l0aCBwZW9wbGUgd2hvIGFyZSBsZWF2aW5nIHRoZSBjb21wYW55LCBzdWNoIGFzIGEgJnF1b3Q7aGFwcHkgaG91ciZxdW90OyBjYWxsIG9yIHNvLCB3ZXJlIHZlcnkgYXdrd2FyZCAtIGFzIGl0IHdhcyBqdXN0IHRoZSBvbmUgcGVyc29uIHdob20gZXZlcnlvbmUgd2FzIGF0dGVtcHRpbmcgdG8gdGFsayB0byBhbmQgZWFjaCBwZXJzb24gd2FpdGluZyBmb3IgdGhlaXIgdHVybiB0byB0YWxrITwvcD4KPGJsb2NrcXVvdGU+CjxwPiZxdW90Oy4uLnRoZSBvdGhlciB0aGluZyB0aGF0IHdlIGhhdmUgZG9uZSB3ZWxsIG9uIG91ciB0ZWFtIGFuZCBvdGhlciB0ZWFtcyBhbmQgaGF2ZSBhbHdheXMgcHJvbW90ZWQgaW50ZXJuYWxseSBhdCBJbnZpc2lvbiBhcyBJIHRoaW5rIHRoaXMgaXMgdGhlIG1vc3Qgb3JnYW5pYywgYmVzdCB3YXkgdG8gZG8gaXQuIFRoZSBmaXJzdCA1IG1pbnMgb3Igc28gb2YgYW55IG1lZXRpbmcgYXJlIHJlbGlnaW91c2x5IGRlZGljYXRlZCwgd2hldGhlciBpdCBpcyAxLW9uLTFzIG9yIGEgbGFyZ2VyIGdyb3VwLCB0byBqdXN0IHNvY2lhbGlzaW5nIC0gc2hvb3RpbmcgdGhlIHNoKnQgb24gcmFuZG9tIHRoaW5ncy4gQW5kIHRoYXQncyB5b3VyIG9wcG9ydHVuaXR5IHRvIGxpa2UgYmUgaHVtYW4gYWJvdXQgc3R1ZmYuPC9wPgo8L2Jsb2NrcXVvdGU+CjxibG9ja3F1b3RlPgo8cD48c3Ryb25nPi0gU2NvdHQgSGFuZm9yZCwgRGlyZWN0b3Igb2YgQ3VzdG9tZXIgQWNxdWlzaXRpb24gYXQgSW52aXNpb248L3N0cm9uZz48L3A+CjwvYmxvY2txdW90ZT4KPHA+U2hhbmUsIGNvLWZvdW5kZXIgb2YgU2NyYXBpbmdodWIsIG1lbnRpb25lZCB0aGF0IHRoZSBjcnVjaWFsIGluZ3JlZGllbnQgdG8gc3VjY2VzcyB3YXMgdG8gZW5zdXJlIHRoYXQgc3VjaCBpbml0aWF0aXZlcyB3ZXJlIGxlZCBhbmQgZ3Jvd24gZnJvbSBib3R0b20tdXAgcmF0aGVyIHRoYW4gYmVpbmcgcHVzaGVkIGZyb20gdGhlIHRvcC4gSGUgZm91bmQgdGhhdCB0aGVyZSB3YXMgbXVjaCB3aWRlciBhY2NlcHRhbmNlIGFuZCB0aGF0IGV2ZXJ5b25lIGVuam95ZWQgdGhlIGV4cGVyaWVuY2UgbXVjaCBtb3JlLjwvcD4KPGJsb2NrcXVvdGU+CjxwPiZxdW90O0kgdGhpbmsgeW91IG5lZWQgdG8gYmUgZGVsaWJlcmF0ZSBhYm91dCBhIGxvdCBvZiB0aGluZ3MuIEknbGwgdGFrZSBhIGdvb2QgZXhhbXBsZTogaXQgaXMgd2hhdCB3ZSBjYWxsIG91ciBTaHJ1YmJlcnMgdm9pY2Ugc3F1YWQgLSBpdCBpcyBhIGdyb3VwIG9mIHBlb3BsZSB3ZSBzZXQgdXAgdG8gdGFsayB0byBwZW9wbGUgaW4gU2NyYXBpbmdodWIgdG8gcmVwcmVzZW50IGRpZmZlcmVudCB2aWV3cywgdG8ga2lja29mZiBpbml0aWF0aXZlcy4uLndlIGFyZSBkb2luZyBhIE1vdXZlbWJlciB0aGluZyBhdCB0aGUgbW9tZW50IGFyb3VuZCB3ZWxsbmVzcy4gU28sIHdlIGtpY2tlZCBpdCBvZmYgYW5kIGl0IHdhcyBhIGRlbGliZXJhdGUgc2V0IHVwIGFuZCBJIGRlY2lkZWQgdGhhdCB0aGlzIHNob3VsZG4ndCBiZSBhbGwgdG9wLWRvd24gbGVkLiBJIHdhbnRlZCBhIGdyb3VwIG9mIHBlb3BsZSBhdCBTY3JhcGluZ2h1YiB3aG8gd2VyZSBwYXNzaW9uYXRlIGFib3V0IHRoaXMgYW5kIHdlcmVuJ3QganVzdCBjb21pbmcgZnJvbSBtYW5hZ2VtZW50LjwvcD4KPC9ibG9ja3F1b3RlPgo8YmxvY2txdW90ZT4KPHA+PHN0cm9uZz4tIFNoYW5lIEV2YW5zLCBDby1mb3VuZGVyICZhbXA7IENFTyBvZiBTY3JhcGluZ2h1Yjwvc3Ryb25nPjwvcD4KPC9ibG9ja3F1b3RlPgo8aDIgaWQ9Il82LXNsYWNrLWNoYW5uZWxzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI182LXNsYWNrLWNoYW5uZWxzIj4jPC9hPiA2LiBTbGFjayBjaGFubmVsczwvaDI+CjxwPkFuIGFzcGVjdCB3aGljaCBoZWxwcyBwZW9wbGUgYm9uZCB3aXRoIGVhY2ggb3RoZXIgaXMgY29tbW9uIGludGVyZXN0cy4gQnVpbGRpbmcgc2xhY2sgY2hhbm5lbHMgdGhhdCBjYXRlciB0byBzcGVjaWZpYyBpbnRlcmVzdHMgd2hlcmUgcGVvcGxlIGNhbiBpbnRlcmFjdCB3aXRoIG90aGVycyBzaGFyaW5nIHNpbWlsYXIgcGFzc2lvbnMgaGVscHMgdGhlbSB0byBnZXQgdG8ga25vdyBvbmUtYW5vdGhlciwgd2hpbGUgYWRkaW5nIGFuIGV4dHJhIGRpbWVuc2lvbiB0byB0aGVpciB3b3JrZGF5LiAmbHQ7QWRkIHN1cnZleSBkYXRhJmd0OzwvcD4KPGJsb2NrcXVvdGU+CjxwPiZxdW90Oy4uLnRoaW5ncyB3ZSBoYXZlIGRvbmUgd2hlcmUgd2UgZmluZCBzdWNjZXNzIGF0IEludmlzaW9uIGFuZCBpbiBteSBvd24gdGVhbSBhcmU6IENoYW5uZWxzIGluIHNsYWNrIHdoZXJlIHBlb3BsZSBoYXZlIGNlcnRhaW4gaW50ZXJlc3RzLiBXZSBoYXZlIGdvdCBhYm91dCBhIGZldyBodW5kcmVkIGF0IHRoaXMgcG9pbnQgZnJvbSBjcnlwdG9jdXJyZW5jeSB0byBOQkEuLi4uLlRoYXQncyBhY3R1YWxseSBob3cgeW91IGNhbiByZWFsbHkgaGF2ZSBhIGxpa2UgYSBzb2NpYWxpc2F0aW9uIG9mIGNlcnRhaW4gdGhlbWVzIGFuZCB0aGluZ3MgdGhhdCB5b3UgYXJlIGludGVyZXN0ZWQgaW4gd2l0aCBvdGhlciBjby13b3JrZXJzLjwvcD4KPC9ibG9ja3F1b3RlPgo8YmxvY2txdW90ZT4KPHA+PHN0cm9uZz4tIFNjb3R0IEhhbmZvcmQsIERpcmVjdG9yIG9mIEN1c3RvbWVyIEFjcXVpc2l0aW9uIGF0IEludmlzaW9uPC9zdHJvbmc+PC9wPgo8L2Jsb2NrcXVvdGU+CjxoMiBpZD0iXzctdGVhbS1vZmZzaXRlcyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfNy10ZWFtLW9mZnNpdGVzIj4jPC9hPiA3LiBUZWFtIG9mZnNpdGVzPC9oMj4KPHA+V2hlbiB3b3JraW5nIHJlbW90ZWx5LCB3ZSBvbmx5IGludGVyYWN0IHdpdGggYSBkaWdpdGFsIDJEIHJlcHJlc2VudGF0aW9uIG9mIGFueSBwZXJzb24uIFdoaWxlIG1hbnkgb2YgdGhlIGFmb3JlbWVudGlvbmVkIGluaXRpYXRpdmVzIGNhbiBpbXByb3ZlIHRoZSBxdWFsaXR5IG9mIHJlbGF0aW9uc2hpcHMgaW4gdGhlIHRlYW0sIG5vbmUgY29tZSBjbG9zZSB0byB0aGUgcGVyc29uYWwgYm9uZHMgdGhhdCBjYW4gYmUgZm9ybWVkIHdoZW4gcGVvcGxlIGFjdHVhbGx5IG1lZXQgaW4tcGVyc29uLiBUaGlzIG1ha2VzIGEgc3Ryb25nIGNhc2UgZm9yIHRlYW0gb2Zmc2l0ZXMhPC9wPgo8cD5Nb3N0IHRlYW1zIHdlIHNwb2tlIHRvIGhhdmUgb25jZSBldmVyeSA2IHRvIDkgbW9udGhzLiBUaGUgaWRlYSBpcyB0byBpbnRlcmFjdCB3aXRoIG9uZS1hbm90aGVyIGluZm9ybWFsbHkgaW4gYSBub24td29yayBjbGltYXRlIHRvIGFjdHVhbGx5IGtub3cgcGVyc29uYWxpdGllcyByYXRoZXIgdGhhbiBqdXN0IHRoZSBjb25jZXB0IG9mIGEgcGVyc29uLiBEYXZlIE5ldm9ndCwgQ28tZm91bmRlciAmYW1wOyBDRU8gb2YgSHVic3RhZmYsIHJlY29nbmlzZWQgb2Zmc2l0ZXMgYXMgYmVpbmcgdGhlIG1vc3QgaW1wb3J0YW50IGZhY3RvciBpbiByZXRhaW5pbmcgdGFsZW50IGFuZCBjcmVhdGluZyBhIHBvc2l0aXZlIHdvcmsgZW52aXJvbm1lbnQuIFdlIGFsc28gdGFrZSBhYm91dCB0aGlzIGluIHRoZSBkaXNjdXNzaW9uIG9mICZxdW90O1JlbW90ZS1maXJzdCBvciBSZW1vdGUtZnJpZW5kbHkmcXVvdDssIHdoZXJlIGludGVybWluZ2xpbmcgb2YgaW4tb2ZmaWNlIGFuZCByZW1vdGUgd29ya2VycyAoaW4gYSBjb21wYW55IHRoYXQgaXNuJ3QgZnVsbHkgcmVtb3RlKSBiZWNvbWVzIHN1cGVyIGNydWNpYWwuPC9wPgo8aDIgaWQ9Il84LW1lYXN1cmUtZW5nYWdlbWVudCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfOC1tZWFzdXJlLWVuZ2FnZW1lbnQiPiM8L2E+IDguIE1lYXN1cmUgZW5nYWdlbWVudDwvaDI+CjxwPkFub3RoZXIgaW1wb3J0YW50IGluaXRpYXRpdmUgaXMgdG8gY29uZHVjdCByZWd1bGFyIHN1cnZleXMgYW5kIHBlcnNvbmFsIHNlc3Npb25zIHRvIGdldCBhIHB1bHNlIG9mIHRoZSBjdXJyZW50IGxldmVscyBvZiBlbmdhZ2VtZW50IGFuZCBtb3RpdmF0aW9uIGxldmVscyBvZiB0aGUgdGVhbS4gVGhlcmUgYXJlIG1hbnkgPGEgaHJlZj0iaHR0cHM6Ly93d3cucmVtb3RlLnRvb2xzL2NhdGVnb3J5L0VtcGxveWVlLXJlbGF0ZWQiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPmVtcGxveWVlIGVuZ2FnZW1lbnQgbWVhc3VyZW1lbnQ8T3V0Ym91bmRMaW5rLz48L2E+IHRvb2xzIHRoYXQgYXR0ZW1wdCB0byB0YWNrbGUgdGhpcyBvdXRyZWFjaCBpbiBhIHN0cnVjdHVyZWQgZmFzaGlvbi4gTGlzdGVuaW5nIHRvIHlvdXIgZW1wbG95ZWVzIGF0IGNvbnNpc3RlbnQgaW50ZXJ2YWxzIGNhbiBlbmFibGUgeW91IHRvIGFudGljaXBhdGUgYW55IGZ1dHVyZSBjaGFsbGVuZ2VzIGFuZCBhZGRyZXNzIHRoZW0gYWNjb3JkaW5nbHkuPC9wPgo8L0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yPgo="},null]}