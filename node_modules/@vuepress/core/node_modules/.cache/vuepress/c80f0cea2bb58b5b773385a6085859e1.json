{"remainingRequest":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/Macbook/Documents/projects/remotework2020_new/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/Macbook/Documents/projects/remotework2020_new/docs/3e-is-remote-the-future.md?vue&type=template&id=5f117cfd&","dependencies":[{"path":"/Users/Macbook/Documents/projects/remotework2020_new/docs/3e-is-remote-the-future.md","mtime":1580717414735},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/vue-loader/lib/index.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/@vuepress/markdown-loader/index.js","mtime":1576060144870}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PHA+PGltZyBzcmM9Ii9hc3NldHMvaXNfcmVtb3RlX3RoZV9mdXR1cmUucG5nIiBhbHQ9IiI+PC9wPgo8aDEgaWQ9ImlzLXJlbW90ZS10aGUtZnV0dXJlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2lzLXJlbW90ZS10aGUtZnV0dXJlIj4jPC9hPiBJcyByZW1vdGUgdGhlIGZ1dHVyZT88L2gxPgo8cD5SZW1vdGUgd29yayBpc24ndCBhIG5ldyBjb25jZXB0LiBJbiBmYWN0LCBhcyB3ZSBwb2ludGVkIG91dCBpbiBlYXJsaWVyIHNlY3Rpb25zLCB0aGUgb3JpZ2lucyBvZiByZW1vdGUgd29yayBnbyBiYWNrIHRvIHRoZSBwb3N0IFdXSUkgZXJhLiBMYXJnZSBoeWJyaWQgdGVhbXMgb3Igd29yayBmcm9tIGhvbWUgb3B0aW9ucyBoYXZlIGJlZW4gbWFpbnN0cmVhbSBmb3IgYSBsb25nIHRpbWUuIFRvIHB1c2ggdGhlIGJvdW5kYXJpZXMsIGluIHJlY2VudCB5ZWFycywgY29tcGFuaWVzIGxpa2UgR2l0TGFiLCBJblZpc2lvbiwgU2NyYXBpbmdIdWIgZXRjLiBoYXZlIHRha2VuIHRoZSBsZWFkIGluIGJ1aWxkaW5nIDEwMCUgZGlzdHJpYnV0ZWQgdGVhbXMgb2YgYWJvdXQgMSwwMDAgZW1wbG95ZWVzLjwvcD4KPGgyIGlkPSJjYW4tcmVtb3RlLWJlY29tZS10aGUtZGVmYXVsdCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNjYW4tcmVtb3RlLWJlY29tZS10aGUtZGVmYXVsdCI+IzwvYT4gQ2FuIHJlbW90ZSBiZWNvbWUgdGhlIGRlZmF1bHQ/PC9oMj4KPHA+VGhlIHBlcnRpbmVudCBxdWVzdGlvbiwgaG93ZXZlciwgaXMgd2hldGhlciB0aGUgcmVtb3RlIG1vdmVtZW50IGlzIGxhcmdlIGVub3VnaCB0byBtYWtlIGl0IGEgZGVmYXVsdCBmb3IgZnV0dXJlLjwvcD4KPHA+VG8gYW5zd2VyIHRoaXMgcXVlc3Rpb24sIGxldCdzIGxvb2sgYXQgdGhlIGZhY3RvcnMgdGhhdCBtYWtlIHJlbW90ZSB3b3JrLCB3b3JrOjwvcD4KPHA+PHN0cm9uZz4xLiBBY2Nlc3MgdG8gZ2xvYmFsIHRhbGVudDwvc3Ryb25nPjwvcD4KPHA+SWYgeW91IGFyZSB0aGUgZm91bmRlciBvciBmb3VuZGluZyBtZW1iZXIgb2YgYW4gZWFybHktc3RhZ2Ugc3RhcnR1cCwgeW91IHdvdWxkIGtub3cgaG93IGRpZmZpY3VsdCBpdCBpcyB0byBhdHRyYWN0IHRhbGVudC4gRXZlbiBzdGFydHVwcyBsaWtlIFN1cGVyaHVtYW4gKHdoaWNoIGhhcyBhdHRyYWN0ZWQgYSBodWdlIGFtb3VudCBvZiBhdHRlbnRpb24gaW4gdGhlIHJlY2VudCB0aW1lcykgZmluZCBpdCBjaGFsbGVuZ2luZyB0byBvbmJvYXJkIGdyZWF0IGVtcGxveWVlcy48L3A+CjxwPk5hdHVyYWxseSwgdGhlIGNob2ljZSB0aGVuIHNoaWZ0cyB0byB0aGUgZ2xvYmFsIHdvcmtmb3JjZSB3aGVyZSB5b3UgY2FuIHdvcmsgd2l0aCBhbnlvbmUgZnJvbSBhbnl3aGVyZSBpbiB0aGUgd29ybGQgYW5kIGZpbmQgdGhlIGJlc3QgcGVyc29uIGZvciB0aGUgam9iLCBub3QganVzdCBzZXR0bGUgZm9yIHNvbWVvbmUgbGVzcyBxdWFsaWZpZWQuPC9wPgo8YmxvY2txdW90ZT4KPHA+SSB0aGluayB0aGF0IG1vcmUgY29tcGFuaWVzIHdpbGwgZW1icmFjZSByZW1vdGUgd29yayBhcyB0aGUgYmVuZWZpdHMgYmVjb21lIG1vcmUgYXBwYXJlbnQsIG9yZ2FuaXphdGlvbmFsIGNvbXBldGVuY3kgaW1wcm92ZXMgYW5kIHRoZSBjb21wZXRpdGlvbiBmb3IgdGFsZW50ZWQgcGVvcGxlIGludGVuc2lmaWVzLjwvcD4KPHA+PHN0cm9uZz4tIEFsb25kbyBCcmV3aW5ndG9uLCBNYWtlciwgUG9kY2FzdGVyLCBEaWdpdGFsIE5vbWFkPC9zdHJvbmc+PC9wPgo8L2Jsb2NrcXVvdGU+CjxwPjxzdHJvbmc+Mi4gSW1wcm92ZWQgcmV0ZW50aW9uPC9zdHJvbmc+PC9wPgo8cD5FbXBsb3llZSByZXRlbnRpb24gaXMgYSBzaWduaWZpY2FudCBjaGFsbGVuZ2UgZm9yIGNvbXBhbmllcyBhcyB0aGUgYXZlcmFnZSB0aW1lIHNwZW50IGJ5IGFuIGluZGl2aWR1YWwgZHJvcHMgZXZlcnkgeWVhci4gV2l0aCByZW1vdGUsIHRoZSBncmVhdCB0aGluZyBpcyB5b3Ugd2lsbCBuZXZlciBoYXZlIGVtcGxveWVlcyBsZWF2ZSB5b3VyIHRlYW0gZHVlIHRvIGNoYW5nZSBpbiBwZXJzb25hbCBjaXJjdW1zdGFuY2VzIChlLmcuIHVuYWJsZSB0byB0cmF2ZWwgdG8gb2ZmaWNlIG9yIHNoaWZ0aW5nIGJhY2sgdG8gaG9tZXRvd24pLjwvcD4KPGJsb2NrcXVvdGU+CjxwPkZldyBjb21wYW5pZXMgY2FuIG9mZmVyIHNhbGFyaWVzIHRoYXQgY2FuIG1ha2Ugc29tZW9uZSBtb3ZlIHRvIGEgZGlmZmVyZW50IGNpdHkgb3IgY291bnRyeS4gRXZlbiBmZXdlciBjYW4gZG8gc28gZm9yIGFuIGV4cGVydCBpbiB0aGUgZmllbGQuIEV2ZXJ5b25lIHJlYWNoZXMgYSBwb2ludCB3aGVyZSB0aGUgcXVhbGl0eSBvZiBsaWZlIGlzIG1vcmUgaW1wb3J0YW50IHRoYW4gbW9uZXksIG5vIG1hdHRlciBob3cgaGlnaCB0aGUgc2FsYXJ5LjwvcD4KPHA+QnkgZGlzYWxsb3dpbmcgcmVtb3RlIHdvcmssIGNvbXBhbmllcyBhcmUgc3BlbmRpbmcgbW9yZSBhbmQgbW9yZSBtb25leSB0byB0aXAgdGhlIHNjYWxlIGluIHRoZWlyIGZhdm9yIHdoZW4gaGlyaW5nIHRhbGVudC4gUmVtb3RlIGpvYnMgY2FuIGhlbHAgcHJvdmlkZSBoaWdoLXF1YWxpdHkgZW1wbG95ZWVzIHRoYXQgd291bGQgZWl0aGVyIG5vdCBiZSBhdmFpbGFibGUgb3IgYmUgdG9vIGV4cGVuc2l2ZSB0byByZWxvY2F0ZS48L3A+CjxwPjxzdHJvbmc+LSBGcmFuY2VzY28gQWdub2xldHRvLCBSZW1vdGUgSlMgZGV2ZWxvcGVyIChJdGFseSwgU3BhaW4pPC9zdHJvbmc+PC9wPgo8L2Jsb2NrcXVvdGU+CjxwPjxzdHJvbmc+My4gSGlnaGVyIHByb2R1Y3Rpdml0eTwvc3Ryb25nPjwvcD4KPHA+UmVtb3RlIGNvbXBsZXRlbHkgZWxpbWluYXRlcyB0aGUgbmVlZCBmb3IgY29tbXV0ZSBhbmQgaW4gZWZmZWN0LCBmcmVlcyB1cCBhIGxvdCBvZiB0aW1lIGFuZCBlbmVyZ3kgZm9yIHdvcmsuIEFwYXJ0IGZyb20gdGhpcywgcmVtb3RlIHdvcmtlcnMgZ2V0IGEgbG90IG9mIGZsZXhpYmlsaXR5IGluIGNob29zaW5nIHRoZWlyIHdvcmsgc2NoZWR1bGUsIHdoaWNoIGhlbHBzIHRoZW0gYWxpZ24gZm9yIG1heGltdW0gcHJvZHVjdGl2aXR5LjwvcD4KPGJsb2NrcXVvdGU+CjxwPkhvbmVzdGx5LCBJIG5lZWRlZCBhIGJpZyBjaGFuZ2UuIElmIHlvdSBsaXZlIGluIEF0bGFudGEgb3IgYW55d2hlcmUgaW4gdGhlIFVuaXRlZCBTdGF0ZXMsIHlvdSBrbm93IHRoYXQgaW4gbWFqb3IgY2l0aWVzLCB0cmFmZmljIGNhbiBiZSBhIGh1Z2UgcHJvYmxlbS4gSW4gQXRsYW50YSwgbXkgY29tbXV0ZSB3YXMgYWxtb3N0IG92ZXIgYW4gaG91ciBlYWNoIHdheSB0byBteSBqb2IgaW4gbWlkdG93bi4gSSBsb3ZlZCB3aGF0IEkgZGlkLCBidXQgdGhlIHRyZWFjaGVyb3VzIGNvbW11dGUgd2FzIGEgZHJhaW4uPC9wPgo8cD48c3Ryb25nPi0gQ2hhbmVsbCBUdXJuZXIsIEZyZWVsYW5jZSB3cml0ZXIgJmFtcDsgcmVtb3RlIHdvcmsgZXZhbmdlbGlzdDwvc3Ryb25nPjwvcD4KPC9ibG9ja3F1b3RlPgo8aDIgaWQ9ImFkZHJlc3NpbmctcHJvYmxlbXMtd2l0aC1yZW1vdGUtYW5kLXdheS1mb3J3YXJkIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2FkZHJlc3NpbmctcHJvYmxlbXMtd2l0aC1yZW1vdGUtYW5kLXdheS1mb3J3YXJkIj4jPC9hPiBBZGRyZXNzaW5nIHByb2JsZW1zIHdpdGggcmVtb3RlIGFuZCB3YXkgZm9yd2FyZDwvaDI+CjxwPlJlbW90ZSB0aGVuIGxvb2tzIGxpa2UgYSBsdWNyYXRpdmUgb3B0aW9uIGZvciBjb21wYW5pZXMuIEFuZCBpdCB3b3JrcyBib3RoIHdheXMuIEFzIHRoZSBudW1iZXIgb2YgZnVsbHkgZGlzdHJpYnV0ZWQgb3IgcmVtb3RlLWZpcnN0IGNvbXBhbmllcyBpbmNyZWFzZXMsIGNhbmRpZGF0ZXMgbmF0dXJhbGx5IGFyZSBtb3JlIGluY2xpbmVkIHRvd2FyZHMgYSByZW1vdGUgcm9sZS48L3A+CjxwPkJ1dCB0aGUgcGljdHVyZSBpc24ndCBqdXN0IGFsbCByb3N5LiBUaGVyZSBhcmUgcGVydGluZW50IHByb2JsZW1zIGFyb3VuZCBtYW5hZ2luZyBhIHJlbW90ZSB0ZWFtLCBzZXR0aW5nIHByb2Nlc3NlcywgYmF0dGxpbmcgaXNvbGF0aW9uLCBtYWludGFpbmluZyB5b3VyIG93biBhbmQgeW91ciBjb3dvcmtlcnMnIHdlbGwtYmVpbmcgYW1vbmcgb3RoZXJzLCB0aGF0IGFyZSBhIHJlYWxpdHkgZm9yIHJlbW90ZSB3b3JrLjwvcD4KPHA+SG93ZXZlciwgdGhlIGdvb2QgdGhpbmcgaXMgdGhhdCBnaXZlbiB0aGUgYXdhcmVuZXNzIG9mIHRoZXNlIHByb2JsZW1zLCBwZW9wbGUgYXJlIGFjdGl2ZWx5IGNyZWF0aW5nIGEga25vd2xlZGdlIGJhc2UsIHNoYXJpbmcgbGVhcm5pbmdzIG9uIGhvdyB0byBiZXN0IHRhY2tsZSBzdWNoIHByb2JsZW1zIC0gZXhhbXBsZSwgdGhpcyBndWlkZcKg8J+Ru29yIEdpdExhYidzIDMsMDAwIHBhZ2UgbWFudWFsLjwvcD4KPHA+U28sIHllcyEgV2UgYmVsaWV2ZSByZW1vdGUgd2lsbCBzdXJlbHkgYmVjb21lIHRoZSBkZWZhdWx0IG1vZGUgb2Ygd29yayBpbiBmdXR1cmUuIEEgaHVnZSBjaHVuayBvZiBpbmRpY2F0b3JzIHNpZ25hbCB0aGUgbW92ZW1lbnQgb2YgY29tcGFuaWVzIGVtYnJhY2luZyByZW1vdGUgb24gYSB3aWRlIHNjYWxlLiBTbyBpdCBpcyB0aW1lLCB5b3Ugc2hvdWxkIHByZXBhcmUgeW91cnNlbGYgdG8gZW1icmFjZSByZW1vdGXCoPCfmYw8L3A+Cjxicj4KPGNlbnRlcj4KPGI+UEFSVE5FUlM8L2I+Cjxocj4KPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmxleGlwbGUuY29tIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBjbGFzcz0icGFydG5lci1sb2dvIiBzcmM9Ii9hc3NldHMvZmxleGlwbGUtbG9nby1tb25vZ3JhbS5qcGciIHdpZHRoPTgwLz48L2E+CiZlbXNwOyZlbXNwOyZlbXNwOwo8YSBocmVmPSJodHRwczovL3dld29ya3JlbW90ZWx5LmNvbSIgdGFyZ2V0PSJfYmxhbmsiPjxpbWcgY2xhc3M9InBhcnRuZXItbG9nbyIgc3JjPSIvYXNzZXRzL1dXUi5wbmciIHdpZHRoPTgwLz48L2E+CiZlbXNwOyZlbXNwOyZlbXNwOwo8YSBocmVmPSJodHRwczovL3J1bm5pbmdyZW1vdGUuY29tIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBjbGFzcz0icGFydG5lci1sb2dvIiBzcmM9Ii9hc3NldHMvcnVubmluZy1yZW1vdGUuanBnIiB3aWR0aD04MC8+PC9hPgo8L2NlbnRlcj4KPC9Db250ZW50U2xvdHNEaXN0cmlidXRvcj4K"},null]}