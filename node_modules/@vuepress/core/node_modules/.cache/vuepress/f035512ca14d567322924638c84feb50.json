{"remainingRequest":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/Macbook/Documents/projects/FreelancerReport2020/docs/7-how-to-choose-the-right-freelance-web-or-app-developer.md?vue&type=template&id=2f976cc0&","dependencies":[{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/docs/7-how-to-choose-the-right-freelance-web-or-app-developer.md","mtime":1586246633006},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/vue-loader/lib/index.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/@vuepress/markdown-loader/index.js","mtime":1582710536446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PHA+PGltZyBzcmM9Ii9hc3NldHMvaG93LXRvLWNob29zZS10aGUtcmlnaHQtZnJlZWxhbmNlLXdlYi1vci1hcHAtZGV2ZWxvcGVyLnBuZyIgYWx0PSJob3ctdG8tY2hvb3NlLXRoZS1yaWdodC1mcmVlbGFuY2Utd2ViLW9yLWFwcC1kZXZlbG9wZXIucG5nIj48L3A+CjxoMSBpZD0iaG93LXRvLWNob29zZS10aGUtcmlnaHQtZnJlZWxhbmNlLXdlYi1vci1hcHAtZGV2ZWxvcGVyIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2hvdy10by1jaG9vc2UtdGhlLXJpZ2h0LWZyZWVsYW5jZS13ZWItb3ItYXBwLWRldmVsb3BlciI+IzwvYT4gSG93IHRvIGNob29zZSB0aGUgcmlnaHQgZnJlZWxhbmNlIHdlYiBvciBhcHAgZGV2ZWxvcGVyPzwvaDE+CjxwPkNvbXBhbmllcyBhcmUgaW5jcmVhc2luZ2x5IHR1cm5pbmcgdG8gZnJlZWxhbmNlcnMgZm9yIHRoZSBhYmlsaXR5IHRvIGdldCB0aGVtIG9uYm9hcmQgcXVpY2tseSBhbmQgYWxzbyB0byBoaXJlIGZvciB0aGUgc2tpbGxzIHRoYXQgYXJlIGhpZ2hseSBhbGlnbmVkIHRvIGpvYiByZXF1aXJlbWVudHMuIEhvd2V2ZXIsIHRoZSBudW1iZXIgb2YgZnJlZWxhbmNlcnMgaXMgZ3Jvd2luZyBlYWNoIHllYXIuIFRoaXMgbWFrZXMgdGhlIHRhc2sgb2YgY2hvb3NpbmcgdGhlIHJpZ2h0IGRldmVsb3BlciBmb3IgeW91ciByZXF1aXJlbWVudHMgZXh0cmVtZWx5IHRpbWUgYW5kIGVmZm9ydC1pbnRlbnNpdmUuPC9wPgo8cD48aW1nIHNyYz0iL2Fzc2V0cy9pbnRyb2R1Y3Rpb24ucG5nIiBhbHQ9Imhvdy10by1jaG9vc2Utd2ViLWRldmVsb3Blci5QTkciPjwvcD4KPHA+U291cmNlPC9wPgo8cD5UaGlzIG1ha2VzIGl0IHBhcmFtb3VudCB0byBoYXZlIGEgc3RyZWFtbGluZWQgZXZhbHVhdGlvbiBwcm9jZXNzIGFzIGl0IGhlbHBzIGluOjwvcD4KPG9sPgo8bGk+RmluZGluZyB0aGUgYmVzdCBkZXZlbG9wZXJzIGZvciB0aGUgcm9sZTwvbGk+CjxsaT5NaW5pbWlzaW5nIHRoZSBhbW91bnQgb2YgdGltZSBzcGVudCBvbiBldmFsdWF0aW5nIGNhbmRpZGF0ZXM8L2xpPgo8bGk+RGVjcmVhc2luZyBkcm9wLW9mZnMgZHVyaW5nIHRoZSBwcm9jZXNzPC9saT4KPC9vbD4KPHA+VG8gY29tcHJlaGVuc2l2ZWx5IGV2YWx1YXRlIGFuZCBjaG9vc2UgZnJlZWxhbmNlIGRldmVsb3BlcnMsIGEgcm9idXN0IHByb2Nlc3MgbmVlZHMgdG8gYmUgZGVzaWduZWQuIExldOKAmXMgZGVsdmUgaW50byB3aHkgdGhpcyBpcyBjcml0aWNhbC48L3A+CjxoMiBpZD0ibmVlZC1mb3ItYS1ob2xpc3RpYy1ldmFsdWF0aW9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI25lZWQtZm9yLWEtaG9saXN0aWMtZXZhbHVhdGlvbiI+IzwvYT4gTmVlZCBmb3IgYSBob2xpc3RpYyBldmFsdWF0aW9uPC9oMj4KPHA+Rmlyc3RseSwgd2UgbmVlZCB0byByZWNvZ25pc2UgdGhlIHVzZS1jYXNlIGZvciBoaXJpbmcgYSBmcmVlbGFuY2UgZGV2ZWxvcGVyLiBUeXBpY2FsbHkgYW5kIGlkZWFsbHksIHlvdSBhcmUgaWRlYWxseSBsb29raW5nIGZvciBzb21lb25lIHdobyBpcyBhbiBleHBlcnQgaW4gdGhlaXIgZmllbGQuIFRoZXkgc2hvdWxkIGJlIGFibGUgdG8gcmFtcCB1cCBxdWlja2x5LCBlZmZlY3RpdmVseSB1bmRlcnN0YW5kIHdoYXQgeW91ciB0ZWFtIGlzIHRyeWluZyB0byBhY2hpZXZlLCBhbmQgdGhlbiBzbG90IGluIHNlYW1sZXNzbHkuIEZ1cnRoZXIsIHRoZXkgc2hvdWxkIGJlIGFibGUgdG8gY29tbXVuaWNhdGUgd2VsbCwgYmUgcHJvYWN0aXZlIGVub3VnaCB0byBmb3Jlc2VlIHByb2JsZW1zLCBhbmQgdGFrZSBpbmRlcGVuZGVudCBkZWNpc2lvbnMgd2hpbGUgd29ya2luZyByZW1vdGVseS48L3A+CjxwPkhlbmNlLCB5b3UgbmVlZCB0byBldmFsdWF0ZSB0aGVpciBhYmlsaXR5IHRvIGV4Y2VsIGluIGFsbCBvZiB0aGVzZSBwYXJhbWV0ZXJzLCByYXRoZXIgdGhhbiBqdXN0IHRoZWlyIHRlY2huaWNhbCBhYmlsaXR5LiBUaGlzIG1ha2VzIHRoZSBjYXNlIGZvciBhIOKAmGhvbGlzdGlj4oCZIHZpZXcgaW4gdGhlIGV2YWx1YXRpb24gb2YgZnJlZWxhbmNlIGRldmVsb3BlcnMuPC9wPgo8aDIgaWQ9IndoYXQtdG8tbG9vay1mb3ItdG8tY2hvb3NlLXRoZS1yaWdodC1mcmVlbGFuY2UtZGV2ZWxvcGVyIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3doYXQtdG8tbG9vay1mb3ItdG8tY2hvb3NlLXRoZS1yaWdodC1mcmVlbGFuY2UtZGV2ZWxvcGVyIj4jPC9hPiBXaGF0IHRvIGxvb2sgZm9yIHRvIGNob29zZSB0aGUgcmlnaHQgZnJlZWxhbmNlIGRldmVsb3BlcjwvaDI+CjxwPkFzIGRpc2N1c3NlZCBpbiB0aGUgcHJldmlvdXMgc2VjdGlvbnMsIHRoZXJlIGFyZSBzb21lIGNvbW1vbiBzdHJlbmd0aHMgdGhhdCBhbGwgaGlnaC1xdWFsaXR5IGZyZWVsYW5jZXJzIHJlcXVpcmUuIExldOKAmXMgbG9vayBhdCB0aG9zZSBxdWFsaXRpZXMgaW4gYSBiaXQgbW9yZSBvZiBkZXRhaWw6PC9wPgo8aDQgaWQ9Il8xLXRlY2huaWNhbC1wcm9maWNpZW5jeSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfMS10ZWNobmljYWwtcHJvZmljaWVuY3kiPiM8L2E+IDEuIFRlY2huaWNhbCBQcm9maWNpZW5jeTwvaDQ+CjxwPk5ldyBwZXJtYW5lbnQgZW1wbG95ZWVzIGdlbmVyYWxseSBoYXZlIGFuIGluZHVjdGlvbiBwZXJpb2QuIER1cmluZyB0aGlzIHBlcmlvZCwgdGhleSBhcmUgdHJhaW5lZCBhbmQgZ2l2ZW4gZXhwb3N1cmUgdG8gdGhlIG9yZ2FuaXphdGlvbi4gSW4gY29udHJhc3QsIGZyZWVsYW5jZXJzIGhhdmUgbGltaXRlZCBvbmJvYXJkaW5nIHRpbWUsIHdpdGggcXVpY2sgcmFtcC11cC4gVGhlcmUgdGVuZHMgdG8gYmUgbW9yZSBzY3J1dGlueSBvbiB0aGVpciBwcm9kdWN0aXZpdHkgZnJvbSB0aGUgdmVyeSBiZWdpbm5pbmcgYXMgY29tcGFyZWQgdG8gZnVsbC10aW1lIGVtcGxveWVlcy48L3A+CjxwPlRoaXMgcmVxdWlyZXMgZnJlZWxhbmNlcnMgdG8gYmUgdGVjaG5pY2FsbHkgc3Ryb25nIGluIHRoZWlyIGRvbWFpbiBmb3IgdGhlbSB0byBoaXQgdGhlIGdyb3VuZCBydW5uaW5nLiBIZXJlIGl0IGlzIGtleSB0byBpZGVudGlmeSB0aGUgcGFydGljdWxhciBza2lsbCBzZXRzIHJlcXVpcmVkIGZvciB5b3VyIHByb2plY3QuIEZvciBtYW55IHByb2plY3RzLCBpdCBtaWdodCBtYWtlIHNlbnNlIHRvIGdpdmUgcHJlY2VkZW5jZSB0byB0aG9zZSBza2lsbHMgcmF0aGVyIHRoYW4gZ2VuZXJpYyBjb2RpbmcgYXB0aXR1ZGUgYW5kIGxlYXJuaW5nIGFiaWxpdHkuPC9wPgo8aDQgaWQ9Il8yLWNvbW11bmljYXRpb24tc2tpbGxzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18yLWNvbW11bmljYXRpb24tc2tpbGxzIj4jPC9hPiAyLiBDb21tdW5pY2F0aW9uIFNraWxsczwvaDQ+CjxwPkJlaW5nIGFibGUgdG8gY29tbXVuaWNhdGUgZWZmZWN0aXZlbHkgaXMgdmVyeSBpbXBvcnRhbnQgaW4gZXZlcnkgcHJvZmVzc2lvbmFsIHJlbGF0aW9uc2hpcC4gSG93ZXZlciwgc2luY2UgZnJlZWxhbmNlcnMgYXJlIHR5cGljYWxseSBsb2NhdGVkIHJlbW90ZWx5IGFuZCBkb27igJl0IHdvcmsgb3V0IG9mIHlvdXIgb2ZmaWNlLCBjb21tdW5pY2F0aW9uIHNraWxscyBiZWNvbWUgZXNwZWNpYWxseSBjcml0aWNhbC48L3A+CjxwPlBvb3IgY29tbXVuaWNhdGlvbiBjYW4gbGVhZCB0byBtaXN1bmRlcnN0YW5kaW5ncyBhbmQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBoaW5kZXIgdGhlIGZvcm1hdGlvbiBvZiB0cnVzdC4gRXNwZWNpYWxseSBhdCB0aGUgYmVnaW5uaW5nIG9mIGFuIGVuZ2FnZW1lbnQsIHdoZXJlIGJvdGggcGFydGllcyBhcmUgc3RpbGwgYWRhcHRpbmcgdG8gZWFjaCBvdGhlcnPigJkgd29ya2luZyBzdHlsZXMuPC9wPgo8cD5BIGdvb2QgZnJlZWxhbmNlIGRldmVsb3BlciwgdGhlcmVmb3JlLCBzaG91bGQgZXJyIG9uIHRoZSBzaWRlIG9mIG92ZXItY29tbXVuaWNhdGluZyBhdCBhbGwgdGltZXMg4oCTIGJvdGgsIHdyaXR0ZW4gYW5kIHZlcmJhbC4gVGhpcyBpbnZvbHZlcyBiZWluZyByZXNwb25zaXZlIG92ZXIgdGhlIGFncmVlZCBjb21tdW5pY2F0aW9uIGNoYW5uZWxzLCBleHByZXNzaW5nIGFydGljdWxhdGVseSBhbmQgd2l0aCBjbGFyaXR5LjwvcD4KPHA+U29tZSBvZiB0aGUgcmVkIGZsYWdzIHRvIGxvb2sgb3V0IGZvciBhcmU6PC9wPgo8dWw+CjxsaT5wb29ybHkgd3JpdHRlbiBlbWFpbHM8L2xpPgo8bGk+YSBuZWVkIHRvIGZvbGxvdy11cCBtdWx0aXBsZSB0aW1lczwvbGk+CjxsaT5sYWNrIG9mIGNsYXJpdHkgaW4gdGhlaXIgbWVzc2FnaW5nPC9saT4KPGxpPmZhaWx1cmUgdG8gYWNrbm93bGVkZ2UgZGVhZGxpbmVzIGR1cmluZyB0aGUgaGlyaW5nIHByb2Nlc3MuPC9saT4KPC91bD4KPGg0IGlkPSJfMy1hYmlsaXR5LXRvLXdvcmstaW5kZXBlbmRlbnRseSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfMy1hYmlsaXR5LXRvLXdvcmstaW5kZXBlbmRlbnRseSI+IzwvYT4gMy4gQWJpbGl0eSB0byBXb3JrIEluZGVwZW5kZW50bHk8L2g0Pgo8cD5BcyBkaXNjdXNzZWQsIGZyZWVsYW5jaW5nIGlzIGxhcmdlbHkgYSByZW1vdGUgZXhlcmNpc2UsIHdpdGggb3Bwb3J0dW5pdGllcyBmb3IgRjJGIGludGVyYWN0aW9ucyBiZWluZyBzcGFyc2UuIFRoZXJlZm9yZSwgZnJlZWxhbmNlcnMgbXVzdCBoYXZlIHRoZSBhYmlsaXR5IHRvIGluZGVwZW5kZW50bHkgbWFrZSBkZWNpc2lvbnMgdGhhdCBhcmUgYWxpZ25lZCB0byB0aGUgc3VjY2VzcyBvZiB0aGUgcHJvamVjdCBhbmQgc29sdmUgcHJvYmxlbXMgYXMgdGhleSBjb21lLjwvcD4KPHA+RnVydGhlciwgcmVtb3RlIHdvcmsgaW52b2x2ZXMgYSBsb3Qgb2YgZGl2ZXJzaW9ucyBhbmQgY2hhbGxlbmdlcy4gQmVpbmcgYWJsZSB0byBvdmVyY29tZSB0aGVzZSBvYnN0YWNsZXMgYW5kIHRvIGNvbnNpc3RlbnRseSBkZWxpdmVyIHF1YWxpdHkgaXMgY3JpdGljYWwuIFRoaXMgcmVxdWlyZXMgc3RheWluZyBmb2N1c2VkICZhbXA7IHByb2FjdGl2ZSwgbWFpbnRhaW5pbmcgZ29vZCBkb2N1bWVudGF0aW9uLCBtYW5hZ2luZyB0aW1lIGVmZmVjdGl2ZWx5LCBhbmQgY29tZm9ydCB3aXRoIHRvb2xzIHRoYXQgYWlkIHJlbW90ZSB3b3JraW5nLjwvcD4KPHA+SXQgbWlnaHQgYmUgZGlmZmljdWx0IHRvIGdhdWdlIGEgZnJlZWxhbmNlIGRldmVsb3BlcuKAmXMgcHJvZmljaWVuY3kgaW4gdGhlIGFib3ZlLW1lbnRpb25lZCBza2lsbHMuIFNvLCB1c2luZyB0aGVpciBwcmlvciByZWNvcmQgb2Ygd29ya2luZyB1bmRlciBzaW1pbGFyIGNvbmRpdGlvbnMgZm9yIG90aGVyIHJlbW90ZSB0ZWFtcyBjYW4gYmUgYSBncmVhdCBpbmRpY2F0b3IuPC9wPgo8aDQgaWQ9Il80LXB1bmN0dWFsaXR5LXJlbGlhYmlsaXR5Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI180LXB1bmN0dWFsaXR5LXJlbGlhYmlsaXR5Ij4jPC9hPiA0LiBQdW5jdHVhbGl0eSAmYW1wOyBSZWxpYWJpbGl0eTwvaDQ+CjxwPkl0IGlzIGltcGVyYXRpdmUgdGhhdCB0aGUgZnJlZWxhbmNlciBpcyBwdW5jdHVhbC4gVGhpcyBob2xkcyBub3Qgb25seSBmb3IgZGVsaXZlcmluZyB0aGUgcmVxdWlyZWQgY29kZSBvbiB0aW1lLCBidXQgYWxzbyBmb3IgdGVhbSBtZWV0aW5ncywgc3RhbmQtdXBzLCBldGMuIElmIHRoZXkgYXJlbuKAmXQgcHVuY3R1YWwsIHRoZXkgd291bGQgYmUgaGFtcGVyaW5nIHRoZSBwcm9kdWN0aXZpdHkgb2YgdGhlIGVudGlyZSB0ZWFtLiBJbiBhIHBsYWNlIHdoZXJlIG9wcG9ydHVuaXRpZXMgZm9yIGludGVyYWN0aW9ucyBhcmUgYWxyZWFkeSBsaW1pdGVkLCB0aGlzIGlzIGV2ZW4gbW9yZSBwcm9ub3VuY2VkLjwvcD4KPHA+SW4gYWRkaXRpb24sIHRoZXkgbXVzdCBiZSByZWxpYWJsZSBhbmQgZGVsaXZlciBvbiB0aGVpciBwcm9taXNlcy4gQWdhaW4sIHNpbmNlIGl0IGlzIGhhcmQgdG8gb2JqZWN0aXZlbHkgZ2F1Z2UgYSBkZXZlbG9wZXLigJlzIHB1bmN0dWFsaXR5IG9yIHJlbGlhYmlsaXR5LCBpbnNpZ2h0cyBmcm9tIHRoZWlyIHBhc3QgY2xpZW50IHJlZmVyZW5jZXMgd291bGQgaGVscCBhIGxvdC48L3A+CjxwPlRoaXMgY291bGQgYWxzbyBiZSBhc3Nlc3NlZCBiYXNlZCBvbiB0aGUgaW50ZXJhY3Rpb25zIGR1cmluZyB0aGUgZXZhbHVhdGlvbiBwcm9jZXNzLiBUaGlzIGluY2x1ZGVzIHJlc3BvbnNpdmVuZXNzIG9uIHJlcGxpZXMsIHJlbGlhYmlsaXR5IGluIGRlbGl2ZXJ5IG9mIGV2ZW4gbm9uLXdvcmsgcmVsYXRlZCBpdGVtcywgZXRjLiBCZWZvcmUgc3RhcnRpbmcgdGhlIGVuZ2FnZW1lbnQsIGl0IGJvZGVzIHdlbGwgdG8gaGF2ZSBhIHNob3J0LXRlcm0gcGFpZCB0cmlhbCBwcm9qZWN0LiBUaGlzIHdvdWxkIGJlIGJlbmVmaWNpYWwgdG8gYm90aCBwYXJ0aWVzLCB0byBhc3Nlc3MgZml0LjwvcD4KPGgyIGlkPSJob3ctZG8td2UtZXZhbHVhdGUtZGV2ZWxvcGVycy1hdC1mbGV4aXBsZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNob3ctZG8td2UtZXZhbHVhdGUtZGV2ZWxvcGVycy1hdC1mbGV4aXBsZSI+IzwvYT4gSG93IGRvIHdlIGV2YWx1YXRlIGRldmVsb3BlcnMgYXQgRmxleGlwbGU/PC9oMj4KPHA+QXQgRmxleGlwbGUsIHdlIGhhdmUgZXZhbHVhdGVkIDE2LDAwMCsgZnJlZWxhbmNlIGRldmVsb3BlcnMgYWNyb3NzIHRoZSB3b3JsZCBvdmVyIHRoZSBsYXN0IHRocmVlIHllYXJzLiBBcyBvbmUgY2FuIGltYWdpbmUsIHRoaXMgd291bGRu4oCZdCBoYXZlIGJlZW4gcG9zc2libGUgd2l0aG91dCBhIHN0cmVhbWxpbmVkIHByb2Nlc3MuIFdlIGhhZCB0byBpdGVyYXRlIG11bHRpcGxlIHRpbWVzIHRvIGFycml2ZSBhdCBvdXIgNi1zdGVwIHNjcmVlbmluZyBwcm9jZXNzLiBUaGlzIGVuc3VyZXMgdGhhdCB3ZSBoYXZlIGEgaG9saXN0aWMgdmlldyBvbiBldmVyeSBwZXJzb24gd2hpbGUgc3RpbGwgb3B0aW1pc2luZyBmb3IgdGltZSAmYW1wOyBlZmZvcnQgb2YgYWxsIHBhcnRpZXMgaW52b2x2ZWQuPC9wPgo8cD5UbyBoZWxwIG90aGVycyB3aG8gd291bGQgbGlrZSB0byBpbXBsZW1lbnQgYSBzaW1pbGFyIGV2YWx1YXRpb24gcHJvY2Vzcywgd2UgaGF2ZSBkZXRhaWxlZCB0aGUgc2FtZSBiZWxvdy48L3A+CjxoNCBpZD0iXzEtZGVwdGgtaW4tcGFzdC13b3JrIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18xLWRlcHRoLWluLXBhc3Qtd29yayI+IzwvYT4gMS4gRGVwdGggaW4gcGFzdCB3b3JrPC9oND4KPHA+V2UgYXNrIGVhY2ggZGV2ZWxvcGVyIHRvIGZpbGwgYSBzaW1wbGUgcHJvZmlsZSBmb3JtLiBUaGlzIGZvcm0gaW5jbHVkZXMgYSBnZW5lcmljIGRlc2NyaXB0aW9uIG9mIG9uZXNlbGYsIHRoZSB0ZWNobm9sb2dpZXMgdGhleSBhcmUgcHJvZmljaWVudCBpbiBhbmQgdGhlaXIgQ1ZzLiBXZSB0aGVuIHJldmlldyBkZXZlbG9wZXJzIGJhc2VkIG9uIHRoZSB5ZWFycyAmYW1wOyBxdWFsaXR5IG9mIGV4cGVyaWVuY2UgYW5kIGNvbXBsZXhpdHkgb2YgcHJvZHVjdHMgYnVpbHQuIFRoZSBhbnN3ZXJzIGdpdmVuIGJ5IHRoZSBkZXZlbG9wZXJzIGFsc28gaGVscCB1cyBnYXVnZSB0aGVpciB3cml0dGVuIGNvbW11bmljYXRpb24gc2tpbGxzLjwvcD4KPHA+Rm9yIHByb2NlZWRpbmcgdG8gdGhlIG5leHQgc3RlcCwgd2hpY2ggaXMgYW4gaW50cm9kdWN0b3J5IGNhbGwsIG9ubHkgdGhlIGRldmVsb3BlcnMgd2hvIGRpc3BsYXkgZGVwdGggYW5kIGhhdmUgd29ya2VkIG9uIGVuZC10by1lbmQgcHJvamVjdHMgYXJlIHNlbGVjdGVkLiBUaGlzIGhlbHBzIHVzIHRvIGZvY3VzIGFuZCBkZWVwIGRpdmUgaW50byB0aGUgbW9zdCBwcm9taXNpbmcgY2FuZGlkYXRlcy48L3A+CjxoNCBpZD0iXzItZ29vZC1jb21tdW5pY2F0aW9uLWFuZC1tb3RpdmF0aW9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18yLWdvb2QtY29tbXVuaWNhdGlvbi1hbmQtbW90aXZhdGlvbiI+IzwvYT4gMi4gR29vZCBjb21tdW5pY2F0aW9uIGFuZCBtb3RpdmF0aW9uPC9oND4KPHA+T3ZlciBhIGNhbGwsIHdlIHVzZSB0aGUgbm90ZXMgbWFkZSBpbiB0aGUgcHJldmlvdXMgcm91bmQgdG8gdGVzdCB0aGUgZGVwdGggb2YgdGhlIGRldmVsb3BlcuKAmXMgZXhwZXJpZW5jZS4gV2UgYXNrIHByb2JpbmcgcXVlc3Rpb25zIGFib3V0IHRoZSBwcm9kdWN0cyB0aGV54oCZdmUgYnVpbHQuIFdlIGFyZSBoZW5jZSBhYmxlIHRvIHRlc3QgdGhlaXIgYWJpbGl0eSB0byBhbnN3ZXIgcXVlc3Rpb25zIGNvbXByZWhlbnNpdmVseSBhbmQgaW4gYW4gYXJ0aWN1bGF0ZSBtYW5uZXIuIFRoaXMgaGVscHMgdXMgdW5kZXJzdGFuZCB0aGUgY29uZmlkZW5jZSB0aGV5IGhhdmUgaW4gdGhlaXIgYWJpbGl0aWVzIGFuZCBhbHNvIHRoZSBxdWFsaXR5IG9mIHZlcmJhbCBjb21tdW5pY2F0aW9uLjwvcD4KPHA+T24gdGhlIG5vbi10ZWNobmljYWwgc2lkZSwgd2UgYWxzbyBhY2hpZXZlIGEgZGVlcGVyIHVuZGVyc3RhbmRpbmcgb2YgdGhlIGNhbmRpZGF0ZeKAmXMgbW90aXZhdGlvbiB0byBmcmVlbGFuY2UsIHBhc3QgcmVtb3RlIHdvcmtpbmcgZXhwZXJpZW5jZSwgYW5kIHRoZSBjaGFsbGVuZ2VzIHRoYXQgdGhleeKAmXZlIHNvbHZlZC4gVGhlc2UgaW5wdXRzIGhlbHAgdXMgYXNzZXNzIGlmIHRoZXkgYXJlIGEgZ29vZCBmaXQgZm9yIG91ciBuZXR3b3JrLjwvcD4KPGg0IGlkPSJfMy1zdHJvbmctdGVjaG5pY2FsLWFiaWxpdGllcyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfMy1zdHJvbmctdGVjaG5pY2FsLWFiaWxpdGllcyI+IzwvYT4gMy4gU3Ryb25nIHRlY2huaWNhbCBhYmlsaXRpZXM8L2g0Pgo8cD5PdmVyIG9uZSBvciBtb3JlIEYyRiBpbnRlcnZpZXdzLCB3ZSBjb21wcmVoZW5zaXZlbHkgYXNzZXNzIHRoZSBkZXZlbG9wZXLigJlzIGludm9sdmVtZW50IGFuZCB0aGVpciBwZXJmb3JtYW5jZSBpbiBidWlsZGluZyBjb21wbGV4IHNvZnR3YXJlIHByb2R1Y3RzLiBUaGlzIHNldHMgdGhlIHBsYXRmb3JtIHRvIGRlbHZlIGRlZXBlciBpbnRvIHRlY2hub2xvZ3ktc3BlY2lmaWMgZGlzY3Vzc2lvbnMgd2hlcmUgdGhlIGRldmVsb3BlcuKAmXMga25vd2xlZGdlIGluIHNwZWNpZmljIHRlY2hub2xvZ2llcyBjYW4gYmUgYWRqdWRnZWQuPC9wPgo8cD5UaGlzIHN0ZXAgcmVxdWlyZXMgdGhlIGludm9sdmVtZW50IG9mIHNlbmlvciB0ZWNoIGV4cGVydHMuIFRoZSBpbnNpZ2h0cyBvYnRhaW5lZCBpbiB0aGlzIHN0ZXAgYWxsb3cgdXMgKGFuZCBzaW1pbGFybHkgY291bGQgaGVscCB5b3UpIHRvIG1hdGNoIHRoZSBmcmVlbGFuY2VyIHdpdGggdGhlIHJpZ2h0IHByb2plY3RzIGJhc2VkIG9uIHRoZWlyIHNraWxsIHNldHMuPC9wPgo8aDQgaWQ9Il80LWtlZW4tcHJvYmxlbS1zb2x2aW5nLWFuZC1jb2RpbmciPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzQta2Vlbi1wcm9ibGVtLXNvbHZpbmctYW5kLWNvZGluZyI+IzwvYT4gNC4gS2VlbiBwcm9ibGVtIHNvbHZpbmcgYW5kIGNvZGluZzwvaDQ+CjxwPkEgZ29vZCBkZXZlbG9wZXIgbmVlZHMgdG8gaGF2ZSBhIG1peCBvZiBnb29kIHRlY2huaWNhbCBleHBlcmllbmNlIGFuZCBhbHNvIHByb2JsZW0tc29sdmluZyBhYmlsaXR5LiBUbyB0ZXN0IHRoZWlyIHRlY2huaWNhbCBwcm9maWNpZW5jeSwgd2UgdXNlIHNraWxsLXNwZWNpZmljIHByb2JsZW1zLiBUbyBhZGp1ZGdlIHRoZWlyIHByb2JsZW0tc29sdmluZyBhYmlsaXR5LCB3ZSB1c2UgYSBsaXZlIGNvZGluZyB0ZXN0IGludm9sdmluZyBhbGdvcml0aG1pYyBwcm9ibGVtcy48L3A+CjxwPlRoZXNlIHRlc3RzIGFsbG93IHVzIHRvIG1pbWljIGEgcmVhbC1saWZlLCBoaWdoLXByZXNzdXJlIHNpdHVhdGlvbi4gVGhlcmVieSwgd2UgY2FuIGdldCBhIHByb3h5IG9mIGhvdyBhIGZyZWVsYW5jZXIgbWlnaHQgcmVhY3QgYW5kIHBlcmZvcm0gaW4gc2ltaWxhciBjaXJjdW1zdGFuY2VzLjwvcD4KPGg0IGlkPSJfNS1zcGxlbmRpZC1yZXZpZXdzLWluLWJhY2tncm91bmQtY2hlY2siPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzUtc3BsZW5kaWQtcmV2aWV3cy1pbi1iYWNrZ3JvdW5kLWNoZWNrIj4jPC9hPiA1LiBTcGxlbmRpZCByZXZpZXdzIGluIGJhY2tncm91bmQgY2hlY2s8L2g0Pgo8cD5BcyBkaXNjdXNzZWQgZWFybGllciwgY2xpZW50IHJlZmVyZW5jZXMgYXJlIGEgZ3JlYXQgd2F5IHRvIGdldCB2YWx1YWJsZSBpbnNpZ2h0cyBvbiBob3cgYSBkZXZlbG9wZXIgcGVyZm9ybXMgaW4gcmVhbC1saWZlIHNpdHVhdGlvbnMuIFdlIG9idGFpbiBpbnB1dHMgb24gYSB2YXJpZXR5IG9mIHF1YWxpdGF0aXZlIGZhY3RvcnMgc3VjaCBhcyByZWxpYWJpbGl0eSwgcHVuY3R1YWxpdHksIGNvbW11bmljYXRpb24sIGFuZCByZXNwb25zaXZlbmVzcy4gVGhpcyBpcyB2ZXJ5IGhlbHBmdWwgYXMgc3VjaCBpbnB1dHMgYXJlIG90aGVyd2lzZSBkaWZmaWN1bHQgdG8gYXNzZXNzIG9ubHkgdGhvdWdoIGEgMS1vbi0xIHNjcmVlbmluZy48L3A+CjxoNCBpZD0iXzYtY29uc2lzdGVudC1leGVtcGxhcnktcGVyZm9ybWFuY2UiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzYtY29uc2lzdGVudC1leGVtcGxhcnktcGVyZm9ybWFuY2UiPiM8L2E+IDYuIENvbnNpc3RlbnQgZXhlbXBsYXJ5IHBlcmZvcm1hbmNlPC9oND4KPHA+V2hpbGUgdGhlIGV2YWx1YXRpb24gdG8gdGhpcyBwb2ludCBpcyBleHRyZW1lbHkgY29tcHJlaGVuc2l2ZSwgY29uc2lzdGVudCBwZXJmb3JtYW5jZSBkdXJpbmcgZWFjaCBlbmdhZ2VtZW50IG5lZWRzIHRvIGJlIGRlbGl2ZXJlZC4gT3VyIGRldmVsb3BlcnMgYXJlIGV4cGVjdGVkIHRvIG1haW50YWluIEZsZXhpcGxlIHN0YW5kYXJkcyBhY3Jvc3MgYWxsIGVuZ2FnZW1lbnRzIHdpdGggb3VyIGN1c3RvbWVycy4gWW91IHNob3VsZCBrZWVwIHJlZ3VsYXIgYXBwcmFpc2FscyB0b28gdG8gZW5zdXJlIHRoYXQgcGVyZm9ybWFuY2UgcmVtYWlucyBleGVtcGxhcnkuPC9wPgo8cD5UaGlzIGNvbnRpbnVvdXMgZXZhbHVhdGlvbiBpcyBjYXJyaWVkIG91dCBieSBjb25zaWRlcmluZyBhIGhvc3Qgb2YgZmFjdG9ycy4gRm9yIGV4YW1wbGUsIHRoZSBxdWFsaXR5IG9mIGNvZGUgZGVsaXZlcmVkLCBkb2N1bWVudGF0aW9uIHByYWN0aWNlcyBmb2xsb3dlZCwgYWJpbGl0eSB0byByYW1wIHVwLCBhbmQgc29mdGVyIGFzcGVjdHMgb2YgcmVzcG9uc2l2ZW5lc3MsIHJlbGlhYmlsaXR5LCBldGMuPC9wPgo8aDMgaWQ9ImNsb3NpbmctdGhvdWdodHMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY2xvc2luZy10aG91Z2h0cyI+IzwvYT4gQ2xvc2luZyB0aG91Z2h0czwvaDM+CjxwPlRoZSBpbXBsaWNhdGlvbnMgb2YgbWFraW5nIGEgYmFkIGhpcmUgYXJlIHRvbyBwcm9ub3VuY2VkIOKAkyBkZWxheXMgaW4gcHJvZHVjdCBkZXZlbG9wbWVudCBjeWNsZXMgYW5kIGxvc3Qgb3Bwb3J0dW5pdHkgY29zdHMuIEl0IG1pZ2h0IG9mdGVuIGJlIHRlbXB0aW5nIHRvIHNhdmUgZWZmb3J0IGFuZCB0aW1lIGJ5IHJ1c2hpbmcgdGhyb3VnaCB0aGUgZXZhbHVhdGlvbiBwcm9jZXNzLCBlc3BlY2lhbGx5IGlmIHlvdeKAmXJlIGRlYWxpbmcgd2l0aCBodW5kcmVkcyBvZiBhcHBsaWNhbnRzLiBIb3dldmVyLCBpdCByZWFsbHkgcGF5cyBvZmYgdG8gZG8gYSB0aG9yb3VnaCBhc3Nlc3NtZW50IG9mIGNhbmRpZGF0ZXMuPC9wPgo8L0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yPgo="},null]}