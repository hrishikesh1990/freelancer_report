{"remainingRequest":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/Macbook/Documents/projects/FreelancerReport2020/docs/7-how-to-choose-the-right-freelance-web-or-app-developer.md?vue&type=template&id=2f976cc0&","dependencies":[{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/docs/7-how-to-choose-the-right-freelance-web-or-app-developer.md","mtime":1586868000969},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/vue-loader/lib/index.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/@vuepress/markdown-loader/index.js","mtime":1582710536446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PHA+PGltZyBzcmM9Ii9hc3NldHMvaG93LXRvLWNob29zZS10aGUtcmlnaHQtZnJlZWxhbmNlLXdlYi1vci1hcHAtZGV2ZWxvcGVyLnBuZyIgYWx0PSJob3ctdG8tY2hvb3NlLXRoZS1yaWdodC1mcmVlbGFuY2Utd2ViLW9yLWFwcC1kZXZlbG9wZXIucG5nIj48L3A+CjxoMSBpZD0iaG93LXRvLWNob29zZS10aGUtcmlnaHQtZnJlZWxhbmNlLXdlYi1vci1hcHAtZGV2ZWxvcGVyIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2hvdy10by1jaG9vc2UtdGhlLXJpZ2h0LWZyZWVsYW5jZS13ZWItb3ItYXBwLWRldmVsb3BlciI+IzwvYT4gSG93IHRvIGNob29zZSB0aGUgcmlnaHQgZnJlZWxhbmNlIHdlYiBvciBhcHAgZGV2ZWxvcGVyPzwvaDE+CjxwPkNvbXBhbmllcyBhcmUgaW5jcmVhc2luZ2x5IHR1cm5pbmcgdG8gZnJlZWxhbmNlcnMgZm9yIHRoZSBhYmlsaXR5IHRvIGdldCB0aGVtIG9uYm9hcmQgcXVpY2tseSBhbmQgYWxzbyB0byBoaXJlIGZvciBza2lsbHMgdGhhdCBhcmUgaGlnaGx5IGFsaWduZWQgdG8gdGhlaXIgam9iIHJlcXVpcmVtZW50cy4gSG93ZXZlciwgZXZlbiB0aGUgbnVtYmVyIG9mIGZyZWVsYW5jZXJzIGlzIGdyb3dpbmcgZWFjaCB5ZWFyLiBUaGlzIG1ha2VzIHRoZSB0YXNrIG9mIGNob29zaW5nIHRoZSByaWdodCBkZXZlbG9wZXIgZm9yIHlvdXIgcmVxdWlyZW1lbnRzIGV4dHJlbWVseSB0aW1lIGFuZCBlZmZvcnQtaW50ZW5zaXZlLjwvcD4KPHA+VGhpcyBtYWtlcyBpdCBwYXJhbW91bnQgdG8gaGF2ZSBhIHN0cmVhbWxpbmVkIGV2YWx1YXRpb24gcHJvY2VzcyBhcyBpdCBoZWxwcyBpbjo8L3A+CjxvbD4KPGxpPkZpbmRpbmcgdGhlIGJlc3QgZGV2ZWxvcGVycyBmb3IgdGhlIHJvbGU8L2xpPgo8bGk+TWluaW1pc2luZyB0aGUgYW1vdW50IG9mIHRpbWUgc3BlbnQgb24gZXZhbHVhdGluZyBjYW5kaWRhdGVzPC9saT4KPGxpPkRlY3JlYXNpbmcgZHJvcC1vZmZzIGR1cmluZyB0aGUgcHJvY2VzczwvbGk+Cjwvb2w+CjxwPlRvIGNvbXByZWhlbnNpdmVseSBldmFsdWF0ZSBhbmQgY2hvb3NlIGZyZWVsYW5jZSBkZXZlbG9wZXJzLCBhIHJvYnVzdCBwcm9jZXNzIG5lZWRzIHRvIGJlIGRlc2lnbmVkLiBMZXTigJlzIGRlbHZlIGludG8gd2h5IHRoaXMgaXMgY3JpdGljYWwgYW5kIHRoZW4gaG93IHRvIGRlc2lnbiBzdWNoIGEgcHJvY2Vzcy48L3A+CjxwPjxpbWcgc3JjPSJodHRwczovL2Jsb2cuZmxleGlwbGUuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL2hvdy10by1jaG9vc2Utd2ViLWRldmVsb3Blci0xNng5LnBuZyIgYWx0PSJob3ctdG8tY2hvb3NlLXdlYi1kZXZlbG9wZXIuUE5HIj48L3A+CjxoMiBpZD0ibmVlZC1mb3ItYS1ob2xpc3RpYy1ldmFsdWF0aW9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI25lZWQtZm9yLWEtaG9saXN0aWMtZXZhbHVhdGlvbiI+IzwvYT4gTmVlZCBmb3IgYSBob2xpc3RpYyBldmFsdWF0aW9uPC9oMj4KPHA+Rmlyc3RseSwgd2UgbmVlZCB0byByZWNvZ25pc2UgdGhlIHJlYXNvbiBmb3IgaGlyaW5nIGEgZnJlZWxhbmNlIGRldmVsb3Blci4gVHlwaWNhbGx5IGFuZCBpZGVhbGx5LCB5b3UgYXJlIGxvb2tpbmcgZm9yIHNvbWVvbmUgd2hvIGlzIGFuIGV4cGVydCBpbiB0aGVpciBmaWVsZC4gVGhleSBzaG91bGQgYmUgYWJsZSB0byByYW1wIHVwIHF1aWNrbHksIGVmZmVjdGl2ZWx5IHVuZGVyc3RhbmQgd2hhdCB5b3VyIHRlYW0gaXMgdHJ5aW5nIHRvIGFjaGlldmUsIGFuZCB0aGVuIHNsb3QgaW4gc2VhbWxlc3NseS4gRnVydGhlciwgdGhleSBzaG91bGQgYmUgYWJsZSB0byBjb21tdW5pY2F0ZSB3ZWxsLCBiZSBwcm9hY3RpdmUgZW5vdWdoIHRvIGZvcmVzZWUgcHJvYmxlbXMsIGFuZCB0YWtlIGluZGVwZW5kZW50IGRlY2lzaW9ucyB3aGlsZSB3b3JraW5nIHJlbW90ZWx5LjwvcD4KPHA+SGVuY2UsIHlvdSBuZWVkIHRvIGV2YWx1YXRlIHRoZWlyIGFiaWxpdHkgdG8gZXhjZWwgaW4gYWxsIG9mIHRoZXNlIHBhcmFtZXRlcnMsIHJhdGhlciB0aGFuIGp1c3QgdGhlaXIgdGVjaG5pY2FsIGFiaWxpdHkuIFRoaXMgbWFrZXMgdGhlIGNhc2UgZm9yIGEg4oCYaG9saXN0aWPigJkgdmlldyBpbiB0aGUgZXZhbHVhdGlvbiBvZiBmcmVlbGFuY2UgZGV2ZWxvcGVycy48L3A+CjxoMiBpZD0id2hhdC10by1sb29rLWZvci10by1jaG9vc2UtdGhlLXJpZ2h0LWZyZWVsYW5jZS1kZXZlbG9wZXIiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjd2hhdC10by1sb29rLWZvci10by1jaG9vc2UtdGhlLXJpZ2h0LWZyZWVsYW5jZS1kZXZlbG9wZXIiPiM8L2E+IFdoYXQgdG8gbG9vayBmb3IgdG8gY2hvb3NlIHRoZSByaWdodCBmcmVlbGFuY2UgZGV2ZWxvcGVyPC9oMj4KPHA+QXMgZGlzY3Vzc2VkIGluIHRoZSBwcmV2aW91cyBzZWN0aW9ucywgdGhlcmUgYXJlIHNvbWUgY29tbW9uIHN0cmVuZ3RocyB0aGF0IGFsbCBoaWdoLXF1YWxpdHkgZnJlZWxhbmNlcnMgcmVxdWlyZS4gTGV04oCZcyBsb29rIGF0IHRob3NlIHF1YWxpdGllcyBpbiBhIGJpdCBtb3JlIG9mIGRldGFpbDo8L3A+CjxoNCBpZD0iXzEtdGVjaG5pY2FsLXByb2ZpY2llbmN5Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18xLXRlY2huaWNhbC1wcm9maWNpZW5jeSI+IzwvYT4gMS4gVGVjaG5pY2FsIFByb2ZpY2llbmN5PC9oND4KPHA+TmV3IHBlcm1hbmVudCBlbXBsb3llZXMgZ2VuZXJhbGx5IGhhdmUgYW4gaW5kdWN0aW9uIHBlcmlvZC4gRHVyaW5nIHRoaXMgcGVyaW9kLCB0aGV5IGFyZSB0cmFpbmVkIGFuZCBnaXZlbiBleHBvc3VyZSB0byB0aGUgb3JnYW5pemF0aW9uLiBJbiBjb250cmFzdCwgZnJlZWxhbmNlcnMgaGF2ZSBsaW1pdGVkIG9uYm9hcmRpbmcgdGltZSwgd2l0aCBxdWljayByYW1wLXVwLiBNb3Jlb3ZlciwgdGhlcmUgdGVuZHMgdG8gYmUgbW9yZSBzY3J1dGlueSBvbiB0aGVpciBwcm9kdWN0aXZpdHkgZnJvbSB0aGUgdmVyeSBiZWdpbm5pbmcgYXMgY29tcGFyZWQgdG8gZnVsbC10aW1lIGVtcGxveWVlcy48L3A+CjxwPlRoaXMgcmVxdWlyZXMgZnJlZWxhbmNlcnMgdG8gYmUgdGVjaG5pY2FsbHkgc3Ryb25nIGluIHRoZWlyIGRvbWFpbiBmb3IgdGhlbSB0byBoaXQgdGhlIGdyb3VuZCBydW5uaW5nLiBIZXJlIGl0IGlzIGtleSB0byBpZGVudGlmeSB0aGUgcGFydGljdWxhciBza2lsbCBzZXRzIHJlcXVpcmVkIGZvciB5b3VyIHByb2plY3QuIEZvciBtYW55IHByb2plY3RzLCBpdCBtaWdodCBtYWtlIHNlbnNlIHRvIGdpdmUgcHJlY2VkZW5jZSB0byB0aG9zZSBza2lsbHMgcmF0aGVyIHRoYW4gZ2VuZXJpYyBjb2RpbmcgYXB0aXR1ZGUgYW5kIGxlYXJuaW5nIGFiaWxpdHkuPC9wPgo8aDQgaWQ9Il8yLWNvbW11bmljYXRpb24tc2tpbGxzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18yLWNvbW11bmljYXRpb24tc2tpbGxzIj4jPC9hPiAyLiBDb21tdW5pY2F0aW9uIFNraWxsczwvaDQ+CjxwPkJlaW5nIGFibGUgdG8gY29tbXVuaWNhdGUgZWZmZWN0aXZlbHkgaXMgdmVyeSBpbXBvcnRhbnQgaW4gZXZlcnkgcHJvZmVzc2lvbmFsIHJlbGF0aW9uc2hpcC4gSG93ZXZlciwgc2luY2UgZnJlZWxhbmNlcnMgYXJlIHR5cGljYWxseSBsb2NhdGVkIHJlbW90ZWx5IGFuZCBkb27igJl0IHdvcmsgb3V0IG9mIHlvdXIgb2ZmaWNlLCBjb21tdW5pY2F0aW9uIHNraWxscyBiZWNvbWUgc3VwZXIgY3JpdGljYWwuPC9wPgo8cD5Qb29yIGNvbW11bmljYXRpb24gY2FuIGxlYWQgdG8gbWlzdW5kZXJzdGFuZGluZ3MgYW5kIGNvdWxkIGFsc28gcG90ZW50aWFsbHkgaGluZGVyIHRoZSBmb3JtYXRpb24gb2YgdHJ1c3QuIFRoaXMgaGFwcGVucywgZXNwZWNpYWxseSwgYXQgdGhlIGJlZ2lubmluZyBvZiBhbiBlbmdhZ2VtZW50LCB3aGVyZSBib3RoIHBhcnRpZXMgYXJlIHN0aWxsIGFkYXB0aW5nIHRvIGVhY2ggb3RoZXJz4oCZIHdvcmtpbmcgc3R5bGVzLjwvcD4KPHA+QSBnb29kIGZyZWVsYW5jZSBkZXZlbG9wZXIsIHRoZXJlZm9yZSwgc2hvdWxkIGVyciBvbiB0aGUgc2lkZSBvZiBvdmVyLWNvbW11bmljYXRpbmcgYXQgYWxsIHRpbWVzIOKAkyBib3RoLCB3cml0dGVuIGFuZCB2ZXJiYWwuIFRoaXMgaW52b2x2ZXMgYmVpbmcgcmVzcG9uc2l2ZSBvdmVyIHRoZSBhZ3JlZWQgY29tbXVuaWNhdGlvbiBjaGFubmVscywgZXhwcmVzc2luZyBhcnRpY3VsYXRlbHkgYW5kIHdpdGggY2xhcml0eS48L3A+CjxwPlNvbWUgb2YgdGhlIHJlZCBmbGFncyB0byBsb29rIG91dCBmb3IgYXJlOjwvcD4KPHVsPgo8bGk+cG9vcmx5IHdyaXR0ZW4gZW1haWxzPC9saT4KPGxpPmEgbmVlZCB0byBmb2xsb3ctdXAgbXVsdGlwbGUgdGltZXM8L2xpPgo8bGk+bGFjayBvZiBjbGFyaXR5IGluIHRoZWlyIG1lc3NhZ2luZzwvbGk+CjxsaT5mYWlsdXJlIHRvIGFja25vd2xlZGdlIGRlYWRsaW5lcyBkdXJpbmcgdGhlIGhpcmluZyBwcm9jZXNzPC9saT4KPC91bD4KPGg0IGlkPSJfMy1hYmlsaXR5LXRvLXdvcmstaW5kZXBlbmRlbnRseSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfMy1hYmlsaXR5LXRvLXdvcmstaW5kZXBlbmRlbnRseSI+IzwvYT4gMy4gQWJpbGl0eSB0byBXb3JrIEluZGVwZW5kZW50bHk8L2g0Pgo8cD5BcyBkaXNjdXNzZWQsIGZyZWVsYW5jaW5nIGlzIGxhcmdlbHkgYSByZW1vdGUgZXhlcmNpc2UsIHdpdGggb3Bwb3J0dW5pdGllcyBmb3IgRjJGIGludGVyYWN0aW9ucyBiZWluZyBzcGFyc2UuIFRoZXJlZm9yZSwgZnJlZWxhbmNlcnMgbXVzdCBoYXZlIHRoZSBhYmlsaXR5IHRvIGluZGVwZW5kZW50bHkgbWFrZSBkZWNpc2lvbnMgdGhhdCBhcmUgYWxpZ25lZCB0byB0aGUgc3VjY2VzcyBvZiB0aGUgcHJvamVjdC48L3A+CjxwPkZ1cnRoZXIsIHJlbW90ZSB3b3JrIGludm9sdmVzIGEgbG90IG9mIGRpdmVyc2lvbnMgYW5kIGNoYWxsZW5nZXMuIEJlaW5nIGFibGUgdG8gb3ZlcmNvbWUgdGhlc2Ugb2JzdGFjbGVzIGFuZCB0byBjb25zaXN0ZW50bHkgZGVsaXZlciBxdWFsaXR5IGlzIGNyaXRpY2FsLiBUaGlzIHJlcXVpcmVzIHN0YXlpbmcgZm9jdXNlZCAmYW1wOyBwcm9hY3RpdmUsIG1haW50YWluaW5nIGdvb2QgZG9jdW1lbnRhdGlvbiwgbWFuYWdpbmcgdGltZSBlZmZlY3RpdmVseSwgYW5kIGNvbWZvcnQgd2l0aCA8YSBocmVmPSJodHRwczovL3JlbW90ZS50b29scyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+dG9vbHMgdGhhdCBhaWQgcmVtb3RlIHdvcmtpbmc8T3V0Ym91bmRMaW5rLz48L2E+LjwvcD4KPHA+SXQgbWlnaHQgYmUgZGlmZmljdWx0IHRvIGdhdWdlIGEgZnJlZWxhbmNlIGRldmVsb3BlcuKAmXMgcHJvZmljaWVuY3kgaW4gdGhlIGFib3ZlLW1lbnRpb25lZCBza2lsbHMuIFNvLCB1c2luZyB0aGVpciBwcmlvciByZWNvcmQgb2Ygd29ya2luZyB1bmRlciBzaW1pbGFyIGNvbmRpdGlvbnMgZm9yIG90aGVyIHJlbW90ZSB0ZWFtcyBjYW4gYmUgYSBncmVhdCBpbmRpY2F0b3IuPC9wPgo8aDQgaWQ9Il80LXB1bmN0dWFsaXR5LXJlbGlhYmlsaXR5Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI180LXB1bmN0dWFsaXR5LXJlbGlhYmlsaXR5Ij4jPC9hPiA0LiBQdW5jdHVhbGl0eSAmYW1wOyBSZWxpYWJpbGl0eTwvaDQ+CjxwPkl0IGlzIGltcGVyYXRpdmUgdGhhdCB0aGUgZnJlZWxhbmNlciBpcyBwdW5jdHVhbC4gVGhpcyBob2xkcyBub3Qgb25seSBmb3IgZGVsaXZlcmluZyB0aGUgcmVxdWlyZWQgY29kZSBvbiB0aW1lLCBidXQgYWxzbyBmb3IgdGVhbSBtZWV0aW5ncywgc3RhbmQtdXBzLCBldGMuIElmIHRoZXkgYXJlbuKAmXQgcHVuY3R1YWwsIHRoZXkgd291bGQgYmUgaGFtcGVyaW5nIHRoZSBwcm9kdWN0aXZpdHkgb2YgdGhlIGVudGlyZSB0ZWFtLiBJbiBhIHBsYWNlIHdoZXJlIG9wcG9ydHVuaXRpZXMgZm9yIGludGVyYWN0aW9ucyBhcmUgYWxyZWFkeSBsaW1pdGVkLCB0aGlzIGlzIGV2ZW4gbW9yZSBwcm9ub3VuY2VkLjwvcD4KPHA+SW4gYWRkaXRpb24sIHRoZXkgbXVzdCBiZSByZWxpYWJsZSBhbmQgZGVsaXZlciBvbiB0aGVpciBwcm9taXNlcy4gQWdhaW4sIHNpbmNlIGl0IGlzIGhhcmQgdG8gb2JqZWN0aXZlbHkgZ2F1Z2UgYSBkZXZlbG9wZXLigJlzIHB1bmN0dWFsaXR5IG9yIHJlbGlhYmlsaXR5LCBpbnNpZ2h0cyBmcm9tIHRoZWlyIHBhc3QgY2xpZW50IHJlZmVyZW5jZXMgd291bGQgaGVscCBhIGxvdC48L3A+CjxwPlRoaXMgY291bGQgYWxzbyBiZSBhc3Nlc3NlZCBiYXNlZCBvbiB0aGUgaW50ZXJhY3Rpb25zIGR1cmluZyB0aGUgZXZhbHVhdGlvbiBwcm9jZXNzLiBUaGlzIGluY2x1ZGVzIHJlc3BvbnNpdmVuZXNzIG9uIHJlcGxpZXMsIHJlbGlhYmlsaXR5IGluIGRlbGl2ZXJ5IG9mIGV2ZW4gbm9uLXdvcmsgcmVsYXRlZCBpdGVtcywgZXRjLiBCZWZvcmUgc3RhcnRpbmcgdGhlIGVuZ2FnZW1lbnQsIGl0IGJvZGVzIHdlbGwgdG8gaGF2ZSBhIHNob3J0LXRlcm0gdHJpYWwgcHJvamVjdCAoZXZlbiBwYWlkKS4gVGhpcyB3b3VsZCBiZSBiZW5lZmljaWFsIHRvIGJvdGggcGFydGllcywgdG8gYXNzZXNzIGZpdC48L3A+CjxoMiBpZD0iaG93LWRvLXdlLWV2YWx1YXRlLWRldmVsb3BlcnMtYXQtZmxleGlwbGUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjaG93LWRvLXdlLWV2YWx1YXRlLWRldmVsb3BlcnMtYXQtZmxleGlwbGUiPiM8L2E+IEhvdyBkbyB3ZSBldmFsdWF0ZSBkZXZlbG9wZXJzIGF0IEZsZXhpcGxlPzwvaDI+CjxwPkF0IEZsZXhpcGxlLCB3ZSBoYXZlIGV2YWx1YXRlZCAxNiwwMDArIGZyZWVsYW5jZSBkZXZlbG9wZXJzIGFjcm9zcyB0aGUgd29ybGQgb3ZlciB0aGUgbGFzdCB0aHJlZSB5ZWFycy4gQXMgb25lIGNhbiBpbWFnaW5lLCB0aGlzIHdvdWxkbuKAmXQgaGF2ZSBiZWVuIHBvc3NpYmxlIHdpdGhvdXQgYSBzdHJlYW1saW5lZCBwcm9jZXNzLiBXZSBoYWQgdG8gaXRlcmF0ZSBtdWx0aXBsZSB0aW1lcyB0byBhcnJpdmUgYXQgb3VyIDYtc3RlcCBzY3JlZW5pbmcgcHJvY2Vzcy4gVGhpcyBlbnN1cmVzIHRoYXQgd2UgaGF2ZSBhIGhvbGlzdGljIHZpZXcgb24gZXZlcnkgcGVyc29uIHdoaWxlIHN0aWxsIG9wdGltaXNpbmcgZm9yIHRpbWUgJmFtcDsgZWZmb3J0IG9mIGFsbCBwYXJ0aWVzIGludm9sdmVkLjwvcD4KPHA+VG8gaGVscCBvdGhlcnMgd2hvIHdvdWxkIGxpa2UgdG8gaW1wbGVtZW50IGEgc2ltaWxhciBldmFsdWF0aW9uIHByb2Nlc3MsIHdlIGhhdmUgZGV0YWlsZWQgdGhlIHNhbWUgYmVsb3cuPC9wPgo8aDQgaWQ9Il8xLWRlcHRoLWluLXBhc3Qtd29yayI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfMS1kZXB0aC1pbi1wYXN0LXdvcmsiPiM8L2E+IDEuIERlcHRoIGluIHBhc3Qgd29yazwvaDQ+CjxwPldlIGFzayBlYWNoIGRldmVsb3BlciB0byBmaWxsIGEgc2ltcGxlIHByb2ZpbGUgZm9ybS4gVGhpcyBmb3JtIGluY2x1ZGVzIGEgZ2VuZXJpYyBkZXNjcmlwdGlvbiBvZiBvbmVzZWxmLCB0aGUgdGVjaG5vbG9naWVzIHRoZXkgYXJlIHByb2ZpY2llbnQgaW4gYW5kIHRoZWlyIENWcy4gV2UgdGhlbiByZXZpZXcgZGV2ZWxvcGVycyBiYXNlZCBvbiB0aGUgeWVhcnMgJmFtcDsgcXVhbGl0eSBvZiBleHBlcmllbmNlIGFuZCBjb21wbGV4aXR5IG9mIHByb2R1Y3RzIGJ1aWx0LiBUaGUgYW5zd2VycyBnaXZlbiBieSB0aGUgZGV2ZWxvcGVycyBhbHNvIGhlbHAgdXMgZ2F1Z2UgdGhlaXIgd3JpdHRlbiBjb21tdW5pY2F0aW9uIHNraWxscy48L3A+CjxwPk9ubHkgdGhlIGRldmVsb3BlcnMgd2hvIGRpc3BsYXkgZGVwdGggaW4gZXhwZXJpZW5jZSBhbmQgaGF2ZSB3b3JrZWQgb24gZW5kLXRvLWVuZCBwcm9qZWN0cyBhcmUgc2VsZWN0ZWQgZm9yIHRoZSBuZXh0IHN0ZXAsIHdoaWNoIGlzIGFuIGludHJvZHVjdG9yeSBjYWxsLiBUaGlzIGhlbHBzIHVzIHRvIGZvY3VzIGFuZCBkZWVwIGRpdmUgaW50byB0aGUgbW9zdCBwcm9taXNpbmcgY2FuZGlkYXRlcy48L3A+CjxoNCBpZD0iXzItZ29vZC1jb21tdW5pY2F0aW9uLWFuZC1tb3RpdmF0aW9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18yLWdvb2QtY29tbXVuaWNhdGlvbi1hbmQtbW90aXZhdGlvbiI+IzwvYT4gMi4gR29vZCBjb21tdW5pY2F0aW9uIGFuZCBtb3RpdmF0aW9uPC9oND4KPHA+T3ZlciBhIGNhbGwsIHdlIHVzZSB0aGUgbm90ZXMgbWFkZSBpbiB0aGUgcHJldmlvdXMgcm91bmQgdG8gdGVzdCB0aGUgZGVwdGggb2YgdGhlIGRldmVsb3BlcuKAmXMgZXhwZXJpZW5jZS4gV2UgYXNrIHByb2JpbmcgcXVlc3Rpb25zIGFib3V0IHRoZSBwcm9kdWN0cyB0aGV54oCZdmUgYnVpbHQuIFdlIGFyZSBoZW5jZSBhYmxlIHRvIHRlc3QgdGhlaXIgYWJpbGl0eSB0byBhbnN3ZXIgcXVlc3Rpb25zIGNvbXByZWhlbnNpdmVseSBhbmQgaW4gYW4gYXJ0aWN1bGF0ZSBtYW5uZXIuIFRoaXMgaGVscHMgdXMgdW5kZXJzdGFuZCB0aGUgY29uZmlkZW5jZSB0aGV5IGhhdmUgaW4gdGhlaXIgYWJpbGl0aWVzIGFuZCBhbHNvIHRoZSBxdWFsaXR5IG9mIHZlcmJhbCBjb21tdW5pY2F0aW9uLjwvcD4KPHA+T24gdGhlIG5vbi10ZWNobmljYWwgc2lkZSwgd2UgYWxzbyBhY2hpZXZlIGEgZGVlcGVyIHVuZGVyc3RhbmRpbmcgb2YgdGhlIGNhbmRpZGF0ZeKAmXMgbW90aXZhdGlvbiB0byBmcmVlbGFuY2UsIHBhc3QgcmVtb3RlIHdvcmtpbmcgZXhwZXJpZW5jZSwgYW5kIHRoZSBjaGFsbGVuZ2VzIHRoYXQgdGhleeKAmXZlIHNvbHZlZC4gVGhlc2UgaW5wdXRzIGhlbHAgdXMgYXNzZXNzIGlmIHRoZXkgYXJlIGEgZ29vZCBmaXQgZm9yIG91ciBuZXR3b3JrLjwvcD4KPGg0IGlkPSJfMy1zdHJvbmctdGVjaG5pY2FsLWFiaWxpdGllcyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfMy1zdHJvbmctdGVjaG5pY2FsLWFiaWxpdGllcyI+IzwvYT4gMy4gU3Ryb25nIHRlY2huaWNhbCBhYmlsaXRpZXM8L2g0Pgo8cD5PdmVyIG9uZSBvciBtb3JlIEYyRiBpbnRlcnZpZXdzLCB3ZSBjb21wcmVoZW5zaXZlbHkgYXNzZXNzIHRoZSBkZXZlbG9wZXLigJlzIGludm9sdmVtZW50IGFuZCB0aGVpciBwZXJmb3JtYW5jZSBpbiBidWlsZGluZyBjb21wbGV4IHNvZnR3YXJlIHByb2R1Y3RzLiBUaGlzIHNldHMgdGhlIHBsYXRmb3JtIHRvIGRlbHZlIGRlZXBlciBpbnRvIHRlY2hub2xvZ3ktc3BlY2lmaWMgZGlzY3Vzc2lvbnMgd2hlcmUgdGhlIGRldmVsb3BlcuKAmXMga25vd2xlZGdlIGluIHNwZWNpZmljIHRlY2hub2xvZ2llcyBjYW4gYmUgYWRqdWRnZWQuPC9wPgo8cD5UaGlzIHN0ZXAgcmVxdWlyZXMgdGhlIGludm9sdmVtZW50IG9mIHNlbmlvciB0ZWNoIGV4cGVydHMuIFRoZSBpbnNpZ2h0cyBvYnRhaW5lZCBpbiB0aGlzIHN0ZXAgYWxsb3cgdXMgKGFuZCBzaW1pbGFybHkgY291bGQgaGVscCB5b3UpIHRvIG1hdGNoIHRoZSBmcmVlbGFuY2VyIHdpdGggdGhlIHJpZ2h0IHByb2plY3RzIGJhc2VkIG9uIHRoZWlyIHNraWxsIHNldHMuPC9wPgo8aDQgaWQ9Il80LWtlZW4tcHJvYmxlbS1zb2x2aW5nLWFuZC1jb2RpbmciPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzQta2Vlbi1wcm9ibGVtLXNvbHZpbmctYW5kLWNvZGluZyI+IzwvYT4gNC4gS2VlbiBwcm9ibGVtIHNvbHZpbmcgYW5kIGNvZGluZzwvaDQ+CjxwPkEgZ29vZCBkZXZlbG9wZXIgbmVlZHMgdG8gaGF2ZSBhIG1peCBvZiBnb29kIHRlY2huaWNhbCBleHBlcmllbmNlIGFuZCBhbHNvIHByb2JsZW0tc29sdmluZyBhYmlsaXR5LiBUbyB0ZXN0IHRoZWlyIHRlY2huaWNhbCBwcm9maWNpZW5jeSwgd2UgdXNlIHNraWxsLXNwZWNpZmljIHByb2JsZW1zLiBUbyBhZGp1ZGdlIHRoZWlyIHByb2JsZW0tc29sdmluZyBhYmlsaXR5LCB3ZSB1c2UgYSBsaXZlIGNvZGluZyB0ZXN0IGludm9sdmluZyBhbGdvcml0aG1pYyBwcm9ibGVtcy48L3A+CjxwPlRoZXNlIHRlc3RzIGFsbG93IHVzIHRvIG1pbWljIGEgcmVhbC1saWZlLCBoaWdoLXByZXNzdXJlIHNpdHVhdGlvbi4gVGhlcmVieSwgd2UgY2FuIGdldCBhIHByb3h5IG9mIGhvdyBhIGZyZWVsYW5jZXIgbWlnaHQgcmVhY3QgYW5kIHBlcmZvcm0gaW4gc2ltaWxhciBjaXJjdW1zdGFuY2VzLjwvcD4KPGg0IGlkPSJfNS1zcGxlbmRpZC1yZXZpZXdzLWluLWJhY2tncm91bmQtY2hlY2siPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzUtc3BsZW5kaWQtcmV2aWV3cy1pbi1iYWNrZ3JvdW5kLWNoZWNrIj4jPC9hPiA1LiBTcGxlbmRpZCByZXZpZXdzIGluIGJhY2tncm91bmQgY2hlY2s8L2g0Pgo8cD5BcyBkaXNjdXNzZWQgZWFybGllciwgY2xpZW50IHJlZmVyZW5jZXMgYXJlIGEgZ3JlYXQgd2F5IHRvIGdldCB2YWx1YWJsZSBpbnNpZ2h0cyBvbiBob3cgYSBkZXZlbG9wZXIgcGVyZm9ybXMgaW4gcmVhbC1saWZlIHNpdHVhdGlvbnMuIFdlIG9idGFpbiBpbnB1dHMgb24gYSB2YXJpZXR5IG9mIHF1YWxpdGF0aXZlIGZhY3RvcnMgc3VjaCBhcyByZWxpYWJpbGl0eSwgcHVuY3R1YWxpdHksIGNvbW11bmljYXRpb24sIGFuZCByZXNwb25zaXZlbmVzcy4gVGhpcyBpcyB2ZXJ5IGhlbHBmdWwgYXMgc3VjaCBpbnB1dHMgYXJlIG90aGVyd2lzZSBkaWZmaWN1bHQgdG8gYXNzZXNzIG9ubHkgdGhvdWdoIGEgMS1vbi0xIHNjcmVlbmluZy48L3A+CjxoNCBpZD0iXzYtY29uc2lzdGVudC1leGVtcGxhcnktcGVyZm9ybWFuY2UiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzYtY29uc2lzdGVudC1leGVtcGxhcnktcGVyZm9ybWFuY2UiPiM8L2E+IDYuIENvbnNpc3RlbnQgZXhlbXBsYXJ5IHBlcmZvcm1hbmNlPC9oND4KPHA+V2hpbGUgdGhlIGV2YWx1YXRpb24gdG8gdGhpcyBwb2ludCBpcyBleHRyZW1lbHkgY29tcHJlaGVuc2l2ZSwgY29uc2lzdGVudCBwZXJmb3JtYW5jZSBkdXJpbmcgZWFjaCBlbmdhZ2VtZW50IG5lZWRzIHRvIGJlIGRlbGl2ZXJlZC4gT3VyIGRldmVsb3BlcnMgYXJlIGV4cGVjdGVkIHRvIG1haW50YWluIEZsZXhpcGxlIHN0YW5kYXJkcyBhY3Jvc3MgYWxsIGVuZ2FnZW1lbnRzIHdpdGggb3VyIGN1c3RvbWVycy4gRXZlbiB5b3Ugc2hvdWxkIGtlZXAgcmVndWxhciBhcHByYWlzYWxzIHRvIGVuc3VyZSB0aGF0IHBlcmZvcm1hbmNlIHJlbWFpbnMgZXhlbXBsYXJ5LjwvcD4KPHA+VGhpcyBjb250aW51b3VzIGV2YWx1YXRpb24gaXMgY2FycmllZCBvdXQgYnkgY29uc2lkZXJpbmcgYSBob3N0IG9mIGZhY3RvcnMuIEZvciBleGFtcGxlLCB0aGUgcXVhbGl0eSBvZiBjb2RlIGRlbGl2ZXJlZCwgZG9jdW1lbnRhdGlvbiBwcmFjdGljZXMgZm9sbG93ZWQsIGFiaWxpdHkgdG8gcmFtcCB1cCwgYW5kIHNvZnRlciBhc3BlY3RzIG9mIHJlc3BvbnNpdmVuZXNzLCByZWxpYWJpbGl0eSwgZXRjLjwvcD4KPGgzIGlkPSJjbG9zaW5nLXRob3VnaHRzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2Nsb3NpbmctdGhvdWdodHMiPiM8L2E+IENsb3NpbmcgdGhvdWdodHM8L2gzPgo8cD5UaGUgaW1wbGljYXRpb25zIG9mIG1ha2luZyBhIGJhZCBoaXJlIGFyZSB0b28gcHJvbm91bmNlZCDigJMgZGVsYXlzIGluIHByb2R1Y3QgZGV2ZWxvcG1lbnQgY3ljbGVzIGFuZCBsb3N0IG9wcG9ydHVuaXR5IGNvc3RzLiBJdCBtaWdodCBvZnRlbiBiZSB0ZW1wdGluZyB0byBzYXZlIGVmZm9ydCBhbmQgdGltZSBieSBydXNoaW5nIHRocm91Z2ggdGhlIGV2YWx1YXRpb24gcHJvY2VzcywgZXNwZWNpYWxseSBpZiB5b3XigJlyZSBkZWFsaW5nIHdpdGggaHVuZHJlZHMgb2YgYXBwbGljYW50cy4gSG93ZXZlciwgaXQgcmVhbGx5IHBheXMgb2ZmIHRvIGRvIGEgdGhvcm91Z2ggYXNzZXNzbWVudCBvZiBjYW5kaWRhdGVzLjwvcD4KPC9Db250ZW50U2xvdHNEaXN0cmlidXRvcj4K"},null]}