{"remainingRequest":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/Macbook/Documents/projects/remotework2020_new/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/Macbook/Documents/projects/remotework2020_new/docs/README.md?vue&type=template&id=0290eea1&","dependencies":[{"path":"/Users/Macbook/Documents/projects/remotework2020_new/docs/README.md","mtime":1578131561564},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/vue-loader/lib/index.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/remotework2020_new/node_modules/@vuepress/markdown-loader/index.js","mtime":1576060144870}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PHA+PGltZyBzcmM9Ii9hc3NldHMvaW50cm9kdWN0aW9uLnBuZyIgYWx0PSIiPjwvcD4KPHA+Q29tcGFuaWVzIGFyZSBhbHdheXMgb24gdGhlIGxvb2tvdXQgZm9yIG5ldyBsZXZlcnMgdG8gZHJpdmUgZ3Jvd3RoIGFuZCBwcm9maXRhYmlsaXR5LiBJbiB0aGlzIGNvbnRleHQsIGlubm92YXRpb24gaW4gdGFsZW50IG1hbmFnZW1lbnQgaGFzIGFsd2F5cyBiZWVuIGFtb25nc3QgdGhlIG1vc3QgaW1wb3J0YW50IGxldmVycy4gRnJvbSAzNjAtZGVncmVlIGZlZWRiYWNrIGluIHRoZSAxOTUwcywgdG8gb2Zmc2hvcmluZyBidXNpbmVzcyBmdW5jdGlvbnMgZm9yIGNvc3Qgc2F2aW5ncyBpbiBsYXRlIDE5OTBzLCBmaXJtcyBoYXZlIGNvbnN0YW50bHkgYWRhcHRlZCB0aGVtc2VsdmVzIHRvIHRoZSBuZWVkcyBvZiB0aGUgdGFsZW50IG1hcmtldC4gTm93LCBpdCBpcyB0aW1lIGZvciB0aGVtIHRvIGVtYnJhY2UgcmVtb3RlIHdvcmsgd2hvbGVoZWFydGVkbHkuPC9wPgo8aDIgaWQ9Imhpc3Rvcnktb2YtcmVtb3RlLXdvcmsiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjaGlzdG9yeS1vZi1yZW1vdGUtd29yayI+IzwvYT4gPHN0cm9uZz5IaXN0b3J5IG9mIHJlbW90ZSB3b3JrPC9zdHJvbmc+PC9oMj4KPHA+UG9zdCB0aGUgV1dJSSwgYXMgdGhlIHdvcmxkIGVjb25vbXkgc3RhcnRlZCB0byBnYWluIG1vbWVudHVtLCBsYXJnZSBvZmZpY2VzIHdpdGggY3ViaWNsZXMgc3RhcnRlZCB0byBhcHBlYXIuIFdpdGggcGhvbmVzLCBjYXJzIGFuZCBwbGFuZXMgYmVjb21pbmcgbWFpbnN0cmVhbSwgaW50ZXJuYXRpb25hbCBleHBhbnNpb24gc3RhcnRlZCBvbmNlIGFnYWluLCB3aXRoIGNvbXBhbmllcyBoYXZpbmcgcHJlc2VuY2UgYWNyb3NzIG11bHRpcGxlIGNvdW50cmllcy4gQXQgdGhpcyBwb2ludCBvZiB0aW1lLCBjb21wYW55IG9mZmljZXMgd2VyZSBhbHJlYWR5IHdvcmtpbmcgcmVtb3RlbHkgdG8gb25lLWFub3RoZXIuPC9wPgo8cD5CdXQgaXQgd2Fzbid0IHVudGlsIHRoZSBhZHZlbnQgb2YgY29tcHV0ZXJzLCB3aGljaCBhY2NlbGVyYXRlZCB0aGUgZ3Jvd3RoIG9mIHRoZSBrbm93bGVkZ2UgZWNvbm9teSwgYW5kIGxhdGVyIHRoZSBpbnRlcm5ldCwgdGhhdCAmcXVvdDtyZW1vdGUgd29yayZxdW90OyBhcyB3ZSBzZWUgdG9kYXkgc3RhcnRlZCB0byBhcHBlYXIuIFRoZXNlIHRlY2hub2xvZ2llcyBhbGxvd2VkIGluZGl2aWR1YWxzIHRvIGNvbGxhYm9yYXRlIGFuZCBjb250cmlidXRlIHdpdGhvdXQgdGhlIG5lZWQgdG8gYmUgaW4gdGhlIHNhbWUgbG9jYXRpb24uPC9wPgo8cD5NYXNzaXZlIHByb2xpZmVyYXRpb24sIGltcHJvdmVkIHJlbGlhYmlsaXR5IGFuZCBlYXN5IGFjY2VzcyBvZiB0aGVzZSB0ZWNobm9sb2dpZXMgaGFzIHNpbmNlICBtYWRlIHJlbW90ZSB3b3JrIGV2b2x2ZSBmcm9tIGFuIG9jY2FzaW9uYWwgZW1wbG95ZWUgbmVjZXNzaXR5LCB0byBjb21wYW55LXByb3ZpZGVkIHBlcmsgdG8gbm93LCBhIHNlcmlvdXMgd2F5IG9mIHdvcmtpbmcuPC9wPgo8aDIgaWQ9ImVuY291cmFnaW5nLXN0YXRzLWZvci1yZW1vdGUtd29yayI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNlbmNvdXJhZ2luZy1zdGF0cy1mb3ItcmVtb3RlLXdvcmsiPiM8L2E+IDxzdHJvbmc+RW5jb3VyYWdpbmcgc3RhdHMgZm9yIHJlbW90ZSB3b3JrPC9zdHJvbmc+PC9oMj4KPG9sPgo8bGk+CjxwPkxldCdzIGp1c3Qgc3RhcnQgd2l0aCBvbmUgb2YgdGhlIG1vc3QgbWluZCBib2dnbGluZyBzdGF0cyByZWxlYXNlZCByZWNlbnRseSBieSBUaGUgRWNvbm9taXN0IC0gdGhlcmUgY291bGQgYmUgb25lIGJpbGxpb24gcmVtb3RlIHdvcmtlcnMgYnkgdGhlIHllYXIgMjAzNSE8L3A+CjwvbGk+CjxsaT4KPHA+U28sIGRvIHdlIGhhdmUgdG8gd2FpdCB0aWxsIDIwMzUgdG8gc2VlIGEgbWFzc2l2ZSBjaGFuZ2UgaW4gcGVvcGxlJ3MgcHJlZmVyZW5jZXMuIEFic29sdXRlbHkgbm90ISBJbiB0aGlzIG5leHQgMi0zIHllYXJzLCBhbiBlc3RpbWF0ZWQgNTkgbWlsbGlvbiBwZW9wbGUgYXJlIGNvbnNpZGVyaW5nIHRoZSBsaWZlIG9mIGEgZGlnaXRhbCBub21hZCDwn5i1PC9wPgo8L2xpPgo8bGk+CjxwPk9uIHRoZSBlbXBsb3llcnMnIHNpZGUsIDQzJSBpbiB0aGUgVVMgc2FpZCB0aGV5IHBsYW4gdG8gYWxsb3cgdGhlaXIgZW1wbG95ZWVzIHRvIGhhdmUgbW9yZSByZW1vdGUgd29ya2luZyBvcHBvcnR1bml0aWVzIGluIHRoZSBuZXh0IHllYXIg8J+YjS48L3A+CjwvbGk+CjxsaT4KPHA+VGhpcyBpbmNyZWFzZSBpbiByZW1vdGUgaW50ZXJlc3QgYW1vbmdzdCBlbXBsb3llcnMgY2FuIGJlIG9ic2VydmVkIGluIHRoZSBzdGVlcCByaXNlIGluIGpvYnMgcG9zdGVkIG9uIHJlbW90ZSBqb2IgYm9hcmRzICZhbXA7IHBvcnRhbHMgc3VjaCBhcyBXZSBXb3JrIFJlbW90ZWx5ICZhbXA7IEZsZXhqb2JzLiBUaGUgZm9ybWVyIGlzIHVwIGZyb20gMzE3IGpvYnMgaW4gMjAxMyB0byBhIHdob3BwaW5nIDIzODggaW4gMjAxOCDwn5OILiBBcyBmb3IgRmxleEpvYnMsIGl0IHNhdyBhIDUyJSBpbmNyZWFzZSBpbiB0ZWxlY29tbXV0ZS1mcmllbmRseSBqb2JzIHBvc3RlZCBpbiB0aGUgcGFzdCB0d28geWVhcnMuPC9wPgo8L2xpPgo8L29sPgo8aDIgaWQ9ImltcG9ydGFudC1sYW5kbWFya3MtaW4tcmVtb3RlLXdvcmstMjAyMCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNpbXBvcnRhbnQtbGFuZG1hcmtzLWluLXJlbW90ZS13b3JrLTIwMjAiPiM8L2E+IEltcG9ydGFudCBMYW5kbWFya3MgaW4gUmVtb3RlIFdvcmsgMjAyMDwvaDI+Cjx1bD4KPGxpPkdpdGxhYidzIElQTyBpbiBMYXRlIDIwMjA8L2xpPgo8bGk+SW52aXNpb24gJmFtcDsgR2l0bGFiIGNyb3NzIHRoZSAxMDAwIGVtcGxveWVlcyBtYXJrPC9saT4KPGxpPkJvc3RvbiwgVmVybW9udCwgVHVsc2EgYW1vbmcgb3RoZXIgY2l0aWVzIGFuZCBzdGF0ZXMgaW4gdGhlIFVTIG9mZmVyIGluY2VudGl2ZXMgdG8gcmVtb3RlIHdvcmtlcnMgaW4gdGhlIGZvcm0gb2YgdGF4IGJyZWFrcyBhbmQgcmVsb2NhdGlvbiBzdWJzaWRpZXM8L2xpPgo8bGk+VG9reW8gdGVzdHMgb3V0IGEgdHJpYWwgcmVtb3RlIHdvcmtpbmcgcG9saWN5IHRvIGVuY291cmFnZSBpbmRpdmlkdWFscyB0byB3b3JrIGZyb20gaG9tZSBhbmQgdW5ibG9jayB0aGUgcHVibGljIHRyYW5zcG9ydCBzeXN0ZW0gaW4gcHJlcGFyYXRpb24gZm9yIDIwMjAgT2x5bXBpYyBnYW1lczwvbGk+CjxsaT5SZW1vdGUgRmlyc3QgQ2FwaXRhbCBtYWtlcyBpdHMgZmlyc3QgZmV3IGludmVzdG1lbnRzPC9saT4KPC91bD4KPGgyIGlkPSJ0d2VldHMtYW5kLXF1b3Rlcy1ieS10b3AtbGVhZGVycyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiN0d2VldHMtYW5kLXF1b3Rlcy1ieS10b3AtbGVhZGVycyI+IzwvYT4gPHN0cm9uZz5Ud2VldHMgYW5kIFF1b3RlcyBieSB0b3AgbGVhZGVyczwvc3Ryb25nPjwvaDI+CjxwPiZxdW90O0lmIHdlIHdlcmUgdG8gc3RhcnQgb3ZlciBJIHdvdWxkIGhhdmUgYnVpbHQgWm9vbSBmdWxseSByZW1vdGUuIEl0J3MgdG9vIGV4cGVuc2l2ZSBoZXJlIG5vdy4mcXVvdDs8L3A+CjxwPi0gPHN0cm9uZz5FcmljIFl1YW4sIENFTyAtIFpvb208L3N0cm9uZz48L3A+CjxibG9ja3F1b3RlPgo8cD4mcXVvdDsmbHQ7UXVvdGUgYXJvdW5kIGVhY2ggY29tcGFueSBiZWluZyB2aWFibGUgZm9yIHJlbW90ZSB3b3JraW5nJmd0OyAtIERhcnJlbiBNdXJwaCwgQWxsIFJlbW90ZSBDdWx0dXJlIEN1cmF0b3IgLSBHaXRsYWI8L3A+CjwvYmxvY2txdW90ZT4KPGgyIGlkPSJleHBsb3JpbmctdGhlLXJlbW90ZS13b3JrLTIwMjAtcmVwb3J0Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2V4cGxvcmluZy10aGUtcmVtb3RlLXdvcmstMjAyMC1yZXBvcnQiPiM8L2E+IEV4cGxvcmluZyB0aGUgUmVtb3RlIFdvcmsgMjAyMCByZXBvcnQ8L2gyPgo8cD5UaGUgUmVtb3RlIFdvcmsgMjAyMCByZXBvcnQgaXMgbWVhbnQgdG8gYmUgYSBjb21iaW5hdGlvbiBvZiB0aHJlZSBicm9hZCBzZWN0aW9uczo8L3A+Cjx1bD4KPGxpPjxzdHJvbmc+U3RhdGUgb2YgUmVtb3RlIFdvcmsgMjAyMDwvc3Ryb25nPjogU3RhdHMgJmFtcDsgZmlndXJlcyBiYXNlZCBvbiBvdXIgc3VydmV5IG9mICZsdDt4eCZndDsgcmVtb3RlIHdvcmtlcnMgZnJvbSBJbnZpc2lvbiwgR2l0bGFiLCBEb2lzdCBhbmQgbWFueSBtb3JlIGRpc3RyaWJ1dGVkIHRlYW1zITwvbGk+CjxsaT48c3Ryb25nPlJlbW90ZSB3b3JrIGd1aWRlPC9zdHJvbmc+OiBPdXIgY29tbWVudGFyeSBvbiBwcmVzc2luZyB0b3BpY3MgYXJvdW5kIHJlbW90ZSB3b3JrIGJhc2VkIG9uIGxlYXJuaW5ncyBmcm9tIGludGVyYWN0aW9ucyB3aXRoIGxlYWRlcnMgb2YgZGlzdHJpYnV0ZWQgdGVhbXMgYW5kIHN1Y2Nlc3NmdWwgcmVtb3RlIHdvcmtlcnMuPC9saT4KPGxpPjxzdHJvbmc+UG9kY2FzdHMgJmFtcDsgc3Rvcmllczwvc3Ryb25nPjogVGhlIGFjdHVhbCBzb3VyY2Ugb2YgdHJ1dGggZm9yIHVzIPCfmIAuIFRoZSBjb2xsZWN0aW9uIG9mIHBvZGNhc3RzIHdpdGggbGVhZGVycyBmcm9tIEdpdGxhYiwgSW52aXNpb24sIERvaXN0LCBTY3JhcGluZ2h1YiwgRmxleEpvYnMsIGV0Yy4gYW5kIGNocm9uaWNsZXMgb2YgcmVtb3RlIHdvcmtlcnMgLSB0aGUgcGVvcGxlIHdlIGhhdmUgbGVhcm50IHRoZSBpbnRyaWNhY2llcyBvZiByZW1vdGUgd29yayBmcm9tITwvbGk+CjwvdWw+CjxwPkVhY2ggb2YgdGhlc2Ugc2VjdGlvbnMgaGFzIGJlZW4gZnVydGhlciBzdWItZGl2aWRlZCBpbnRvIG1vcmUgZm9jdXNlZCB0b3BpY3MgdGhhdCB3ZSBoYXZlIHRyaWVkIHRvIHVuY292ZXIuIFVzZSB0aGUgbmF2aWdhdGlvbiBvbiB0aGUgbGVmdCB0byBjaG9vc2Ugc3BlY2lmaWMgbmFycmF0aXZlcyB0aGF0IGludGVyZXN0IHlvdSDwn5isITwvcD4KPHA+R29lcyB3aXRob3V0IHNheWluZyAtIGlmIHlvdSBoYXZlIGFueSBmZWVkYmFjaywgZmVlbCBmcmVlIHRvIGRyb3AgYSBtYWlsIHRvIGhyaXNoaWtlc2hAcmVtb3RlLnRvb2xzLjwvcD4KPC9Db250ZW50U2xvdHNEaXN0cmlidXRvcj4K"},null]}