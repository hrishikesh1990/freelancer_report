{"remainingRequest":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/Macbook/Documents/projects/FreelancerReport2020/docs/3d-remote-first-or-remote-friendly.md?vue&type=template&id=f3d93602&","dependencies":[{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/docs/3d-remote-first-or-remote-friendly.md","mtime":1582710956429},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/cache-loader/dist/cjs.js","mtime":1576060144534},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/vue-loader/lib/index.js","mtime":1576060144779},{"path":"/Users/Macbook/Documents/projects/FreelancerReport2020/node_modules/@vuepress/markdown-loader/index.js","mtime":1582710536446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PHA+PGltZyBzcmM9Ii9hc3NldHMvYmVpbmdfcmVtb3RlX2ZpcnN0LnBuZyIgYWx0PSIiPjwvcD4KPGgxIGlkPSJiZWluZy1yZW1vdGUtZmlyc3QiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjYmVpbmctcmVtb3RlLWZpcnN0Ij4jPC9hPiBCZWluZyByZW1vdGUtZmlyc3Q8L2gxPgo8cD5XaGVuIEkgd2FzIGZpcnN0IGludHJvZHVjZWQgdG8gdGhlIGNvbmNlcHQgb2YgcmVtb3RlIHdvcmtpbmcsIEkgbmV2ZXIgdHJ1bHkgYXBwcmVjaWF0ZWQgdGhlIHZhcmlvdXMgbGV2ZWxzIG9mIHJlbW90ZSB0aGF0IGEgY29tcGFueSBjb3VsZCBhZG9wdC4gQmVsb3cgaXMgYSBncmFwaGljIGNyZWF0ZWQgYnkgQnVmZmVyIHRoYXQgdHJpZXMgdG8gY2F0ZWdvcmlzZSB0aGUgd2F5IGEgY29tcGFueSBjb3VsZCBhcHByb2FjaCByZW1vdGUgd29ya2luZy48L3A+CjxwPjxpbWcgc3JjPSJodHRwczovL3N0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vc2xpdGUtYXBpLWZpbGVzLXByb2R1Y3Rpb24vZmlsZXMvYWVlYWY4YjgtN2VjNi00MTlkLWE2MDgtYzM2ODZiYTBhODkwL2ltYWdlLnBuZyIgYWx0PSIiPjwvcD4KPHA+U28sIHdlIGNhbiBzZWUgdGhhdCBpdCBpcyBub3QgcmVhbGx5IGEgMCB0byAxIHN3aXRjaC4gVGhlcmUgYXJlIG1hbnkgaW50ZXJtZWRpYXRlIGxldmVscyB0aGF0IGNvdWxkIGFsc28gYmUgaW1wbGVtZW50ZWQuPC9wPgo8cD5BdCB0aGUgY29yZSBvZiB0aGlzIGdyYXBoaWMgaXMgdGhlIG1lbnRhbGl0eSBiZWhpbmQgb3B0aW5nIGZvciBlbXBsb3llZXMgdG8gd29yayByZW1vdGVseS4gSXMgaXQgYmVpbmcgYXBwcm9hY2hlZCBhcyBhIHBlcmssIGFuIGVuYWJsZXIgb3IgYSB3YXkgb2YgbGlmZT8gVGhlIHVuZGVybHlpbmcgbW90aXZlIGRvZXMgbWF0dGVyLCBhcyBpdCBoYXMgYSBydWItb2ZmIGVmZmVjdCBvbiB0aGUgd29ya2luZyBlbnZpcm9ubWVudCBhbmQgZ2VuZXJhbCB0ZWFtIGN1bHR1cmUuPC9wPgo8aDIgaWQ9IndoYXQtaXMtdGhlLWRpZmZlcmVuY2UiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjd2hhdC1pcy10aGUtZGlmZmVyZW5jZSI+IzwvYT4gV2hhdCBpcyB0aGUgZGlmZmVyZW5jZT88L2gyPgo8cD5Gb3IgZWFzZSBvZiBjb21wYXJpc29uLCB0aGlzIHVuZGVybHlpbmcgbW90aXZhdGlvbiBjYW4gYmUgY2F0ZWdvcmlzZWQgYXMgYmVpbmcgZWl0aGVyIHJlbW90ZS1mcmllbmRseSBPUiByZW1vdGUtZmlyc3QuIFRoZSBiYXNpYyBkaWZmZXJlbmNlIGlzIHRoYXQgaW4gdGhlIGZvcm1lciB3ZSB3b3VsZCBjaG9vc2UgdG8gJnF1b3Q7YWxsb3cmcXVvdDsgZW1wbG95ZWVzIHRvIHdvcmsgcmVtb3RlbHkgcmF0aGVyIHRoYW4gJnF1b3Q7ZW1wb3dlcmluZyZxdW90OyB0aGVtIHRvIGRvIHNvLCBhcyBpbiB0aGUgbGF0dGVyLiBCZWluZyByZW1vdGUtZnJpZW5kbHkgcmVzdWx0cyBpbiByZW1vdGUgdGVhbSBtZW1iZXJzIGZhbGxpbmcgdG8gdGhlIGJvdHRvbSDwn5iuLjwvcD4KPHA+U2luY2UsIGl0IG1pZ2h0IG5vdCBiZSBlbnRpcmVseSBjbGVhciB3aHkgdGhpcyB3b3VsZCBoYXBwZW4sIGxldCdzIHRyeSB0byBsb29rIGF0IHRoaXMgdGhyb3VnaCBhbiBleGFtcGxlIG9mIGEgcmVtb3RlLWZyaWVuZGx5IGN1bHR1cmU6PC9wPgo8cD5Db25zaWRlciB5b3VyIHdlZWtseSBvciBtb250aGx5IGluLW9mZmljZSB0ZWFtIG1lZXRpbmdzIHdpdGggcmVtb3RlIHRlYW0gbWVtYmVycyBqb2luaW5nIGluIG9uIGNhbGwuIEl0IGlzIHZlcnkgbGlrZWx5IHRoYXQgc2lkZSBjb252ZXJzYXRpb25zIHNwcmluZyB1cCBuYXR1cmFsbHksIHdpdGggZGlhbGVkLWluIG1lbWJlcnMgbG9zaW5nIGxvdCBvZiBjb250ZXh0IGFuZCB1bHRpbWF0ZWx5IGdldHRpbmcgbWFyZ2luYWxpc2VkIGluIHRoZSBjb252ZXJzYXRpb25zLiBIYXZlbid0IHdlIGFsbCBleHBlcmllbmNlZCB0aGlzIGF0IHNvbWUgcG9pbnQ/PC9wPgo8cD5UaGlzIGNvbnRleHQgZW5hYmxlcyB1cyB0byBwdXQgRXJpYyBZdWFuJ3MgKFpvb20ncyBDRU8pIGZvbGxvd2luZyBjb21tZW50IGluIHBlcnNwZWN0aXZlLCBhcyBpdCBpcyBub3QgYSBzaW1wbGUgZGVjaXNpb24gdG8ganVzdCAmcXVvdDthbGxvdyZxdW90OyBoaXMgdGVhbSB0byBzdGFydCB3b3JraW5nIHJlbW90ZWx5IGZyb20gdG9tb3Jyb3cuPC9wPgo8Q2xpZW50T25seT4KICA8VHdlZXQgaWQ9IjExOTI1MDkxOTY3NDAwODc4MDkiIDpvcHRpb25zPSJ7IGNvbnZlcnNhdGlvbjogJ25vbmUnIH0iIC8+CjwvQ2xpZW50T25seT4KPGgyIGlkPSJob3ctZG8td2UtYnVpbGQtYS10cnVseS1yZW1vdGUtZmlyc3QtY3VsdHVyZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNob3ctZG8td2UtYnVpbGQtYS10cnVseS1yZW1vdGUtZmlyc3QtY3VsdHVyZSI+IzwvYT4gSG93IGRvIHdlIGJ1aWxkIGEgdHJ1bHkgcmVtb3RlLWZpcnN0IGN1bHR1cmU/PC9oMj4KPHA+QnVpbGRpbmcgYSByZW1vdGUtZmlyc3QgY3VsdHVyZSwgYXMgdGhlIG5hbWUgc3VnZ2VzdHMsIGludm9sdmVzIGRlc2lnbmluZyBwcm9jZXNzZXMgdGhhdCBhcmUgZmlyc3QgaW5jbHVzaXZlIG9mIHJlbW90ZSBlbXBsb3llZXMsIHJhdGhlciB0aGFuIHRoYXQgYmVpbmcgYW4gYWZ0ZXJ0aG91Z2h0LiBIZXJlIGFyZSBzb21lIHBvaW50cyB0byBzZXQgdGhlIHJpZ2h0IHRvbmU6PC9wPgo8b2w+CjxsaT48c3Ryb25nPkJlIGludGVudGlvbmFsPC9zdHJvbmc+OiBBY2NvcmRpbmcgdG8gRGFycmVuLCBBbGwgUmVtb3RlIEN1bHR1cmUgQ3VyYXRvciBhdCBHaXRsYWIsIHRoZSBrZXkgZm9yIGV2ZXJ5IGNvbXBhbnkgbG9va2luZyB0byBnbyByZW1vdGUgaXMgdG8gYmUgaGlnaGx5IGludGVudGlvbmFsIGFib3V0IGV2ZXJ5dGhpbmcuIEl0IGlzIHZlcnkgZWFzeSBmb3IgaW5kaXZpZHVhbHMgYW5kIGNvbXBhbmllcyB0byBkZWZhdWx0IHRvIHByb2Nlc3NlcyB0aGF0IHdvdWxkIHdvcmsgaW4gYSB0eXBpY2FsIGNvLWxvY2F0ZWQgc2V0dGluZywgd2hpY2ggY2FuIGJlIHZlcnkgZGFuZ2Vyb3VzLiBUaGVyZWZvcmUsIGEgY29uc2Npb3VzIGFuZCBpbnRlbnRpb25hbCBhcHByb2FjaCB0byBldmVyeWRheSB3b3JrIGlzIG5lZWRlZCB0byBtYWtlIHJlbW90ZSB3b3JrIHN1Y2Nlc3NmdWwuPC9saT4KPC9vbD4KPHA+PGVtPllvdSBjb3VsZCBsaXN0ZW4gdG8gaGltIHNoYXJlIHRoaXMgc3BlY2lmaWMgZmVlZGJhY2sgaGVyZTo8L2VtPiA8YSBocmVmPSJodHRwczovL3NvdW5kY2xvdWQuY29tL3JlbW90ZS10b29scy90aGUtcmVtb3RlLXdvcmtpbmctc2hvdy1kYXJyZW4tbXVycGgtYWxsLXJlbW90ZS1jdWx0dXJlLWN1cmF0b3ItYXQtZ2l0bGFiI3Q9MjA6MjIiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkxpbms8T3V0Ym91bmRMaW5rLz48L2E+PC9wPgo8YmxvY2txdW90ZT4KPHA+4oCcRnJvbSB0aGUgZW1wbG95ZXLigJlzIHN0YW5kcG9pbnQsIHR3byB0aGluZ3MgY29tZSB0byBtaW5kLiBZb3UgbmVlZCB0byBiZSBleHRyZW1lbHkgaW50ZW50aW9uYWwgYWJvdXQgaW5mb3JtYWwgY29tbXVuaWNhdGlvbi4gQW5kIHRoaXMgaXMgYSBiaWcgb25lIGJlY2F1c2Ugd2hlbiB5b3UgYXJlIGluIGEgY28tbG9jYXRlZCBzZXR0aW5nLCBwZW9wbGUgdGVuZCB0byBjcm9zcyBwYXRocyBzbyB0aGV5IGNhbiBtb3JlIG5hdHVyYWxseSBkZXZlbG9wIHJlbGF0aW9uc2hpcHMgaW4gYW5kIG91dHNpZGUgb2Ygd29yayB3aGljaCBnZW5lcmFsbHkgaGVscHMgdGhlIG1vcmFsZSBvZiB0aGUgY29tcGFueS4gSW4gYSByZW1vdGUgc2V0dGluZywgeW91IG5lZWQgdG8gYmUgaW50ZW50aW9uYWwgYWJvdXQgdGhpcy4gU28geW91IG5lZWQgdG8gd2VhdmUgdGhpbmdzIGxpa2UgY29mZmVlIGNoYXRzLCBncm91cCBzb2NpYWwgY2FsbHMsIHRlYW0gc29jaWFsIGNhbGxzLCBjb21wYW55IGNhbGxzLiBZb3UgbmVlZCB0byB3ZWF2ZSB0aGF0IGludG8gdGhlIGN1bHR1cmUgYW5kIGNhcnZlIG91dCB0aW1lIGNvbXBhbnktd2lkZSB0byBtYWtlIHRoaXMgYSB0aGluZy7igJ08L3A+CjxwPjxzdHJvbmc+LSBEYXJyZW4gTXVycGgsIEhlYWQgb2YgUmVtb3RlIGF0IEdpdGxhYjwvc3Ryb25nPjwvcD4KPC9ibG9ja3F1b3RlPgo8b2wgc3RhcnQ9IjIiPgo8bGk+PHN0cm9uZz5EZWZhdWx0IHRvIHZpZGVvY29uZmVyZW5jaW5nIGZvciBtZWV0aW5nczwvc3Ryb25nPjogSnVzdGluZSBKb3JkYW4sIEhlYWQgb2YgTWFya2V0aW5nIGF0IEhlbHBTY291dCwgcHV0IGl0IGJlYXV0aWZ1bGx5IGluIGEgcmVwb3J0IHByZXBhcmVkIGJ5IFRyZWxsby4gU2hlIGVzc2VudGlhbGx5IHN1Z2dlc3RlZCB0aGF0IGlmIGV2ZW4gYSBzaW5nbGUgcGVyc29uIGlzIHJlbW90ZSBmb3IgYSBwYXJ0aWN1bGFyIG1lZXRpbmcsIHRoZW4gZXZlcnlvbmUgZWxzZSBhbHNvIG1vdmVzIHRvIGEgcmVtb3RlIGFwcHJvYWNoLiBUaGlzIGVuc3VyZXMgYSBsZXZlbCBwbGF5aW5nIGZpZWxkIGZvciBhbGwsIHdoZXJlIGlkZWFzIGFuZCBpbmZvcm1hdGlvbiBjYW4gYmUgY29uc3VtZWQgaW4gYW4gZXF1YWwgZmFzaGlvbi48L2xpPgo8L29sPgo8YmxvY2txdW90ZT4KPHA+JnF1b3Q7VW5sZXNzIGV2ZXJ5IHBlcnNvbiBpcyBpbiB0aGUgc2FtZSByb29tLCBhbGwgbWVldGluZ3MgYXJlIGhlbGQgb3ZlciB2aWRlbyBjb25mZXJlbmNlLiBXZeKAmXZlIGFsbCBiZWVuIHRoYXQgb25lIHBlcnNvbiBkaWFsaW5nIGludG8gYSBjYWxsIG9ubHkgdG8gaGVhciBhIHJvb20gZnVsbCBvZiBub2lzZSwgZWNobywgYW5kIHNpZGUgY29udmVyc2F0aW9ucyBvbiB0aGUgb3RoZXIgZW5kLiBJdOKAmXMgYSB0ZXJyaWJsZSBleHBlcmllbmNlLiBTbyB3aGVuIG9uZSBwZXJzb24gaXMg4oCccmVtb3Rl4oCdIGZvciBhIG1lZXRpbmcsIGV2ZXJ5b25lIGlzLjwvcD4KPHA+PHN0cm9uZz4tIEp1c3RpbmUgSm9yZGFuLCBIZWFkIG9mIE1hcmtldGluZyBhdCBIZWxwU2NvdXQ8L3N0cm9uZz48L3A+CjwvYmxvY2txdW90ZT4KPG9sIHN0YXJ0PSIzIj4KPGxpPjxzdHJvbmc+VGVhbSBvZmZzaXRlIGJvbmRpbmc8L3N0cm9uZz46IEl0IGlzIGltcG9ydGFudCBmb3IgcmVtb3RlIHdvcmtlcnMgYW5kIGluLW9mZmljZSBlbXBsb3llZXMgdG8gZ2V0IHRvIG1lZXQgZWFjaCBvdGhlciBvdXRzaWRlIHRoZSBkaWdpdGFsIHNldHRpbmcuIEFwYXJ0IGZyb20gYWN0dWFsbHkgZ2V0dGluZyB0byBrbm93IHBlb3BsZSdzIHBlcnNvbmFsaXRpZXMgYW5kIGZvcm1pbmcgcGVyc29uYWwgYm9uZHMsIHRoaXMgYWxsb3dzIGZvciB0aGVtIHRvIGFsc28gZXhjaGFuZ2UgcGVyc3BlY3RpdmVzLiBUaGlzIG5hdHVyYWxseSBpbXByb3ZlcyBwcm9kdWN0aXZpdHkgYW5kIGNvbGxhYm9yYXRpb24gYXMgbm93IGluZGl2aWR1YWxzIGNhbiByZWxhdGUgdG8gdGhlIHBlb3BsZSB0aGV5IGFyZSB3b3JraW5nIHdpdGggYXQgYSBtdWNoIGJldHRlciBsZXZlbC48L2xpPgo8L29sPgo8YmxvY2txdW90ZT4KPHA+JnF1b3Q7VGhlIFJldHJlYXRzIGFyZSBodWdlLiBJZiB3ZSBkaWRuJ3QgZG8gdGhhdCwgd2Ugd291bGQgaGF2ZSBsb3N0IGEgbG90IG9mIHBlb3BsZS4gQnV0IGJlY2F1c2UgdGhleSBnb3QgdG8ga25vdyBtZSwgbXkgY28tZm91bmRlciwgdGhlaXIgdGVhbXMsIHRoZSBtYW5hZ2VycywgZGV2ZWxvcGVycywgZWFjaCBvdGhlciAtIGl0IGJyaW5ncyBvdXQgYSBzZW5zZSBvZiBiZWxvbmdpbmcuIEl0IGlzIG9ubHkgZm9yIGEgd2VlaywgYnV0IGl0IGlzIHJlYWxseSBiaWchJnF1b3Q7PC9wPgo8cD48c3Ryb25nPi0gRGF2ZSBOZXZvZ3QsIENvLWZvdW5kZXIgJmFtcDsgQ0VPIG9mIEh1YnN0YWZmPC9zdHJvbmc+PC9wPgo8L2Jsb2NrcXVvdGU+Cjxicj4KPGNlbnRlcj4KPGI+UEFSVE5FUlM8L2I+Cjxocj4KPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmxleGlwbGUuY29tIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBjbGFzcz0icGFydG5lci1sb2dvIiBzcmM9Ii9hc3NldHMvZmxleGlwbGUtbG9nby1tb25vZ3JhbS5qcGciIHdpZHRoPTgwLz48L2E+CiZlbXNwOyZlbXNwOyZlbXNwOwo8YSBocmVmPSJodHRwczovL3dld29ya3JlbW90ZWx5LmNvbSIgdGFyZ2V0PSJfYmxhbmsiPjxpbWcgY2xhc3M9InBhcnRuZXItbG9nbyIgc3JjPSIvYXNzZXRzL1dXUi5wbmciIHdpZHRoPTgwLz48L2E+CiZlbXNwOyZlbXNwOyZlbXNwOwo8YSBocmVmPSJodHRwczovL3J1bm5pbmdyZW1vdGUuY29tIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBjbGFzcz0icGFydG5lci1sb2dvIiBzcmM9Ii9hc3NldHMvcnVubmluZy1yZW1vdGUuanBnIiB3aWR0aD04MC8+PC9hPgo8L2NlbnRlcj4KPC9Db250ZW50U2xvdHNEaXN0cmlidXRvcj4K"},null]}